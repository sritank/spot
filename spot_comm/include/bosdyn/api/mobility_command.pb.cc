// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: bosdyn/api/mobility_command.proto

#include "bosdyn/api/mobility_command.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_bosdyn_2fapi_2fbasic_5fcommand_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_SE2TrajectoryCommand_Feedback_bosdyn_2fapi_2fbasic_5fcommand_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_bosdyn_2fapi_2fbasic_5fcommand_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_SE2TrajectoryCommand_Request_bosdyn_2fapi_2fbasic_5fcommand_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_bosdyn_2fapi_2fbasic_5fcommand_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_SE2VelocityCommand_Feedback_bosdyn_2fapi_2fbasic_5fcommand_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_bosdyn_2fapi_2fbasic_5fcommand_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_SE2VelocityCommand_Request_bosdyn_2fapi_2fbasic_5fcommand_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_bosdyn_2fapi_2fbasic_5fcommand_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_SitCommand_Feedback_bosdyn_2fapi_2fbasic_5fcommand_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_bosdyn_2fapi_2fbasic_5fcommand_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_SitCommand_Request_bosdyn_2fapi_2fbasic_5fcommand_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_bosdyn_2fapi_2fbasic_5fcommand_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_StandCommand_Feedback_bosdyn_2fapi_2fbasic_5fcommand_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_bosdyn_2fapi_2fbasic_5fcommand_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_StandCommand_Request_bosdyn_2fapi_2fbasic_5fcommand_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2fprotobuf_2fany_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Any_google_2fprotobuf_2fany_2eproto;
namespace bosdyn {
namespace api {
class MobilityCommand_RequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<MobilityCommand_Request> _instance;
  const ::bosdyn::api::SE2TrajectoryCommand_Request* se2_trajectory_request_;
  const ::bosdyn::api::SE2VelocityCommand_Request* se2_velocity_request_;
  const ::bosdyn::api::SitCommand_Request* sit_request_;
  const ::bosdyn::api::StandCommand_Request* stand_request_;
} _MobilityCommand_Request_default_instance_;
class MobilityCommand_FeedbackDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<MobilityCommand_Feedback> _instance;
  const ::bosdyn::api::SE2TrajectoryCommand_Feedback* se2_trajectory_feedback_;
  const ::bosdyn::api::SE2VelocityCommand_Feedback* se2_velocity_feedback_;
  const ::bosdyn::api::SitCommand_Feedback* sit_feedback_;
  const ::bosdyn::api::StandCommand_Feedback* stand_feedback_;
} _MobilityCommand_Feedback_default_instance_;
class MobilityCommandDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<MobilityCommand> _instance;
} _MobilityCommand_default_instance_;
}  // namespace api
}  // namespace bosdyn
static void InitDefaultsscc_info_MobilityCommand_bosdyn_2fapi_2fmobility_5fcommand_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::bosdyn::api::_MobilityCommand_default_instance_;
    new (ptr) ::bosdyn::api::MobilityCommand();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::bosdyn::api::MobilityCommand::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_MobilityCommand_bosdyn_2fapi_2fmobility_5fcommand_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_MobilityCommand_bosdyn_2fapi_2fmobility_5fcommand_2eproto}, {}};

static void InitDefaultsscc_info_MobilityCommand_Feedback_bosdyn_2fapi_2fmobility_5fcommand_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::bosdyn::api::_MobilityCommand_Feedback_default_instance_;
    new (ptr) ::bosdyn::api::MobilityCommand_Feedback();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::bosdyn::api::MobilityCommand_Feedback::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<4> scc_info_MobilityCommand_Feedback_bosdyn_2fapi_2fmobility_5fcommand_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 4, 0, InitDefaultsscc_info_MobilityCommand_Feedback_bosdyn_2fapi_2fmobility_5fcommand_2eproto}, {
      &scc_info_SE2TrajectoryCommand_Feedback_bosdyn_2fapi_2fbasic_5fcommand_2eproto.base,
      &scc_info_SE2VelocityCommand_Feedback_bosdyn_2fapi_2fbasic_5fcommand_2eproto.base,
      &scc_info_SitCommand_Feedback_bosdyn_2fapi_2fbasic_5fcommand_2eproto.base,
      &scc_info_StandCommand_Feedback_bosdyn_2fapi_2fbasic_5fcommand_2eproto.base,}};

static void InitDefaultsscc_info_MobilityCommand_Request_bosdyn_2fapi_2fmobility_5fcommand_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::bosdyn::api::_MobilityCommand_Request_default_instance_;
    new (ptr) ::bosdyn::api::MobilityCommand_Request();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::bosdyn::api::MobilityCommand_Request::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<5> scc_info_MobilityCommand_Request_bosdyn_2fapi_2fmobility_5fcommand_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 5, 0, InitDefaultsscc_info_MobilityCommand_Request_bosdyn_2fapi_2fmobility_5fcommand_2eproto}, {
      &scc_info_SE2TrajectoryCommand_Request_bosdyn_2fapi_2fbasic_5fcommand_2eproto.base,
      &scc_info_SE2VelocityCommand_Request_bosdyn_2fapi_2fbasic_5fcommand_2eproto.base,
      &scc_info_SitCommand_Request_bosdyn_2fapi_2fbasic_5fcommand_2eproto.base,
      &scc_info_StandCommand_Request_bosdyn_2fapi_2fbasic_5fcommand_2eproto.base,
      &scc_info_Any_google_2fprotobuf_2fany_2eproto.base,}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_bosdyn_2fapi_2fmobility_5fcommand_2eproto[3];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_bosdyn_2fapi_2fmobility_5fcommand_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_bosdyn_2fapi_2fmobility_5fcommand_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_bosdyn_2fapi_2fmobility_5fcommand_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::bosdyn::api::MobilityCommand_Request, _internal_metadata_),
  ~0u,  // no _extensions_
  PROTOBUF_FIELD_OFFSET(::bosdyn::api::MobilityCommand_Request, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  offsetof(::bosdyn::api::MobilityCommand_RequestDefaultTypeInternal, se2_trajectory_request_),
  offsetof(::bosdyn::api::MobilityCommand_RequestDefaultTypeInternal, se2_velocity_request_),
  offsetof(::bosdyn::api::MobilityCommand_RequestDefaultTypeInternal, sit_request_),
  offsetof(::bosdyn::api::MobilityCommand_RequestDefaultTypeInternal, stand_request_),
  PROTOBUF_FIELD_OFFSET(::bosdyn::api::MobilityCommand_Request, params_),
  PROTOBUF_FIELD_OFFSET(::bosdyn::api::MobilityCommand_Request, command_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::bosdyn::api::MobilityCommand_Feedback, _internal_metadata_),
  ~0u,  // no _extensions_
  PROTOBUF_FIELD_OFFSET(::bosdyn::api::MobilityCommand_Feedback, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  offsetof(::bosdyn::api::MobilityCommand_FeedbackDefaultTypeInternal, se2_trajectory_feedback_),
  offsetof(::bosdyn::api::MobilityCommand_FeedbackDefaultTypeInternal, se2_velocity_feedback_),
  offsetof(::bosdyn::api::MobilityCommand_FeedbackDefaultTypeInternal, sit_feedback_),
  offsetof(::bosdyn::api::MobilityCommand_FeedbackDefaultTypeInternal, stand_feedback_),
  PROTOBUF_FIELD_OFFSET(::bosdyn::api::MobilityCommand_Feedback, feedback_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::bosdyn::api::MobilityCommand, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::bosdyn::api::MobilityCommand_Request)},
  { 11, -1, sizeof(::bosdyn::api::MobilityCommand_Feedback)},
  { 21, -1, sizeof(::bosdyn::api::MobilityCommand)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::bosdyn::api::_MobilityCommand_Request_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::bosdyn::api::_MobilityCommand_Feedback_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::bosdyn::api::_MobilityCommand_default_instance_),
};

const char descriptor_table_protodef_bosdyn_2fapi_2fmobility_5fcommand_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n!bosdyn/api/mobility_command.proto\022\nbos"
  "dyn.api\032\036bosdyn/api/basic_command.proto\032"
  "\031google/protobuf/any.proto\"\373\004\n\017MobilityC"
  "ommand\032\300\002\n\007Request\022J\n\026se2_trajectory_req"
  "uest\030\001 \001(\0132(.bosdyn.api.SE2TrajectoryCom"
  "mand.RequestH\000\022F\n\024se2_velocity_request\030\002"
  " \001(\0132&.bosdyn.api.SE2VelocityCommand.Req"
  "uestH\000\0225\n\013sit_request\030\003 \001(\0132\036.bosdyn.api"
  ".SitCommand.RequestH\000\0229\n\rstand_request\030\004"
  " \001(\0132 .bosdyn.api.StandCommand.RequestH\000"
  "\022$\n\006params\030d \001(\0132\024.google.protobuf.AnyB\t"
  "\n\007command\032\244\002\n\010Feedback\022L\n\027se2_trajectory"
  "_feedback\030\001 \001(\0132).bosdyn.api.SE2Trajecto"
  "ryCommand.FeedbackH\000\022H\n\025se2_velocity_fee"
  "dback\030\002 \001(\0132\'.bosdyn.api.SE2VelocityComm"
  "and.FeedbackH\000\0227\n\014sit_feedback\030\003 \001(\0132\037.b"
  "osdyn.api.SitCommand.FeedbackH\000\022;\n\016stand"
  "_feedback\030\004 \001(\0132!.bosdyn.api.StandComman"
  "d.FeedbackH\000B\n\n\010feedbackB\026B\024MobilityComm"
  "andProtob\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_bosdyn_2fapi_2fmobility_5fcommand_2eproto_deps[2] = {
  &::descriptor_table_bosdyn_2fapi_2fbasic_5fcommand_2eproto,
  &::descriptor_table_google_2fprotobuf_2fany_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_bosdyn_2fapi_2fmobility_5fcommand_2eproto_sccs[3] = {
  &scc_info_MobilityCommand_bosdyn_2fapi_2fmobility_5fcommand_2eproto.base,
  &scc_info_MobilityCommand_Feedback_bosdyn_2fapi_2fmobility_5fcommand_2eproto.base,
  &scc_info_MobilityCommand_Request_bosdyn_2fapi_2fmobility_5fcommand_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_bosdyn_2fapi_2fmobility_5fcommand_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_bosdyn_2fapi_2fmobility_5fcommand_2eproto = {
  false, false, descriptor_table_protodef_bosdyn_2fapi_2fmobility_5fcommand_2eproto, "bosdyn/api/mobility_command.proto", 776,
  &descriptor_table_bosdyn_2fapi_2fmobility_5fcommand_2eproto_once, descriptor_table_bosdyn_2fapi_2fmobility_5fcommand_2eproto_sccs, descriptor_table_bosdyn_2fapi_2fmobility_5fcommand_2eproto_deps, 3, 2,
  schemas, file_default_instances, TableStruct_bosdyn_2fapi_2fmobility_5fcommand_2eproto::offsets,
  file_level_metadata_bosdyn_2fapi_2fmobility_5fcommand_2eproto, 3, file_level_enum_descriptors_bosdyn_2fapi_2fmobility_5fcommand_2eproto, file_level_service_descriptors_bosdyn_2fapi_2fmobility_5fcommand_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_bosdyn_2fapi_2fmobility_5fcommand_2eproto = (static_cast<void>(::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_bosdyn_2fapi_2fmobility_5fcommand_2eproto)), true);
namespace bosdyn {
namespace api {

// ===================================================================

void MobilityCommand_Request::InitAsDefaultInstance() {
  ::bosdyn::api::_MobilityCommand_Request_default_instance_.se2_trajectory_request_ = const_cast< ::bosdyn::api::SE2TrajectoryCommand_Request*>(
      ::bosdyn::api::SE2TrajectoryCommand_Request::internal_default_instance());
  ::bosdyn::api::_MobilityCommand_Request_default_instance_.se2_velocity_request_ = const_cast< ::bosdyn::api::SE2VelocityCommand_Request*>(
      ::bosdyn::api::SE2VelocityCommand_Request::internal_default_instance());
  ::bosdyn::api::_MobilityCommand_Request_default_instance_.sit_request_ = const_cast< ::bosdyn::api::SitCommand_Request*>(
      ::bosdyn::api::SitCommand_Request::internal_default_instance());
  ::bosdyn::api::_MobilityCommand_Request_default_instance_.stand_request_ = const_cast< ::bosdyn::api::StandCommand_Request*>(
      ::bosdyn::api::StandCommand_Request::internal_default_instance());
  ::bosdyn::api::_MobilityCommand_Request_default_instance_._instance.get_mutable()->params_ = const_cast< PROTOBUF_NAMESPACE_ID::Any*>(
      PROTOBUF_NAMESPACE_ID::Any::internal_default_instance());
}
class MobilityCommand_Request::_Internal {
 public:
  static const ::bosdyn::api::SE2TrajectoryCommand_Request& se2_trajectory_request(const MobilityCommand_Request* msg);
  static const ::bosdyn::api::SE2VelocityCommand_Request& se2_velocity_request(const MobilityCommand_Request* msg);
  static const ::bosdyn::api::SitCommand_Request& sit_request(const MobilityCommand_Request* msg);
  static const ::bosdyn::api::StandCommand_Request& stand_request(const MobilityCommand_Request* msg);
  static const PROTOBUF_NAMESPACE_ID::Any& params(const MobilityCommand_Request* msg);
};

const ::bosdyn::api::SE2TrajectoryCommand_Request&
MobilityCommand_Request::_Internal::se2_trajectory_request(const MobilityCommand_Request* msg) {
  return *msg->command_.se2_trajectory_request_;
}
const ::bosdyn::api::SE2VelocityCommand_Request&
MobilityCommand_Request::_Internal::se2_velocity_request(const MobilityCommand_Request* msg) {
  return *msg->command_.se2_velocity_request_;
}
const ::bosdyn::api::SitCommand_Request&
MobilityCommand_Request::_Internal::sit_request(const MobilityCommand_Request* msg) {
  return *msg->command_.sit_request_;
}
const ::bosdyn::api::StandCommand_Request&
MobilityCommand_Request::_Internal::stand_request(const MobilityCommand_Request* msg) {
  return *msg->command_.stand_request_;
}
const PROTOBUF_NAMESPACE_ID::Any&
MobilityCommand_Request::_Internal::params(const MobilityCommand_Request* msg) {
  return *msg->params_;
}
void MobilityCommand_Request::set_allocated_se2_trajectory_request(::bosdyn::api::SE2TrajectoryCommand_Request* se2_trajectory_request) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  clear_command();
  if (se2_trajectory_request) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(se2_trajectory_request)->GetArena();
    if (message_arena != submessage_arena) {
      se2_trajectory_request = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, se2_trajectory_request, submessage_arena);
    }
    set_has_se2_trajectory_request();
    command_.se2_trajectory_request_ = se2_trajectory_request;
  }
  // @@protoc_insertion_point(field_set_allocated:bosdyn.api.MobilityCommand.Request.se2_trajectory_request)
}
void MobilityCommand_Request::clear_se2_trajectory_request() {
  if (_internal_has_se2_trajectory_request()) {
    if (GetArena() == nullptr) {
      delete command_.se2_trajectory_request_;
    }
    clear_has_command();
  }
}
void MobilityCommand_Request::set_allocated_se2_velocity_request(::bosdyn::api::SE2VelocityCommand_Request* se2_velocity_request) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  clear_command();
  if (se2_velocity_request) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(se2_velocity_request)->GetArena();
    if (message_arena != submessage_arena) {
      se2_velocity_request = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, se2_velocity_request, submessage_arena);
    }
    set_has_se2_velocity_request();
    command_.se2_velocity_request_ = se2_velocity_request;
  }
  // @@protoc_insertion_point(field_set_allocated:bosdyn.api.MobilityCommand.Request.se2_velocity_request)
}
void MobilityCommand_Request::clear_se2_velocity_request() {
  if (_internal_has_se2_velocity_request()) {
    if (GetArena() == nullptr) {
      delete command_.se2_velocity_request_;
    }
    clear_has_command();
  }
}
void MobilityCommand_Request::set_allocated_sit_request(::bosdyn::api::SitCommand_Request* sit_request) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  clear_command();
  if (sit_request) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(sit_request)->GetArena();
    if (message_arena != submessage_arena) {
      sit_request = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, sit_request, submessage_arena);
    }
    set_has_sit_request();
    command_.sit_request_ = sit_request;
  }
  // @@protoc_insertion_point(field_set_allocated:bosdyn.api.MobilityCommand.Request.sit_request)
}
void MobilityCommand_Request::clear_sit_request() {
  if (_internal_has_sit_request()) {
    if (GetArena() == nullptr) {
      delete command_.sit_request_;
    }
    clear_has_command();
  }
}
void MobilityCommand_Request::set_allocated_stand_request(::bosdyn::api::StandCommand_Request* stand_request) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  clear_command();
  if (stand_request) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(stand_request)->GetArena();
    if (message_arena != submessage_arena) {
      stand_request = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, stand_request, submessage_arena);
    }
    set_has_stand_request();
    command_.stand_request_ = stand_request;
  }
  // @@protoc_insertion_point(field_set_allocated:bosdyn.api.MobilityCommand.Request.stand_request)
}
void MobilityCommand_Request::clear_stand_request() {
  if (_internal_has_stand_request()) {
    if (GetArena() == nullptr) {
      delete command_.stand_request_;
    }
    clear_has_command();
  }
}
void MobilityCommand_Request::clear_params() {
  if (GetArena() == nullptr && params_ != nullptr) {
    delete params_;
  }
  params_ = nullptr;
}
MobilityCommand_Request::MobilityCommand_Request(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:bosdyn.api.MobilityCommand.Request)
}
MobilityCommand_Request::MobilityCommand_Request(const MobilityCommand_Request& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_params()) {
    params_ = new PROTOBUF_NAMESPACE_ID::Any(*from.params_);
  } else {
    params_ = nullptr;
  }
  clear_has_command();
  switch (from.command_case()) {
    case kSe2TrajectoryRequest: {
      _internal_mutable_se2_trajectory_request()->::bosdyn::api::SE2TrajectoryCommand_Request::MergeFrom(from._internal_se2_trajectory_request());
      break;
    }
    case kSe2VelocityRequest: {
      _internal_mutable_se2_velocity_request()->::bosdyn::api::SE2VelocityCommand_Request::MergeFrom(from._internal_se2_velocity_request());
      break;
    }
    case kSitRequest: {
      _internal_mutable_sit_request()->::bosdyn::api::SitCommand_Request::MergeFrom(from._internal_sit_request());
      break;
    }
    case kStandRequest: {
      _internal_mutable_stand_request()->::bosdyn::api::StandCommand_Request::MergeFrom(from._internal_stand_request());
      break;
    }
    case COMMAND_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:bosdyn.api.MobilityCommand.Request)
}

void MobilityCommand_Request::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_MobilityCommand_Request_bosdyn_2fapi_2fmobility_5fcommand_2eproto.base);
  params_ = nullptr;
  clear_has_command();
}

MobilityCommand_Request::~MobilityCommand_Request() {
  // @@protoc_insertion_point(destructor:bosdyn.api.MobilityCommand.Request)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void MobilityCommand_Request::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete params_;
  if (has_command()) {
    clear_command();
  }
}

void MobilityCommand_Request::ArenaDtor(void* object) {
  MobilityCommand_Request* _this = reinterpret_cast< MobilityCommand_Request* >(object);
  (void)_this;
}
void MobilityCommand_Request::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void MobilityCommand_Request::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MobilityCommand_Request& MobilityCommand_Request::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_MobilityCommand_Request_bosdyn_2fapi_2fmobility_5fcommand_2eproto.base);
  return *internal_default_instance();
}


void MobilityCommand_Request::clear_command() {
// @@protoc_insertion_point(one_of_clear_start:bosdyn.api.MobilityCommand.Request)
  switch (command_case()) {
    case kSe2TrajectoryRequest: {
      if (GetArena() == nullptr) {
        delete command_.se2_trajectory_request_;
      }
      break;
    }
    case kSe2VelocityRequest: {
      if (GetArena() == nullptr) {
        delete command_.se2_velocity_request_;
      }
      break;
    }
    case kSitRequest: {
      if (GetArena() == nullptr) {
        delete command_.sit_request_;
      }
      break;
    }
    case kStandRequest: {
      if (GetArena() == nullptr) {
        delete command_.stand_request_;
      }
      break;
    }
    case COMMAND_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = COMMAND_NOT_SET;
}


void MobilityCommand_Request::Clear() {
// @@protoc_insertion_point(message_clear_start:bosdyn.api.MobilityCommand.Request)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && params_ != nullptr) {
    delete params_;
  }
  params_ = nullptr;
  clear_command();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* MobilityCommand_Request::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .bosdyn.api.SE2TrajectoryCommand.Request se2_trajectory_request = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_se2_trajectory_request(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .bosdyn.api.SE2VelocityCommand.Request se2_velocity_request = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_se2_velocity_request(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .bosdyn.api.SitCommand.Request sit_request = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_sit_request(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .bosdyn.api.StandCommand.Request stand_request = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_stand_request(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .google.protobuf.Any params = 100;
      case 100:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_params(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* MobilityCommand_Request::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:bosdyn.api.MobilityCommand.Request)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .bosdyn.api.SE2TrajectoryCommand.Request se2_trajectory_request = 1;
  if (_internal_has_se2_trajectory_request()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::se2_trajectory_request(this), target, stream);
  }

  // .bosdyn.api.SE2VelocityCommand.Request se2_velocity_request = 2;
  if (_internal_has_se2_velocity_request()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::se2_velocity_request(this), target, stream);
  }

  // .bosdyn.api.SitCommand.Request sit_request = 3;
  if (_internal_has_sit_request()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::sit_request(this), target, stream);
  }

  // .bosdyn.api.StandCommand.Request stand_request = 4;
  if (_internal_has_stand_request()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        4, _Internal::stand_request(this), target, stream);
  }

  // .google.protobuf.Any params = 100;
  if (this->has_params()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        100, _Internal::params(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:bosdyn.api.MobilityCommand.Request)
  return target;
}

size_t MobilityCommand_Request::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bosdyn.api.MobilityCommand.Request)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .google.protobuf.Any params = 100;
  if (this->has_params()) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *params_);
  }

  switch (command_case()) {
    // .bosdyn.api.SE2TrajectoryCommand.Request se2_trajectory_request = 1;
    case kSe2TrajectoryRequest: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *command_.se2_trajectory_request_);
      break;
    }
    // .bosdyn.api.SE2VelocityCommand.Request se2_velocity_request = 2;
    case kSe2VelocityRequest: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *command_.se2_velocity_request_);
      break;
    }
    // .bosdyn.api.SitCommand.Request sit_request = 3;
    case kSitRequest: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *command_.sit_request_);
      break;
    }
    // .bosdyn.api.StandCommand.Request stand_request = 4;
    case kStandRequest: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *command_.stand_request_);
      break;
    }
    case COMMAND_NOT_SET: {
      break;
    }
  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MobilityCommand_Request::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bosdyn.api.MobilityCommand.Request)
  GOOGLE_DCHECK_NE(&from, this);
  const MobilityCommand_Request* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<MobilityCommand_Request>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bosdyn.api.MobilityCommand.Request)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bosdyn.api.MobilityCommand.Request)
    MergeFrom(*source);
  }
}

void MobilityCommand_Request::MergeFrom(const MobilityCommand_Request& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bosdyn.api.MobilityCommand.Request)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_params()) {
    _internal_mutable_params()->PROTOBUF_NAMESPACE_ID::Any::MergeFrom(from._internal_params());
  }
  switch (from.command_case()) {
    case kSe2TrajectoryRequest: {
      _internal_mutable_se2_trajectory_request()->::bosdyn::api::SE2TrajectoryCommand_Request::MergeFrom(from._internal_se2_trajectory_request());
      break;
    }
    case kSe2VelocityRequest: {
      _internal_mutable_se2_velocity_request()->::bosdyn::api::SE2VelocityCommand_Request::MergeFrom(from._internal_se2_velocity_request());
      break;
    }
    case kSitRequest: {
      _internal_mutable_sit_request()->::bosdyn::api::SitCommand_Request::MergeFrom(from._internal_sit_request());
      break;
    }
    case kStandRequest: {
      _internal_mutable_stand_request()->::bosdyn::api::StandCommand_Request::MergeFrom(from._internal_stand_request());
      break;
    }
    case COMMAND_NOT_SET: {
      break;
    }
  }
}

void MobilityCommand_Request::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bosdyn.api.MobilityCommand.Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MobilityCommand_Request::CopyFrom(const MobilityCommand_Request& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bosdyn.api.MobilityCommand.Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MobilityCommand_Request::IsInitialized() const {
  return true;
}

void MobilityCommand_Request::InternalSwap(MobilityCommand_Request* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(params_, other->params_);
  swap(command_, other->command_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
}

::PROTOBUF_NAMESPACE_ID::Metadata MobilityCommand_Request::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void MobilityCommand_Feedback::InitAsDefaultInstance() {
  ::bosdyn::api::_MobilityCommand_Feedback_default_instance_.se2_trajectory_feedback_ = const_cast< ::bosdyn::api::SE2TrajectoryCommand_Feedback*>(
      ::bosdyn::api::SE2TrajectoryCommand_Feedback::internal_default_instance());
  ::bosdyn::api::_MobilityCommand_Feedback_default_instance_.se2_velocity_feedback_ = const_cast< ::bosdyn::api::SE2VelocityCommand_Feedback*>(
      ::bosdyn::api::SE2VelocityCommand_Feedback::internal_default_instance());
  ::bosdyn::api::_MobilityCommand_Feedback_default_instance_.sit_feedback_ = const_cast< ::bosdyn::api::SitCommand_Feedback*>(
      ::bosdyn::api::SitCommand_Feedback::internal_default_instance());
  ::bosdyn::api::_MobilityCommand_Feedback_default_instance_.stand_feedback_ = const_cast< ::bosdyn::api::StandCommand_Feedback*>(
      ::bosdyn::api::StandCommand_Feedback::internal_default_instance());
}
class MobilityCommand_Feedback::_Internal {
 public:
  static const ::bosdyn::api::SE2TrajectoryCommand_Feedback& se2_trajectory_feedback(const MobilityCommand_Feedback* msg);
  static const ::bosdyn::api::SE2VelocityCommand_Feedback& se2_velocity_feedback(const MobilityCommand_Feedback* msg);
  static const ::bosdyn::api::SitCommand_Feedback& sit_feedback(const MobilityCommand_Feedback* msg);
  static const ::bosdyn::api::StandCommand_Feedback& stand_feedback(const MobilityCommand_Feedback* msg);
};

const ::bosdyn::api::SE2TrajectoryCommand_Feedback&
MobilityCommand_Feedback::_Internal::se2_trajectory_feedback(const MobilityCommand_Feedback* msg) {
  return *msg->feedback_.se2_trajectory_feedback_;
}
const ::bosdyn::api::SE2VelocityCommand_Feedback&
MobilityCommand_Feedback::_Internal::se2_velocity_feedback(const MobilityCommand_Feedback* msg) {
  return *msg->feedback_.se2_velocity_feedback_;
}
const ::bosdyn::api::SitCommand_Feedback&
MobilityCommand_Feedback::_Internal::sit_feedback(const MobilityCommand_Feedback* msg) {
  return *msg->feedback_.sit_feedback_;
}
const ::bosdyn::api::StandCommand_Feedback&
MobilityCommand_Feedback::_Internal::stand_feedback(const MobilityCommand_Feedback* msg) {
  return *msg->feedback_.stand_feedback_;
}
void MobilityCommand_Feedback::set_allocated_se2_trajectory_feedback(::bosdyn::api::SE2TrajectoryCommand_Feedback* se2_trajectory_feedback) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  clear_feedback();
  if (se2_trajectory_feedback) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(se2_trajectory_feedback)->GetArena();
    if (message_arena != submessage_arena) {
      se2_trajectory_feedback = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, se2_trajectory_feedback, submessage_arena);
    }
    set_has_se2_trajectory_feedback();
    feedback_.se2_trajectory_feedback_ = se2_trajectory_feedback;
  }
  // @@protoc_insertion_point(field_set_allocated:bosdyn.api.MobilityCommand.Feedback.se2_trajectory_feedback)
}
void MobilityCommand_Feedback::clear_se2_trajectory_feedback() {
  if (_internal_has_se2_trajectory_feedback()) {
    if (GetArena() == nullptr) {
      delete feedback_.se2_trajectory_feedback_;
    }
    clear_has_feedback();
  }
}
void MobilityCommand_Feedback::set_allocated_se2_velocity_feedback(::bosdyn::api::SE2VelocityCommand_Feedback* se2_velocity_feedback) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  clear_feedback();
  if (se2_velocity_feedback) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(se2_velocity_feedback)->GetArena();
    if (message_arena != submessage_arena) {
      se2_velocity_feedback = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, se2_velocity_feedback, submessage_arena);
    }
    set_has_se2_velocity_feedback();
    feedback_.se2_velocity_feedback_ = se2_velocity_feedback;
  }
  // @@protoc_insertion_point(field_set_allocated:bosdyn.api.MobilityCommand.Feedback.se2_velocity_feedback)
}
void MobilityCommand_Feedback::clear_se2_velocity_feedback() {
  if (_internal_has_se2_velocity_feedback()) {
    if (GetArena() == nullptr) {
      delete feedback_.se2_velocity_feedback_;
    }
    clear_has_feedback();
  }
}
void MobilityCommand_Feedback::set_allocated_sit_feedback(::bosdyn::api::SitCommand_Feedback* sit_feedback) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  clear_feedback();
  if (sit_feedback) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(sit_feedback)->GetArena();
    if (message_arena != submessage_arena) {
      sit_feedback = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, sit_feedback, submessage_arena);
    }
    set_has_sit_feedback();
    feedback_.sit_feedback_ = sit_feedback;
  }
  // @@protoc_insertion_point(field_set_allocated:bosdyn.api.MobilityCommand.Feedback.sit_feedback)
}
void MobilityCommand_Feedback::clear_sit_feedback() {
  if (_internal_has_sit_feedback()) {
    if (GetArena() == nullptr) {
      delete feedback_.sit_feedback_;
    }
    clear_has_feedback();
  }
}
void MobilityCommand_Feedback::set_allocated_stand_feedback(::bosdyn::api::StandCommand_Feedback* stand_feedback) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  clear_feedback();
  if (stand_feedback) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(stand_feedback)->GetArena();
    if (message_arena != submessage_arena) {
      stand_feedback = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, stand_feedback, submessage_arena);
    }
    set_has_stand_feedback();
    feedback_.stand_feedback_ = stand_feedback;
  }
  // @@protoc_insertion_point(field_set_allocated:bosdyn.api.MobilityCommand.Feedback.stand_feedback)
}
void MobilityCommand_Feedback::clear_stand_feedback() {
  if (_internal_has_stand_feedback()) {
    if (GetArena() == nullptr) {
      delete feedback_.stand_feedback_;
    }
    clear_has_feedback();
  }
}
MobilityCommand_Feedback::MobilityCommand_Feedback(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:bosdyn.api.MobilityCommand.Feedback)
}
MobilityCommand_Feedback::MobilityCommand_Feedback(const MobilityCommand_Feedback& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  clear_has_feedback();
  switch (from.feedback_case()) {
    case kSe2TrajectoryFeedback: {
      _internal_mutable_se2_trajectory_feedback()->::bosdyn::api::SE2TrajectoryCommand_Feedback::MergeFrom(from._internal_se2_trajectory_feedback());
      break;
    }
    case kSe2VelocityFeedback: {
      _internal_mutable_se2_velocity_feedback()->::bosdyn::api::SE2VelocityCommand_Feedback::MergeFrom(from._internal_se2_velocity_feedback());
      break;
    }
    case kSitFeedback: {
      _internal_mutable_sit_feedback()->::bosdyn::api::SitCommand_Feedback::MergeFrom(from._internal_sit_feedback());
      break;
    }
    case kStandFeedback: {
      _internal_mutable_stand_feedback()->::bosdyn::api::StandCommand_Feedback::MergeFrom(from._internal_stand_feedback());
      break;
    }
    case FEEDBACK_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:bosdyn.api.MobilityCommand.Feedback)
}

void MobilityCommand_Feedback::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_MobilityCommand_Feedback_bosdyn_2fapi_2fmobility_5fcommand_2eproto.base);
  clear_has_feedback();
}

MobilityCommand_Feedback::~MobilityCommand_Feedback() {
  // @@protoc_insertion_point(destructor:bosdyn.api.MobilityCommand.Feedback)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void MobilityCommand_Feedback::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (has_feedback()) {
    clear_feedback();
  }
}

void MobilityCommand_Feedback::ArenaDtor(void* object) {
  MobilityCommand_Feedback* _this = reinterpret_cast< MobilityCommand_Feedback* >(object);
  (void)_this;
}
void MobilityCommand_Feedback::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void MobilityCommand_Feedback::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MobilityCommand_Feedback& MobilityCommand_Feedback::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_MobilityCommand_Feedback_bosdyn_2fapi_2fmobility_5fcommand_2eproto.base);
  return *internal_default_instance();
}


void MobilityCommand_Feedback::clear_feedback() {
// @@protoc_insertion_point(one_of_clear_start:bosdyn.api.MobilityCommand.Feedback)
  switch (feedback_case()) {
    case kSe2TrajectoryFeedback: {
      if (GetArena() == nullptr) {
        delete feedback_.se2_trajectory_feedback_;
      }
      break;
    }
    case kSe2VelocityFeedback: {
      if (GetArena() == nullptr) {
        delete feedback_.se2_velocity_feedback_;
      }
      break;
    }
    case kSitFeedback: {
      if (GetArena() == nullptr) {
        delete feedback_.sit_feedback_;
      }
      break;
    }
    case kStandFeedback: {
      if (GetArena() == nullptr) {
        delete feedback_.stand_feedback_;
      }
      break;
    }
    case FEEDBACK_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = FEEDBACK_NOT_SET;
}


void MobilityCommand_Feedback::Clear() {
// @@protoc_insertion_point(message_clear_start:bosdyn.api.MobilityCommand.Feedback)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_feedback();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* MobilityCommand_Feedback::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .bosdyn.api.SE2TrajectoryCommand.Feedback se2_trajectory_feedback = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_se2_trajectory_feedback(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .bosdyn.api.SE2VelocityCommand.Feedback se2_velocity_feedback = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_se2_velocity_feedback(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .bosdyn.api.SitCommand.Feedback sit_feedback = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_sit_feedback(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .bosdyn.api.StandCommand.Feedback stand_feedback = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_stand_feedback(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* MobilityCommand_Feedback::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:bosdyn.api.MobilityCommand.Feedback)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .bosdyn.api.SE2TrajectoryCommand.Feedback se2_trajectory_feedback = 1;
  if (_internal_has_se2_trajectory_feedback()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::se2_trajectory_feedback(this), target, stream);
  }

  // .bosdyn.api.SE2VelocityCommand.Feedback se2_velocity_feedback = 2;
  if (_internal_has_se2_velocity_feedback()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::se2_velocity_feedback(this), target, stream);
  }

  // .bosdyn.api.SitCommand.Feedback sit_feedback = 3;
  if (_internal_has_sit_feedback()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::sit_feedback(this), target, stream);
  }

  // .bosdyn.api.StandCommand.Feedback stand_feedback = 4;
  if (_internal_has_stand_feedback()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        4, _Internal::stand_feedback(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:bosdyn.api.MobilityCommand.Feedback)
  return target;
}

size_t MobilityCommand_Feedback::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bosdyn.api.MobilityCommand.Feedback)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  switch (feedback_case()) {
    // .bosdyn.api.SE2TrajectoryCommand.Feedback se2_trajectory_feedback = 1;
    case kSe2TrajectoryFeedback: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *feedback_.se2_trajectory_feedback_);
      break;
    }
    // .bosdyn.api.SE2VelocityCommand.Feedback se2_velocity_feedback = 2;
    case kSe2VelocityFeedback: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *feedback_.se2_velocity_feedback_);
      break;
    }
    // .bosdyn.api.SitCommand.Feedback sit_feedback = 3;
    case kSitFeedback: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *feedback_.sit_feedback_);
      break;
    }
    // .bosdyn.api.StandCommand.Feedback stand_feedback = 4;
    case kStandFeedback: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *feedback_.stand_feedback_);
      break;
    }
    case FEEDBACK_NOT_SET: {
      break;
    }
  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MobilityCommand_Feedback::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bosdyn.api.MobilityCommand.Feedback)
  GOOGLE_DCHECK_NE(&from, this);
  const MobilityCommand_Feedback* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<MobilityCommand_Feedback>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bosdyn.api.MobilityCommand.Feedback)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bosdyn.api.MobilityCommand.Feedback)
    MergeFrom(*source);
  }
}

void MobilityCommand_Feedback::MergeFrom(const MobilityCommand_Feedback& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bosdyn.api.MobilityCommand.Feedback)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.feedback_case()) {
    case kSe2TrajectoryFeedback: {
      _internal_mutable_se2_trajectory_feedback()->::bosdyn::api::SE2TrajectoryCommand_Feedback::MergeFrom(from._internal_se2_trajectory_feedback());
      break;
    }
    case kSe2VelocityFeedback: {
      _internal_mutable_se2_velocity_feedback()->::bosdyn::api::SE2VelocityCommand_Feedback::MergeFrom(from._internal_se2_velocity_feedback());
      break;
    }
    case kSitFeedback: {
      _internal_mutable_sit_feedback()->::bosdyn::api::SitCommand_Feedback::MergeFrom(from._internal_sit_feedback());
      break;
    }
    case kStandFeedback: {
      _internal_mutable_stand_feedback()->::bosdyn::api::StandCommand_Feedback::MergeFrom(from._internal_stand_feedback());
      break;
    }
    case FEEDBACK_NOT_SET: {
      break;
    }
  }
}

void MobilityCommand_Feedback::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bosdyn.api.MobilityCommand.Feedback)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MobilityCommand_Feedback::CopyFrom(const MobilityCommand_Feedback& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bosdyn.api.MobilityCommand.Feedback)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MobilityCommand_Feedback::IsInitialized() const {
  return true;
}

void MobilityCommand_Feedback::InternalSwap(MobilityCommand_Feedback* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(feedback_, other->feedback_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
}

::PROTOBUF_NAMESPACE_ID::Metadata MobilityCommand_Feedback::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void MobilityCommand::InitAsDefaultInstance() {
}
class MobilityCommand::_Internal {
 public:
};

MobilityCommand::MobilityCommand(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:bosdyn.api.MobilityCommand)
}
MobilityCommand::MobilityCommand(const MobilityCommand& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:bosdyn.api.MobilityCommand)
}

void MobilityCommand::SharedCtor() {
}

MobilityCommand::~MobilityCommand() {
  // @@protoc_insertion_point(destructor:bosdyn.api.MobilityCommand)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void MobilityCommand::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void MobilityCommand::ArenaDtor(void* object) {
  MobilityCommand* _this = reinterpret_cast< MobilityCommand* >(object);
  (void)_this;
}
void MobilityCommand::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void MobilityCommand::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MobilityCommand& MobilityCommand::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_MobilityCommand_bosdyn_2fapi_2fmobility_5fcommand_2eproto.base);
  return *internal_default_instance();
}


void MobilityCommand::Clear() {
// @@protoc_insertion_point(message_clear_start:bosdyn.api.MobilityCommand)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* MobilityCommand::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* MobilityCommand::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:bosdyn.api.MobilityCommand)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:bosdyn.api.MobilityCommand)
  return target;
}

size_t MobilityCommand::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bosdyn.api.MobilityCommand)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MobilityCommand::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bosdyn.api.MobilityCommand)
  GOOGLE_DCHECK_NE(&from, this);
  const MobilityCommand* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<MobilityCommand>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bosdyn.api.MobilityCommand)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bosdyn.api.MobilityCommand)
    MergeFrom(*source);
  }
}

void MobilityCommand::MergeFrom(const MobilityCommand& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bosdyn.api.MobilityCommand)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void MobilityCommand::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bosdyn.api.MobilityCommand)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MobilityCommand::CopyFrom(const MobilityCommand& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bosdyn.api.MobilityCommand)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MobilityCommand::IsInitialized() const {
  return true;
}

void MobilityCommand::InternalSwap(MobilityCommand* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata MobilityCommand::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace api
}  // namespace bosdyn
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::bosdyn::api::MobilityCommand_Request* Arena::CreateMaybeMessage< ::bosdyn::api::MobilityCommand_Request >(Arena* arena) {
  return Arena::CreateMessageInternal< ::bosdyn::api::MobilityCommand_Request >(arena);
}
template<> PROTOBUF_NOINLINE ::bosdyn::api::MobilityCommand_Feedback* Arena::CreateMaybeMessage< ::bosdyn::api::MobilityCommand_Feedback >(Arena* arena) {
  return Arena::CreateMessageInternal< ::bosdyn::api::MobilityCommand_Feedback >(arena);
}
template<> PROTOBUF_NOINLINE ::bosdyn::api::MobilityCommand* Arena::CreateMaybeMessage< ::bosdyn::api::MobilityCommand >(Arena* arena) {
  return Arena::CreateMessageInternal< ::bosdyn::api::MobilityCommand >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
