// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: bosdyn/api/local_grid.proto

#include "bosdyn/api/local_grid.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_bosdyn_2fapi_2fgeometry_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_FrameTreeSnapshot_bosdyn_2fapi_2fgeometry_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_bosdyn_2fapi_2flocal_5fgrid_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<3> scc_info_LocalGrid_bosdyn_2fapi_2flocal_5fgrid_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_bosdyn_2fapi_2flocal_5fgrid_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_LocalGridExtent_bosdyn_2fapi_2flocal_5fgrid_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_bosdyn_2fapi_2flocal_5fgrid_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_LocalGridRequest_bosdyn_2fapi_2flocal_5fgrid_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_bosdyn_2fapi_2flocal_5fgrid_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_LocalGridResponse_bosdyn_2fapi_2flocal_5fgrid_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_bosdyn_2fapi_2flocal_5fgrid_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_LocalGridType_bosdyn_2fapi_2flocal_5fgrid_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_bosdyn_2fapi_2fheader_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_RequestHeader_bosdyn_2fapi_2fheader_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_bosdyn_2fapi_2fheader_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<4> scc_info_ResponseHeader_bosdyn_2fapi_2fheader_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2fprotobuf_2ftimestamp_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Timestamp_google_2fprotobuf_2ftimestamp_2eproto;
namespace bosdyn {
namespace api {
class LocalGridTypeDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<LocalGridType> _instance;
} _LocalGridType_default_instance_;
class LocalGridRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<LocalGridRequest> _instance;
} _LocalGridRequest_default_instance_;
class LocalGridExtentDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<LocalGridExtent> _instance;
} _LocalGridExtent_default_instance_;
class LocalGridDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<LocalGrid> _instance;
} _LocalGrid_default_instance_;
class LocalGridResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<LocalGridResponse> _instance;
} _LocalGridResponse_default_instance_;
class GetLocalGridTypesRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetLocalGridTypesRequest> _instance;
} _GetLocalGridTypesRequest_default_instance_;
class GetLocalGridTypesResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetLocalGridTypesResponse> _instance;
} _GetLocalGridTypesResponse_default_instance_;
class GetLocalGridsRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetLocalGridsRequest> _instance;
} _GetLocalGridsRequest_default_instance_;
class GetLocalGridsResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetLocalGridsResponse> _instance;
} _GetLocalGridsResponse_default_instance_;
}  // namespace api
}  // namespace bosdyn
static void InitDefaultsscc_info_GetLocalGridTypesRequest_bosdyn_2fapi_2flocal_5fgrid_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::bosdyn::api::_GetLocalGridTypesRequest_default_instance_;
    new (ptr) ::bosdyn::api::GetLocalGridTypesRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::bosdyn::api::GetLocalGridTypesRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_GetLocalGridTypesRequest_bosdyn_2fapi_2flocal_5fgrid_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_GetLocalGridTypesRequest_bosdyn_2fapi_2flocal_5fgrid_2eproto}, {
      &scc_info_RequestHeader_bosdyn_2fapi_2fheader_2eproto.base,}};

static void InitDefaultsscc_info_GetLocalGridTypesResponse_bosdyn_2fapi_2flocal_5fgrid_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::bosdyn::api::_GetLocalGridTypesResponse_default_instance_;
    new (ptr) ::bosdyn::api::GetLocalGridTypesResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::bosdyn::api::GetLocalGridTypesResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_GetLocalGridTypesResponse_bosdyn_2fapi_2flocal_5fgrid_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, 0, InitDefaultsscc_info_GetLocalGridTypesResponse_bosdyn_2fapi_2flocal_5fgrid_2eproto}, {
      &scc_info_ResponseHeader_bosdyn_2fapi_2fheader_2eproto.base,
      &scc_info_LocalGridType_bosdyn_2fapi_2flocal_5fgrid_2eproto.base,}};

static void InitDefaultsscc_info_GetLocalGridsRequest_bosdyn_2fapi_2flocal_5fgrid_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::bosdyn::api::_GetLocalGridsRequest_default_instance_;
    new (ptr) ::bosdyn::api::GetLocalGridsRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::bosdyn::api::GetLocalGridsRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_GetLocalGridsRequest_bosdyn_2fapi_2flocal_5fgrid_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, 0, InitDefaultsscc_info_GetLocalGridsRequest_bosdyn_2fapi_2flocal_5fgrid_2eproto}, {
      &scc_info_RequestHeader_bosdyn_2fapi_2fheader_2eproto.base,
      &scc_info_LocalGridRequest_bosdyn_2fapi_2flocal_5fgrid_2eproto.base,}};

static void InitDefaultsscc_info_GetLocalGridsResponse_bosdyn_2fapi_2flocal_5fgrid_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::bosdyn::api::_GetLocalGridsResponse_default_instance_;
    new (ptr) ::bosdyn::api::GetLocalGridsResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::bosdyn::api::GetLocalGridsResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_GetLocalGridsResponse_bosdyn_2fapi_2flocal_5fgrid_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, 0, InitDefaultsscc_info_GetLocalGridsResponse_bosdyn_2fapi_2flocal_5fgrid_2eproto}, {
      &scc_info_ResponseHeader_bosdyn_2fapi_2fheader_2eproto.base,
      &scc_info_LocalGridResponse_bosdyn_2fapi_2flocal_5fgrid_2eproto.base,}};

static void InitDefaultsscc_info_LocalGrid_bosdyn_2fapi_2flocal_5fgrid_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::bosdyn::api::_LocalGrid_default_instance_;
    new (ptr) ::bosdyn::api::LocalGrid();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::bosdyn::api::LocalGrid::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<3> scc_info_LocalGrid_bosdyn_2fapi_2flocal_5fgrid_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 3, 0, InitDefaultsscc_info_LocalGrid_bosdyn_2fapi_2flocal_5fgrid_2eproto}, {
      &scc_info_Timestamp_google_2fprotobuf_2ftimestamp_2eproto.base,
      &scc_info_FrameTreeSnapshot_bosdyn_2fapi_2fgeometry_2eproto.base,
      &scc_info_LocalGridExtent_bosdyn_2fapi_2flocal_5fgrid_2eproto.base,}};

static void InitDefaultsscc_info_LocalGridExtent_bosdyn_2fapi_2flocal_5fgrid_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::bosdyn::api::_LocalGridExtent_default_instance_;
    new (ptr) ::bosdyn::api::LocalGridExtent();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::bosdyn::api::LocalGridExtent::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_LocalGridExtent_bosdyn_2fapi_2flocal_5fgrid_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_LocalGridExtent_bosdyn_2fapi_2flocal_5fgrid_2eproto}, {}};

static void InitDefaultsscc_info_LocalGridRequest_bosdyn_2fapi_2flocal_5fgrid_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::bosdyn::api::_LocalGridRequest_default_instance_;
    new (ptr) ::bosdyn::api::LocalGridRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::bosdyn::api::LocalGridRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_LocalGridRequest_bosdyn_2fapi_2flocal_5fgrid_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_LocalGridRequest_bosdyn_2fapi_2flocal_5fgrid_2eproto}, {}};

static void InitDefaultsscc_info_LocalGridResponse_bosdyn_2fapi_2flocal_5fgrid_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::bosdyn::api::_LocalGridResponse_default_instance_;
    new (ptr) ::bosdyn::api::LocalGridResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::bosdyn::api::LocalGridResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_LocalGridResponse_bosdyn_2fapi_2flocal_5fgrid_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_LocalGridResponse_bosdyn_2fapi_2flocal_5fgrid_2eproto}, {
      &scc_info_LocalGrid_bosdyn_2fapi_2flocal_5fgrid_2eproto.base,}};

static void InitDefaultsscc_info_LocalGridType_bosdyn_2fapi_2flocal_5fgrid_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::bosdyn::api::_LocalGridType_default_instance_;
    new (ptr) ::bosdyn::api::LocalGridType();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::bosdyn::api::LocalGridType::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_LocalGridType_bosdyn_2fapi_2flocal_5fgrid_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_LocalGridType_bosdyn_2fapi_2flocal_5fgrid_2eproto}, {}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_bosdyn_2fapi_2flocal_5fgrid_2eproto[9];
static const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* file_level_enum_descriptors_bosdyn_2fapi_2flocal_5fgrid_2eproto[3];
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_bosdyn_2fapi_2flocal_5fgrid_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_bosdyn_2fapi_2flocal_5fgrid_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::bosdyn::api::LocalGridType, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::bosdyn::api::LocalGridType, name_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::bosdyn::api::LocalGridRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::bosdyn::api::LocalGridRequest, local_grid_type_name_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::bosdyn::api::LocalGridExtent, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::bosdyn::api::LocalGridExtent, cell_size_),
  PROTOBUF_FIELD_OFFSET(::bosdyn::api::LocalGridExtent, num_cells_x_),
  PROTOBUF_FIELD_OFFSET(::bosdyn::api::LocalGridExtent, num_cells_y_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::bosdyn::api::LocalGrid, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::bosdyn::api::LocalGrid, local_grid_type_name_),
  PROTOBUF_FIELD_OFFSET(::bosdyn::api::LocalGrid, acquisition_time_),
  PROTOBUF_FIELD_OFFSET(::bosdyn::api::LocalGrid, transforms_snapshot_),
  PROTOBUF_FIELD_OFFSET(::bosdyn::api::LocalGrid, frame_name_local_grid_data_),
  PROTOBUF_FIELD_OFFSET(::bosdyn::api::LocalGrid, extent_),
  PROTOBUF_FIELD_OFFSET(::bosdyn::api::LocalGrid, cell_format_),
  PROTOBUF_FIELD_OFFSET(::bosdyn::api::LocalGrid, encoding_),
  PROTOBUF_FIELD_OFFSET(::bosdyn::api::LocalGrid, data_),
  PROTOBUF_FIELD_OFFSET(::bosdyn::api::LocalGrid, rle_counts_),
  PROTOBUF_FIELD_OFFSET(::bosdyn::api::LocalGrid, cell_value_scale_),
  PROTOBUF_FIELD_OFFSET(::bosdyn::api::LocalGrid, cell_value_offset_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::bosdyn::api::LocalGridResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::bosdyn::api::LocalGridResponse, local_grid_type_name_),
  PROTOBUF_FIELD_OFFSET(::bosdyn::api::LocalGridResponse, status_),
  PROTOBUF_FIELD_OFFSET(::bosdyn::api::LocalGridResponse, local_grid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::bosdyn::api::GetLocalGridTypesRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::bosdyn::api::GetLocalGridTypesRequest, header_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::bosdyn::api::GetLocalGridTypesResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::bosdyn::api::GetLocalGridTypesResponse, header_),
  PROTOBUF_FIELD_OFFSET(::bosdyn::api::GetLocalGridTypesResponse, local_grid_type_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::bosdyn::api::GetLocalGridsRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::bosdyn::api::GetLocalGridsRequest, header_),
  PROTOBUF_FIELD_OFFSET(::bosdyn::api::GetLocalGridsRequest, local_grid_requests_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::bosdyn::api::GetLocalGridsResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::bosdyn::api::GetLocalGridsResponse, header_),
  PROTOBUF_FIELD_OFFSET(::bosdyn::api::GetLocalGridsResponse, local_grid_responses_),
  PROTOBUF_FIELD_OFFSET(::bosdyn::api::GetLocalGridsResponse, num_local_grid_errors_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::bosdyn::api::LocalGridType)},
  { 6, -1, sizeof(::bosdyn::api::LocalGridRequest)},
  { 12, -1, sizeof(::bosdyn::api::LocalGridExtent)},
  { 20, -1, sizeof(::bosdyn::api::LocalGrid)},
  { 36, -1, sizeof(::bosdyn::api::LocalGridResponse)},
  { 44, -1, sizeof(::bosdyn::api::GetLocalGridTypesRequest)},
  { 50, -1, sizeof(::bosdyn::api::GetLocalGridTypesResponse)},
  { 57, -1, sizeof(::bosdyn::api::GetLocalGridsRequest)},
  { 64, -1, sizeof(::bosdyn::api::GetLocalGridsResponse)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::bosdyn::api::_LocalGridType_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::bosdyn::api::_LocalGridRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::bosdyn::api::_LocalGridExtent_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::bosdyn::api::_LocalGrid_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::bosdyn::api::_LocalGridResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::bosdyn::api::_GetLocalGridTypesRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::bosdyn::api::_GetLocalGridTypesResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::bosdyn::api::_GetLocalGridsRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::bosdyn::api::_GetLocalGridsResponse_default_instance_),
};

const char descriptor_table_protodef_bosdyn_2fapi_2flocal_5fgrid_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\033bosdyn/api/local_grid.proto\022\nbosdyn.ap"
  "i\032\031bosdyn/api/geometry.proto\032\027bosdyn/api"
  "/header.proto\032\037google/protobuf/timestamp"
  ".proto\"\035\n\rLocalGridType\022\014\n\004name\030\001 \001(\t\"0\n"
  "\020LocalGridRequest\022\034\n\024local_grid_type_nam"
  "e\030\001 \001(\t\"T\n\017LocalGridExtent\022\021\n\tcell_size\030"
  "\002 \001(\001\022\023\n\013num_cells_x\030\003 \001(\005\022\023\n\013num_cells_"
  "y\030\004 \001(\005J\004\010\001\020\002\"\250\005\n\tLocalGrid\022\034\n\024local_gri"
  "d_type_name\030\001 \001(\t\0224\n\020acquisition_time\030\036 "
  "\001(\0132\032.google.protobuf.Timestamp\022:\n\023trans"
  "forms_snapshot\030\037 \001(\0132\035.bosdyn.api.FrameT"
  "reeSnapshot\022\"\n\032frame_name_local_grid_dat"
  "a\030\013 \001(\t\022+\n\006extent\030\003 \001(\0132\033.bosdyn.api.Loc"
  "alGridExtent\0225\n\013cell_format\030\004 \001(\0162 .bosd"
  "yn.api.LocalGrid.CellFormat\0220\n\010encoding\030"
  "\005 \001(\0162\036.bosdyn.api.LocalGrid.Encoding\022\014\n"
  "\004data\030\006 \001(\014\022\022\n\nrle_counts\030\007 \003(\005\022\030\n\020cell_"
  "value_scale\030\010 \001(\001\022\031\n\021cell_value_offset\030\t"
  " \001(\001\"\263\001\n\nCellFormat\022\027\n\023CELL_FORMAT_UNKNO"
  "WN\020\000\022\027\n\023CELL_FORMAT_FLOAT32\020\001\022\027\n\023CELL_FO"
  "RMAT_FLOAT64\020\002\022\024\n\020CELL_FORMAT_INT8\020\003\022\025\n\021"
  "CELL_FORMAT_UINT8\020\004\022\025\n\021CELL_FORMAT_INT16"
  "\020\005\022\026\n\022CELL_FORMAT_UINT16\020\006\"D\n\010Encoding\022\024"
  "\n\020ENCODING_UNKNOWN\020\000\022\020\n\014ENCODING_RAW\020\001\022\020"
  "\n\014ENCODING_RLE\020\002\"\216\002\n\021LocalGridResponse\022\034"
  "\n\024local_grid_type_name\030\001 \001(\t\0224\n\006status\030\002"
  " \001(\0162$.bosdyn.api.LocalGridResponse.Stat"
  "us\022)\n\nlocal_grid\030\003 \001(\0132\025.bosdyn.api.Loca"
  "lGrid\"z\n\006Status\022\022\n\016STATUS_UNKNOWN\020\000\022\r\n\tS"
  "TATUS_OK\020\001\022\027\n\023STATUS_NO_SUCH_GRID\020\002\022\033\n\027S"
  "TATUS_DATA_UNAVAILABLE\020\003\022\027\n\023STATUS_DATA_"
  "INVALID\020\004\"E\n\030GetLocalGridTypesRequest\022)\n"
  "\006header\030\001 \001(\0132\031.bosdyn.api.RequestHeader"
  "\"{\n\031GetLocalGridTypesResponse\022*\n\006header\030"
  "\001 \001(\0132\032.bosdyn.api.ResponseHeader\0222\n\017loc"
  "al_grid_type\030\002 \003(\0132\031.bosdyn.api.LocalGri"
  "dType\"|\n\024GetLocalGridsRequest\022)\n\006header\030"
  "\001 \001(\0132\031.bosdyn.api.RequestHeader\0229\n\023loca"
  "l_grid_requests\030\002 \003(\0132\034.bosdyn.api.Local"
  "GridRequest\"\237\001\n\025GetLocalGridsResponse\022*\n"
  "\006header\030\001 \001(\0132\032.bosdyn.api.ResponseHeade"
  "r\022;\n\024local_grid_responses\030\002 \003(\0132\035.bosdyn"
  ".api.LocalGridResponse\022\035\n\025num_local_grid"
  "_errors\030\003 \001(\005B\020B\016LocalGridProtob\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_bosdyn_2fapi_2flocal_5fgrid_2eproto_deps[3] = {
  &::descriptor_table_bosdyn_2fapi_2fgeometry_2eproto,
  &::descriptor_table_bosdyn_2fapi_2fheader_2eproto,
  &::descriptor_table_google_2fprotobuf_2ftimestamp_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_bosdyn_2fapi_2flocal_5fgrid_2eproto_sccs[9] = {
  &scc_info_GetLocalGridTypesRequest_bosdyn_2fapi_2flocal_5fgrid_2eproto.base,
  &scc_info_GetLocalGridTypesResponse_bosdyn_2fapi_2flocal_5fgrid_2eproto.base,
  &scc_info_GetLocalGridsRequest_bosdyn_2fapi_2flocal_5fgrid_2eproto.base,
  &scc_info_GetLocalGridsResponse_bosdyn_2fapi_2flocal_5fgrid_2eproto.base,
  &scc_info_LocalGrid_bosdyn_2fapi_2flocal_5fgrid_2eproto.base,
  &scc_info_LocalGridExtent_bosdyn_2fapi_2flocal_5fgrid_2eproto.base,
  &scc_info_LocalGridRequest_bosdyn_2fapi_2flocal_5fgrid_2eproto.base,
  &scc_info_LocalGridResponse_bosdyn_2fapi_2flocal_5fgrid_2eproto.base,
  &scc_info_LocalGridType_bosdyn_2fapi_2flocal_5fgrid_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_bosdyn_2fapi_2flocal_5fgrid_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_bosdyn_2fapi_2flocal_5fgrid_2eproto = {
  false, false, descriptor_table_protodef_bosdyn_2fapi_2flocal_5fgrid_2eproto, "bosdyn/api/local_grid.proto", 1759,
  &descriptor_table_bosdyn_2fapi_2flocal_5fgrid_2eproto_once, descriptor_table_bosdyn_2fapi_2flocal_5fgrid_2eproto_sccs, descriptor_table_bosdyn_2fapi_2flocal_5fgrid_2eproto_deps, 9, 3,
  schemas, file_default_instances, TableStruct_bosdyn_2fapi_2flocal_5fgrid_2eproto::offsets,
  file_level_metadata_bosdyn_2fapi_2flocal_5fgrid_2eproto, 9, file_level_enum_descriptors_bosdyn_2fapi_2flocal_5fgrid_2eproto, file_level_service_descriptors_bosdyn_2fapi_2flocal_5fgrid_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_bosdyn_2fapi_2flocal_5fgrid_2eproto = (static_cast<void>(::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_bosdyn_2fapi_2flocal_5fgrid_2eproto)), true);
namespace bosdyn {
namespace api {
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* LocalGrid_CellFormat_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_bosdyn_2fapi_2flocal_5fgrid_2eproto);
  return file_level_enum_descriptors_bosdyn_2fapi_2flocal_5fgrid_2eproto[0];
}
bool LocalGrid_CellFormat_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr LocalGrid_CellFormat LocalGrid::CELL_FORMAT_UNKNOWN;
constexpr LocalGrid_CellFormat LocalGrid::CELL_FORMAT_FLOAT32;
constexpr LocalGrid_CellFormat LocalGrid::CELL_FORMAT_FLOAT64;
constexpr LocalGrid_CellFormat LocalGrid::CELL_FORMAT_INT8;
constexpr LocalGrid_CellFormat LocalGrid::CELL_FORMAT_UINT8;
constexpr LocalGrid_CellFormat LocalGrid::CELL_FORMAT_INT16;
constexpr LocalGrid_CellFormat LocalGrid::CELL_FORMAT_UINT16;
constexpr LocalGrid_CellFormat LocalGrid::CellFormat_MIN;
constexpr LocalGrid_CellFormat LocalGrid::CellFormat_MAX;
constexpr int LocalGrid::CellFormat_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* LocalGrid_Encoding_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_bosdyn_2fapi_2flocal_5fgrid_2eproto);
  return file_level_enum_descriptors_bosdyn_2fapi_2flocal_5fgrid_2eproto[1];
}
bool LocalGrid_Encoding_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr LocalGrid_Encoding LocalGrid::ENCODING_UNKNOWN;
constexpr LocalGrid_Encoding LocalGrid::ENCODING_RAW;
constexpr LocalGrid_Encoding LocalGrid::ENCODING_RLE;
constexpr LocalGrid_Encoding LocalGrid::Encoding_MIN;
constexpr LocalGrid_Encoding LocalGrid::Encoding_MAX;
constexpr int LocalGrid::Encoding_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* LocalGridResponse_Status_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_bosdyn_2fapi_2flocal_5fgrid_2eproto);
  return file_level_enum_descriptors_bosdyn_2fapi_2flocal_5fgrid_2eproto[2];
}
bool LocalGridResponse_Status_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr LocalGridResponse_Status LocalGridResponse::STATUS_UNKNOWN;
constexpr LocalGridResponse_Status LocalGridResponse::STATUS_OK;
constexpr LocalGridResponse_Status LocalGridResponse::STATUS_NO_SUCH_GRID;
constexpr LocalGridResponse_Status LocalGridResponse::STATUS_DATA_UNAVAILABLE;
constexpr LocalGridResponse_Status LocalGridResponse::STATUS_DATA_INVALID;
constexpr LocalGridResponse_Status LocalGridResponse::Status_MIN;
constexpr LocalGridResponse_Status LocalGridResponse::Status_MAX;
constexpr int LocalGridResponse::Status_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)

// ===================================================================

void LocalGridType::InitAsDefaultInstance() {
}
class LocalGridType::_Internal {
 public:
};

LocalGridType::LocalGridType(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:bosdyn.api.LocalGridType)
}
LocalGridType::LocalGridType(const LocalGridType& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_name().empty()) {
    name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_name(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:bosdyn.api.LocalGridType)
}

void LocalGridType::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_LocalGridType_bosdyn_2fapi_2flocal_5fgrid_2eproto.base);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

LocalGridType::~LocalGridType() {
  // @@protoc_insertion_point(destructor:bosdyn.api.LocalGridType)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void LocalGridType::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void LocalGridType::ArenaDtor(void* object) {
  LocalGridType* _this = reinterpret_cast< LocalGridType* >(object);
  (void)_this;
}
void LocalGridType::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void LocalGridType::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const LocalGridType& LocalGridType::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_LocalGridType_bosdyn_2fapi_2flocal_5fgrid_2eproto.base);
  return *internal_default_instance();
}


void LocalGridType::Clear() {
// @@protoc_insertion_point(message_clear_start:bosdyn.api.LocalGridType)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* LocalGridType::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "bosdyn.api.LocalGridType.name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* LocalGridType::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:bosdyn.api.LocalGridType)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "bosdyn.api.LocalGridType.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:bosdyn.api.LocalGridType)
  return target;
}

size_t LocalGridType::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bosdyn.api.LocalGridType)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void LocalGridType::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bosdyn.api.LocalGridType)
  GOOGLE_DCHECK_NE(&from, this);
  const LocalGridType* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<LocalGridType>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bosdyn.api.LocalGridType)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bosdyn.api.LocalGridType)
    MergeFrom(*source);
  }
}

void LocalGridType::MergeFrom(const LocalGridType& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bosdyn.api.LocalGridType)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {
    _internal_set_name(from._internal_name());
  }
}

void LocalGridType::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bosdyn.api.LocalGridType)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LocalGridType::CopyFrom(const LocalGridType& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bosdyn.api.LocalGridType)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LocalGridType::IsInitialized() const {
  return true;
}

void LocalGridType::InternalSwap(LocalGridType* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  name_.Swap(&other->name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata LocalGridType::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void LocalGridRequest::InitAsDefaultInstance() {
}
class LocalGridRequest::_Internal {
 public:
};

LocalGridRequest::LocalGridRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:bosdyn.api.LocalGridRequest)
}
LocalGridRequest::LocalGridRequest(const LocalGridRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  local_grid_type_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_local_grid_type_name().empty()) {
    local_grid_type_name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_local_grid_type_name(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:bosdyn.api.LocalGridRequest)
}

void LocalGridRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_LocalGridRequest_bosdyn_2fapi_2flocal_5fgrid_2eproto.base);
  local_grid_type_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

LocalGridRequest::~LocalGridRequest() {
  // @@protoc_insertion_point(destructor:bosdyn.api.LocalGridRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void LocalGridRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  local_grid_type_name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void LocalGridRequest::ArenaDtor(void* object) {
  LocalGridRequest* _this = reinterpret_cast< LocalGridRequest* >(object);
  (void)_this;
}
void LocalGridRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void LocalGridRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const LocalGridRequest& LocalGridRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_LocalGridRequest_bosdyn_2fapi_2flocal_5fgrid_2eproto.base);
  return *internal_default_instance();
}


void LocalGridRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:bosdyn.api.LocalGridRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  local_grid_type_name_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* LocalGridRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string local_grid_type_name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_local_grid_type_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "bosdyn.api.LocalGridRequest.local_grid_type_name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* LocalGridRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:bosdyn.api.LocalGridRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string local_grid_type_name = 1;
  if (this->local_grid_type_name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_local_grid_type_name().data(), static_cast<int>(this->_internal_local_grid_type_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "bosdyn.api.LocalGridRequest.local_grid_type_name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_local_grid_type_name(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:bosdyn.api.LocalGridRequest)
  return target;
}

size_t LocalGridRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bosdyn.api.LocalGridRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string local_grid_type_name = 1;
  if (this->local_grid_type_name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_local_grid_type_name());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void LocalGridRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bosdyn.api.LocalGridRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const LocalGridRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<LocalGridRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bosdyn.api.LocalGridRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bosdyn.api.LocalGridRequest)
    MergeFrom(*source);
  }
}

void LocalGridRequest::MergeFrom(const LocalGridRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bosdyn.api.LocalGridRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.local_grid_type_name().size() > 0) {
    _internal_set_local_grid_type_name(from._internal_local_grid_type_name());
  }
}

void LocalGridRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bosdyn.api.LocalGridRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LocalGridRequest::CopyFrom(const LocalGridRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bosdyn.api.LocalGridRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LocalGridRequest::IsInitialized() const {
  return true;
}

void LocalGridRequest::InternalSwap(LocalGridRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  local_grid_type_name_.Swap(&other->local_grid_type_name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata LocalGridRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void LocalGridExtent::InitAsDefaultInstance() {
}
class LocalGridExtent::_Internal {
 public:
};

LocalGridExtent::LocalGridExtent(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:bosdyn.api.LocalGridExtent)
}
LocalGridExtent::LocalGridExtent(const LocalGridExtent& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&cell_size_, &from.cell_size_,
    static_cast<size_t>(reinterpret_cast<char*>(&num_cells_y_) -
    reinterpret_cast<char*>(&cell_size_)) + sizeof(num_cells_y_));
  // @@protoc_insertion_point(copy_constructor:bosdyn.api.LocalGridExtent)
}

void LocalGridExtent::SharedCtor() {
  ::memset(&cell_size_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&num_cells_y_) -
      reinterpret_cast<char*>(&cell_size_)) + sizeof(num_cells_y_));
}

LocalGridExtent::~LocalGridExtent() {
  // @@protoc_insertion_point(destructor:bosdyn.api.LocalGridExtent)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void LocalGridExtent::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void LocalGridExtent::ArenaDtor(void* object) {
  LocalGridExtent* _this = reinterpret_cast< LocalGridExtent* >(object);
  (void)_this;
}
void LocalGridExtent::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void LocalGridExtent::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const LocalGridExtent& LocalGridExtent::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_LocalGridExtent_bosdyn_2fapi_2flocal_5fgrid_2eproto.base);
  return *internal_default_instance();
}


void LocalGridExtent::Clear() {
// @@protoc_insertion_point(message_clear_start:bosdyn.api.LocalGridExtent)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&cell_size_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&num_cells_y_) -
      reinterpret_cast<char*>(&cell_size_)) + sizeof(num_cells_y_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* LocalGridExtent::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // double cell_size = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 17)) {
          cell_size_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else goto handle_unusual;
        continue;
      // int32 num_cells_x = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          num_cells_x_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 num_cells_y = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          num_cells_y_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* LocalGridExtent::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:bosdyn.api.LocalGridExtent)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double cell_size = 2;
  if (!(this->cell_size() <= 0 && this->cell_size() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(2, this->_internal_cell_size(), target);
  }

  // int32 num_cells_x = 3;
  if (this->num_cells_x() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(3, this->_internal_num_cells_x(), target);
  }

  // int32 num_cells_y = 4;
  if (this->num_cells_y() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(4, this->_internal_num_cells_y(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:bosdyn.api.LocalGridExtent)
  return target;
}

size_t LocalGridExtent::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bosdyn.api.LocalGridExtent)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // double cell_size = 2;
  if (!(this->cell_size() <= 0 && this->cell_size() >= 0)) {
    total_size += 1 + 8;
  }

  // int32 num_cells_x = 3;
  if (this->num_cells_x() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_num_cells_x());
  }

  // int32 num_cells_y = 4;
  if (this->num_cells_y() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_num_cells_y());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void LocalGridExtent::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bosdyn.api.LocalGridExtent)
  GOOGLE_DCHECK_NE(&from, this);
  const LocalGridExtent* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<LocalGridExtent>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bosdyn.api.LocalGridExtent)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bosdyn.api.LocalGridExtent)
    MergeFrom(*source);
  }
}

void LocalGridExtent::MergeFrom(const LocalGridExtent& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bosdyn.api.LocalGridExtent)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (!(from.cell_size() <= 0 && from.cell_size() >= 0)) {
    _internal_set_cell_size(from._internal_cell_size());
  }
  if (from.num_cells_x() != 0) {
    _internal_set_num_cells_x(from._internal_num_cells_x());
  }
  if (from.num_cells_y() != 0) {
    _internal_set_num_cells_y(from._internal_num_cells_y());
  }
}

void LocalGridExtent::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bosdyn.api.LocalGridExtent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LocalGridExtent::CopyFrom(const LocalGridExtent& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bosdyn.api.LocalGridExtent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LocalGridExtent::IsInitialized() const {
  return true;
}

void LocalGridExtent::InternalSwap(LocalGridExtent* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(LocalGridExtent, num_cells_y_)
      + sizeof(LocalGridExtent::num_cells_y_)
      - PROTOBUF_FIELD_OFFSET(LocalGridExtent, cell_size_)>(
          reinterpret_cast<char*>(&cell_size_),
          reinterpret_cast<char*>(&other->cell_size_));
}

::PROTOBUF_NAMESPACE_ID::Metadata LocalGridExtent::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void LocalGrid::InitAsDefaultInstance() {
  ::bosdyn::api::_LocalGrid_default_instance_._instance.get_mutable()->acquisition_time_ = const_cast< PROTOBUF_NAMESPACE_ID::Timestamp*>(
      PROTOBUF_NAMESPACE_ID::Timestamp::internal_default_instance());
  ::bosdyn::api::_LocalGrid_default_instance_._instance.get_mutable()->transforms_snapshot_ = const_cast< ::bosdyn::api::FrameTreeSnapshot*>(
      ::bosdyn::api::FrameTreeSnapshot::internal_default_instance());
  ::bosdyn::api::_LocalGrid_default_instance_._instance.get_mutable()->extent_ = const_cast< ::bosdyn::api::LocalGridExtent*>(
      ::bosdyn::api::LocalGridExtent::internal_default_instance());
}
class LocalGrid::_Internal {
 public:
  static const PROTOBUF_NAMESPACE_ID::Timestamp& acquisition_time(const LocalGrid* msg);
  static const ::bosdyn::api::FrameTreeSnapshot& transforms_snapshot(const LocalGrid* msg);
  static const ::bosdyn::api::LocalGridExtent& extent(const LocalGrid* msg);
};

const PROTOBUF_NAMESPACE_ID::Timestamp&
LocalGrid::_Internal::acquisition_time(const LocalGrid* msg) {
  return *msg->acquisition_time_;
}
const ::bosdyn::api::FrameTreeSnapshot&
LocalGrid::_Internal::transforms_snapshot(const LocalGrid* msg) {
  return *msg->transforms_snapshot_;
}
const ::bosdyn::api::LocalGridExtent&
LocalGrid::_Internal::extent(const LocalGrid* msg) {
  return *msg->extent_;
}
void LocalGrid::clear_acquisition_time() {
  if (GetArena() == nullptr && acquisition_time_ != nullptr) {
    delete acquisition_time_;
  }
  acquisition_time_ = nullptr;
}
void LocalGrid::clear_transforms_snapshot() {
  if (GetArena() == nullptr && transforms_snapshot_ != nullptr) {
    delete transforms_snapshot_;
  }
  transforms_snapshot_ = nullptr;
}
LocalGrid::LocalGrid(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  rle_counts_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:bosdyn.api.LocalGrid)
}
LocalGrid::LocalGrid(const LocalGrid& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      rle_counts_(from.rle_counts_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  local_grid_type_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_local_grid_type_name().empty()) {
    local_grid_type_name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_local_grid_type_name(),
      GetArena());
  }
  data_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_data().empty()) {
    data_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_data(),
      GetArena());
  }
  frame_name_local_grid_data_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_frame_name_local_grid_data().empty()) {
    frame_name_local_grid_data_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_frame_name_local_grid_data(),
      GetArena());
  }
  if (from._internal_has_extent()) {
    extent_ = new ::bosdyn::api::LocalGridExtent(*from.extent_);
  } else {
    extent_ = nullptr;
  }
  if (from._internal_has_acquisition_time()) {
    acquisition_time_ = new PROTOBUF_NAMESPACE_ID::Timestamp(*from.acquisition_time_);
  } else {
    acquisition_time_ = nullptr;
  }
  if (from._internal_has_transforms_snapshot()) {
    transforms_snapshot_ = new ::bosdyn::api::FrameTreeSnapshot(*from.transforms_snapshot_);
  } else {
    transforms_snapshot_ = nullptr;
  }
  ::memcpy(&cell_format_, &from.cell_format_,
    static_cast<size_t>(reinterpret_cast<char*>(&cell_value_offset_) -
    reinterpret_cast<char*>(&cell_format_)) + sizeof(cell_value_offset_));
  // @@protoc_insertion_point(copy_constructor:bosdyn.api.LocalGrid)
}

void LocalGrid::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_LocalGrid_bosdyn_2fapi_2flocal_5fgrid_2eproto.base);
  local_grid_type_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  data_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  frame_name_local_grid_data_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&extent_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&cell_value_offset_) -
      reinterpret_cast<char*>(&extent_)) + sizeof(cell_value_offset_));
}

LocalGrid::~LocalGrid() {
  // @@protoc_insertion_point(destructor:bosdyn.api.LocalGrid)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void LocalGrid::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  local_grid_type_name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  data_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  frame_name_local_grid_data_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete extent_;
  if (this != internal_default_instance()) delete acquisition_time_;
  if (this != internal_default_instance()) delete transforms_snapshot_;
}

void LocalGrid::ArenaDtor(void* object) {
  LocalGrid* _this = reinterpret_cast< LocalGrid* >(object);
  (void)_this;
}
void LocalGrid::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void LocalGrid::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const LocalGrid& LocalGrid::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_LocalGrid_bosdyn_2fapi_2flocal_5fgrid_2eproto.base);
  return *internal_default_instance();
}


void LocalGrid::Clear() {
// @@protoc_insertion_point(message_clear_start:bosdyn.api.LocalGrid)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  rle_counts_.Clear();
  local_grid_type_name_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  data_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  frame_name_local_grid_data_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  if (GetArena() == nullptr && extent_ != nullptr) {
    delete extent_;
  }
  extent_ = nullptr;
  if (GetArena() == nullptr && acquisition_time_ != nullptr) {
    delete acquisition_time_;
  }
  acquisition_time_ = nullptr;
  if (GetArena() == nullptr && transforms_snapshot_ != nullptr) {
    delete transforms_snapshot_;
  }
  transforms_snapshot_ = nullptr;
  ::memset(&cell_format_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&cell_value_offset_) -
      reinterpret_cast<char*>(&cell_format_)) + sizeof(cell_value_offset_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* LocalGrid::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string local_grid_type_name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_local_grid_type_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "bosdyn.api.LocalGrid.local_grid_type_name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .bosdyn.api.LocalGridExtent extent = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_extent(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .bosdyn.api.LocalGrid.CellFormat cell_format = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_cell_format(static_cast<::bosdyn::api::LocalGrid_CellFormat>(val));
        } else goto handle_unusual;
        continue;
      // .bosdyn.api.LocalGrid.Encoding encoding = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_encoding(static_cast<::bosdyn::api::LocalGrid_Encoding>(val));
        } else goto handle_unusual;
        continue;
      // bytes data = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          auto str = _internal_mutable_data();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated int32 rle_counts = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 58)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedInt32Parser(_internal_mutable_rle_counts(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 56) {
          _internal_add_rle_counts(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // double cell_value_scale = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 65)) {
          cell_value_scale_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else goto handle_unusual;
        continue;
      // double cell_value_offset = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 73)) {
          cell_value_offset_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else goto handle_unusual;
        continue;
      // string frame_name_local_grid_data = 11;
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 90)) {
          auto str = _internal_mutable_frame_name_local_grid_data();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "bosdyn.api.LocalGrid.frame_name_local_grid_data"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .google.protobuf.Timestamp acquisition_time = 30;
      case 30:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 242)) {
          ptr = ctx->ParseMessage(_internal_mutable_acquisition_time(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .bosdyn.api.FrameTreeSnapshot transforms_snapshot = 31;
      case 31:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 250)) {
          ptr = ctx->ParseMessage(_internal_mutable_transforms_snapshot(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* LocalGrid::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:bosdyn.api.LocalGrid)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string local_grid_type_name = 1;
  if (this->local_grid_type_name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_local_grid_type_name().data(), static_cast<int>(this->_internal_local_grid_type_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "bosdyn.api.LocalGrid.local_grid_type_name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_local_grid_type_name(), target);
  }

  // .bosdyn.api.LocalGridExtent extent = 3;
  if (this->has_extent()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::extent(this), target, stream);
  }

  // .bosdyn.api.LocalGrid.CellFormat cell_format = 4;
  if (this->cell_format() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      4, this->_internal_cell_format(), target);
  }

  // .bosdyn.api.LocalGrid.Encoding encoding = 5;
  if (this->encoding() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      5, this->_internal_encoding(), target);
  }

  // bytes data = 6;
  if (this->data().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        6, this->_internal_data(), target);
  }

  // repeated int32 rle_counts = 7;
  {
    int byte_size = _rle_counts_cached_byte_size_.load(std::memory_order_relaxed);
    if (byte_size > 0) {
      target = stream->WriteInt32Packed(
          7, _internal_rle_counts(), byte_size, target);
    }
  }

  // double cell_value_scale = 8;
  if (!(this->cell_value_scale() <= 0 && this->cell_value_scale() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(8, this->_internal_cell_value_scale(), target);
  }

  // double cell_value_offset = 9;
  if (!(this->cell_value_offset() <= 0 && this->cell_value_offset() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(9, this->_internal_cell_value_offset(), target);
  }

  // string frame_name_local_grid_data = 11;
  if (this->frame_name_local_grid_data().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_frame_name_local_grid_data().data(), static_cast<int>(this->_internal_frame_name_local_grid_data().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "bosdyn.api.LocalGrid.frame_name_local_grid_data");
    target = stream->WriteStringMaybeAliased(
        11, this->_internal_frame_name_local_grid_data(), target);
  }

  // .google.protobuf.Timestamp acquisition_time = 30;
  if (this->has_acquisition_time()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        30, _Internal::acquisition_time(this), target, stream);
  }

  // .bosdyn.api.FrameTreeSnapshot transforms_snapshot = 31;
  if (this->has_transforms_snapshot()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        31, _Internal::transforms_snapshot(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:bosdyn.api.LocalGrid)
  return target;
}

size_t LocalGrid::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bosdyn.api.LocalGrid)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated int32 rle_counts = 7;
  {
    size_t data_size = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      Int32Size(this->rle_counts_);
    if (data_size > 0) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
            static_cast<::PROTOBUF_NAMESPACE_ID::int32>(data_size));
    }
    int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(data_size);
    _rle_counts_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  // string local_grid_type_name = 1;
  if (this->local_grid_type_name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_local_grid_type_name());
  }

  // bytes data = 6;
  if (this->data().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_data());
  }

  // string frame_name_local_grid_data = 11;
  if (this->frame_name_local_grid_data().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_frame_name_local_grid_data());
  }

  // .bosdyn.api.LocalGridExtent extent = 3;
  if (this->has_extent()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *extent_);
  }

  // .google.protobuf.Timestamp acquisition_time = 30;
  if (this->has_acquisition_time()) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *acquisition_time_);
  }

  // .bosdyn.api.FrameTreeSnapshot transforms_snapshot = 31;
  if (this->has_transforms_snapshot()) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *transforms_snapshot_);
  }

  // .bosdyn.api.LocalGrid.CellFormat cell_format = 4;
  if (this->cell_format() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_cell_format());
  }

  // .bosdyn.api.LocalGrid.Encoding encoding = 5;
  if (this->encoding() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_encoding());
  }

  // double cell_value_scale = 8;
  if (!(this->cell_value_scale() <= 0 && this->cell_value_scale() >= 0)) {
    total_size += 1 + 8;
  }

  // double cell_value_offset = 9;
  if (!(this->cell_value_offset() <= 0 && this->cell_value_offset() >= 0)) {
    total_size += 1 + 8;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void LocalGrid::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bosdyn.api.LocalGrid)
  GOOGLE_DCHECK_NE(&from, this);
  const LocalGrid* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<LocalGrid>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bosdyn.api.LocalGrid)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bosdyn.api.LocalGrid)
    MergeFrom(*source);
  }
}

void LocalGrid::MergeFrom(const LocalGrid& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bosdyn.api.LocalGrid)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  rle_counts_.MergeFrom(from.rle_counts_);
  if (from.local_grid_type_name().size() > 0) {
    _internal_set_local_grid_type_name(from._internal_local_grid_type_name());
  }
  if (from.data().size() > 0) {
    _internal_set_data(from._internal_data());
  }
  if (from.frame_name_local_grid_data().size() > 0) {
    _internal_set_frame_name_local_grid_data(from._internal_frame_name_local_grid_data());
  }
  if (from.has_extent()) {
    _internal_mutable_extent()->::bosdyn::api::LocalGridExtent::MergeFrom(from._internal_extent());
  }
  if (from.has_acquisition_time()) {
    _internal_mutable_acquisition_time()->PROTOBUF_NAMESPACE_ID::Timestamp::MergeFrom(from._internal_acquisition_time());
  }
  if (from.has_transforms_snapshot()) {
    _internal_mutable_transforms_snapshot()->::bosdyn::api::FrameTreeSnapshot::MergeFrom(from._internal_transforms_snapshot());
  }
  if (from.cell_format() != 0) {
    _internal_set_cell_format(from._internal_cell_format());
  }
  if (from.encoding() != 0) {
    _internal_set_encoding(from._internal_encoding());
  }
  if (!(from.cell_value_scale() <= 0 && from.cell_value_scale() >= 0)) {
    _internal_set_cell_value_scale(from._internal_cell_value_scale());
  }
  if (!(from.cell_value_offset() <= 0 && from.cell_value_offset() >= 0)) {
    _internal_set_cell_value_offset(from._internal_cell_value_offset());
  }
}

void LocalGrid::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bosdyn.api.LocalGrid)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LocalGrid::CopyFrom(const LocalGrid& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bosdyn.api.LocalGrid)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LocalGrid::IsInitialized() const {
  return true;
}

void LocalGrid::InternalSwap(LocalGrid* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  rle_counts_.InternalSwap(&other->rle_counts_);
  local_grid_type_name_.Swap(&other->local_grid_type_name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  data_.Swap(&other->data_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  frame_name_local_grid_data_.Swap(&other->frame_name_local_grid_data_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(LocalGrid, cell_value_offset_)
      + sizeof(LocalGrid::cell_value_offset_)
      - PROTOBUF_FIELD_OFFSET(LocalGrid, extent_)>(
          reinterpret_cast<char*>(&extent_),
          reinterpret_cast<char*>(&other->extent_));
}

::PROTOBUF_NAMESPACE_ID::Metadata LocalGrid::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void LocalGridResponse::InitAsDefaultInstance() {
  ::bosdyn::api::_LocalGridResponse_default_instance_._instance.get_mutable()->local_grid_ = const_cast< ::bosdyn::api::LocalGrid*>(
      ::bosdyn::api::LocalGrid::internal_default_instance());
}
class LocalGridResponse::_Internal {
 public:
  static const ::bosdyn::api::LocalGrid& local_grid(const LocalGridResponse* msg);
};

const ::bosdyn::api::LocalGrid&
LocalGridResponse::_Internal::local_grid(const LocalGridResponse* msg) {
  return *msg->local_grid_;
}
LocalGridResponse::LocalGridResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:bosdyn.api.LocalGridResponse)
}
LocalGridResponse::LocalGridResponse(const LocalGridResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  local_grid_type_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_local_grid_type_name().empty()) {
    local_grid_type_name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_local_grid_type_name(),
      GetArena());
  }
  if (from._internal_has_local_grid()) {
    local_grid_ = new ::bosdyn::api::LocalGrid(*from.local_grid_);
  } else {
    local_grid_ = nullptr;
  }
  status_ = from.status_;
  // @@protoc_insertion_point(copy_constructor:bosdyn.api.LocalGridResponse)
}

void LocalGridResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_LocalGridResponse_bosdyn_2fapi_2flocal_5fgrid_2eproto.base);
  local_grid_type_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&local_grid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&status_) -
      reinterpret_cast<char*>(&local_grid_)) + sizeof(status_));
}

LocalGridResponse::~LocalGridResponse() {
  // @@protoc_insertion_point(destructor:bosdyn.api.LocalGridResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void LocalGridResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  local_grid_type_name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete local_grid_;
}

void LocalGridResponse::ArenaDtor(void* object) {
  LocalGridResponse* _this = reinterpret_cast< LocalGridResponse* >(object);
  (void)_this;
}
void LocalGridResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void LocalGridResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const LocalGridResponse& LocalGridResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_LocalGridResponse_bosdyn_2fapi_2flocal_5fgrid_2eproto.base);
  return *internal_default_instance();
}


void LocalGridResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:bosdyn.api.LocalGridResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  local_grid_type_name_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  if (GetArena() == nullptr && local_grid_ != nullptr) {
    delete local_grid_;
  }
  local_grid_ = nullptr;
  status_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* LocalGridResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string local_grid_type_name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_local_grid_type_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "bosdyn.api.LocalGridResponse.local_grid_type_name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .bosdyn.api.LocalGridResponse.Status status = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_status(static_cast<::bosdyn::api::LocalGridResponse_Status>(val));
        } else goto handle_unusual;
        continue;
      // .bosdyn.api.LocalGrid local_grid = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_local_grid(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* LocalGridResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:bosdyn.api.LocalGridResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string local_grid_type_name = 1;
  if (this->local_grid_type_name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_local_grid_type_name().data(), static_cast<int>(this->_internal_local_grid_type_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "bosdyn.api.LocalGridResponse.local_grid_type_name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_local_grid_type_name(), target);
  }

  // .bosdyn.api.LocalGridResponse.Status status = 2;
  if (this->status() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      2, this->_internal_status(), target);
  }

  // .bosdyn.api.LocalGrid local_grid = 3;
  if (this->has_local_grid()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::local_grid(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:bosdyn.api.LocalGridResponse)
  return target;
}

size_t LocalGridResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bosdyn.api.LocalGridResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string local_grid_type_name = 1;
  if (this->local_grid_type_name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_local_grid_type_name());
  }

  // .bosdyn.api.LocalGrid local_grid = 3;
  if (this->has_local_grid()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *local_grid_);
  }

  // .bosdyn.api.LocalGridResponse.Status status = 2;
  if (this->status() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_status());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void LocalGridResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bosdyn.api.LocalGridResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const LocalGridResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<LocalGridResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bosdyn.api.LocalGridResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bosdyn.api.LocalGridResponse)
    MergeFrom(*source);
  }
}

void LocalGridResponse::MergeFrom(const LocalGridResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bosdyn.api.LocalGridResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.local_grid_type_name().size() > 0) {
    _internal_set_local_grid_type_name(from._internal_local_grid_type_name());
  }
  if (from.has_local_grid()) {
    _internal_mutable_local_grid()->::bosdyn::api::LocalGrid::MergeFrom(from._internal_local_grid());
  }
  if (from.status() != 0) {
    _internal_set_status(from._internal_status());
  }
}

void LocalGridResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bosdyn.api.LocalGridResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LocalGridResponse::CopyFrom(const LocalGridResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bosdyn.api.LocalGridResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LocalGridResponse::IsInitialized() const {
  return true;
}

void LocalGridResponse::InternalSwap(LocalGridResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  local_grid_type_name_.Swap(&other->local_grid_type_name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(LocalGridResponse, status_)
      + sizeof(LocalGridResponse::status_)
      - PROTOBUF_FIELD_OFFSET(LocalGridResponse, local_grid_)>(
          reinterpret_cast<char*>(&local_grid_),
          reinterpret_cast<char*>(&other->local_grid_));
}

::PROTOBUF_NAMESPACE_ID::Metadata LocalGridResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GetLocalGridTypesRequest::InitAsDefaultInstance() {
  ::bosdyn::api::_GetLocalGridTypesRequest_default_instance_._instance.get_mutable()->header_ = const_cast< ::bosdyn::api::RequestHeader*>(
      ::bosdyn::api::RequestHeader::internal_default_instance());
}
class GetLocalGridTypesRequest::_Internal {
 public:
  static const ::bosdyn::api::RequestHeader& header(const GetLocalGridTypesRequest* msg);
};

const ::bosdyn::api::RequestHeader&
GetLocalGridTypesRequest::_Internal::header(const GetLocalGridTypesRequest* msg) {
  return *msg->header_;
}
void GetLocalGridTypesRequest::clear_header() {
  if (GetArena() == nullptr && header_ != nullptr) {
    delete header_;
  }
  header_ = nullptr;
}
GetLocalGridTypesRequest::GetLocalGridTypesRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:bosdyn.api.GetLocalGridTypesRequest)
}
GetLocalGridTypesRequest::GetLocalGridTypesRequest(const GetLocalGridTypesRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_header()) {
    header_ = new ::bosdyn::api::RequestHeader(*from.header_);
  } else {
    header_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:bosdyn.api.GetLocalGridTypesRequest)
}

void GetLocalGridTypesRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GetLocalGridTypesRequest_bosdyn_2fapi_2flocal_5fgrid_2eproto.base);
  header_ = nullptr;
}

GetLocalGridTypesRequest::~GetLocalGridTypesRequest() {
  // @@protoc_insertion_point(destructor:bosdyn.api.GetLocalGridTypesRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetLocalGridTypesRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete header_;
}

void GetLocalGridTypesRequest::ArenaDtor(void* object) {
  GetLocalGridTypesRequest* _this = reinterpret_cast< GetLocalGridTypesRequest* >(object);
  (void)_this;
}
void GetLocalGridTypesRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetLocalGridTypesRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetLocalGridTypesRequest& GetLocalGridTypesRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetLocalGridTypesRequest_bosdyn_2fapi_2flocal_5fgrid_2eproto.base);
  return *internal_default_instance();
}


void GetLocalGridTypesRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:bosdyn.api.GetLocalGridTypesRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && header_ != nullptr) {
    delete header_;
  }
  header_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetLocalGridTypesRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .bosdyn.api.RequestHeader header = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_header(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetLocalGridTypesRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:bosdyn.api.GetLocalGridTypesRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .bosdyn.api.RequestHeader header = 1;
  if (this->has_header()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::header(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:bosdyn.api.GetLocalGridTypesRequest)
  return target;
}

size_t GetLocalGridTypesRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bosdyn.api.GetLocalGridTypesRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .bosdyn.api.RequestHeader header = 1;
  if (this->has_header()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *header_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetLocalGridTypesRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bosdyn.api.GetLocalGridTypesRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetLocalGridTypesRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetLocalGridTypesRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bosdyn.api.GetLocalGridTypesRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bosdyn.api.GetLocalGridTypesRequest)
    MergeFrom(*source);
  }
}

void GetLocalGridTypesRequest::MergeFrom(const GetLocalGridTypesRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bosdyn.api.GetLocalGridTypesRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_header()) {
    _internal_mutable_header()->::bosdyn::api::RequestHeader::MergeFrom(from._internal_header());
  }
}

void GetLocalGridTypesRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bosdyn.api.GetLocalGridTypesRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetLocalGridTypesRequest::CopyFrom(const GetLocalGridTypesRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bosdyn.api.GetLocalGridTypesRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetLocalGridTypesRequest::IsInitialized() const {
  return true;
}

void GetLocalGridTypesRequest::InternalSwap(GetLocalGridTypesRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(header_, other->header_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetLocalGridTypesRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GetLocalGridTypesResponse::InitAsDefaultInstance() {
  ::bosdyn::api::_GetLocalGridTypesResponse_default_instance_._instance.get_mutable()->header_ = const_cast< ::bosdyn::api::ResponseHeader*>(
      ::bosdyn::api::ResponseHeader::internal_default_instance());
}
class GetLocalGridTypesResponse::_Internal {
 public:
  static const ::bosdyn::api::ResponseHeader& header(const GetLocalGridTypesResponse* msg);
};

const ::bosdyn::api::ResponseHeader&
GetLocalGridTypesResponse::_Internal::header(const GetLocalGridTypesResponse* msg) {
  return *msg->header_;
}
void GetLocalGridTypesResponse::clear_header() {
  if (GetArena() == nullptr && header_ != nullptr) {
    delete header_;
  }
  header_ = nullptr;
}
GetLocalGridTypesResponse::GetLocalGridTypesResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  local_grid_type_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:bosdyn.api.GetLocalGridTypesResponse)
}
GetLocalGridTypesResponse::GetLocalGridTypesResponse(const GetLocalGridTypesResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      local_grid_type_(from.local_grid_type_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_header()) {
    header_ = new ::bosdyn::api::ResponseHeader(*from.header_);
  } else {
    header_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:bosdyn.api.GetLocalGridTypesResponse)
}

void GetLocalGridTypesResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GetLocalGridTypesResponse_bosdyn_2fapi_2flocal_5fgrid_2eproto.base);
  header_ = nullptr;
}

GetLocalGridTypesResponse::~GetLocalGridTypesResponse() {
  // @@protoc_insertion_point(destructor:bosdyn.api.GetLocalGridTypesResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetLocalGridTypesResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete header_;
}

void GetLocalGridTypesResponse::ArenaDtor(void* object) {
  GetLocalGridTypesResponse* _this = reinterpret_cast< GetLocalGridTypesResponse* >(object);
  (void)_this;
}
void GetLocalGridTypesResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetLocalGridTypesResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetLocalGridTypesResponse& GetLocalGridTypesResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetLocalGridTypesResponse_bosdyn_2fapi_2flocal_5fgrid_2eproto.base);
  return *internal_default_instance();
}


void GetLocalGridTypesResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:bosdyn.api.GetLocalGridTypesResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  local_grid_type_.Clear();
  if (GetArena() == nullptr && header_ != nullptr) {
    delete header_;
  }
  header_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetLocalGridTypesResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .bosdyn.api.ResponseHeader header = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_header(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .bosdyn.api.LocalGridType local_grid_type = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_local_grid_type(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetLocalGridTypesResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:bosdyn.api.GetLocalGridTypesResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .bosdyn.api.ResponseHeader header = 1;
  if (this->has_header()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::header(this), target, stream);
  }

  // repeated .bosdyn.api.LocalGridType local_grid_type = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_local_grid_type_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, this->_internal_local_grid_type(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:bosdyn.api.GetLocalGridTypesResponse)
  return target;
}

size_t GetLocalGridTypesResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bosdyn.api.GetLocalGridTypesResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .bosdyn.api.LocalGridType local_grid_type = 2;
  total_size += 1UL * this->_internal_local_grid_type_size();
  for (const auto& msg : this->local_grid_type_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // .bosdyn.api.ResponseHeader header = 1;
  if (this->has_header()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *header_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetLocalGridTypesResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bosdyn.api.GetLocalGridTypesResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const GetLocalGridTypesResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetLocalGridTypesResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bosdyn.api.GetLocalGridTypesResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bosdyn.api.GetLocalGridTypesResponse)
    MergeFrom(*source);
  }
}

void GetLocalGridTypesResponse::MergeFrom(const GetLocalGridTypesResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bosdyn.api.GetLocalGridTypesResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  local_grid_type_.MergeFrom(from.local_grid_type_);
  if (from.has_header()) {
    _internal_mutable_header()->::bosdyn::api::ResponseHeader::MergeFrom(from._internal_header());
  }
}

void GetLocalGridTypesResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bosdyn.api.GetLocalGridTypesResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetLocalGridTypesResponse::CopyFrom(const GetLocalGridTypesResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bosdyn.api.GetLocalGridTypesResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetLocalGridTypesResponse::IsInitialized() const {
  return true;
}

void GetLocalGridTypesResponse::InternalSwap(GetLocalGridTypesResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  local_grid_type_.InternalSwap(&other->local_grid_type_);
  swap(header_, other->header_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetLocalGridTypesResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GetLocalGridsRequest::InitAsDefaultInstance() {
  ::bosdyn::api::_GetLocalGridsRequest_default_instance_._instance.get_mutable()->header_ = const_cast< ::bosdyn::api::RequestHeader*>(
      ::bosdyn::api::RequestHeader::internal_default_instance());
}
class GetLocalGridsRequest::_Internal {
 public:
  static const ::bosdyn::api::RequestHeader& header(const GetLocalGridsRequest* msg);
};

const ::bosdyn::api::RequestHeader&
GetLocalGridsRequest::_Internal::header(const GetLocalGridsRequest* msg) {
  return *msg->header_;
}
void GetLocalGridsRequest::clear_header() {
  if (GetArena() == nullptr && header_ != nullptr) {
    delete header_;
  }
  header_ = nullptr;
}
GetLocalGridsRequest::GetLocalGridsRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  local_grid_requests_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:bosdyn.api.GetLocalGridsRequest)
}
GetLocalGridsRequest::GetLocalGridsRequest(const GetLocalGridsRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      local_grid_requests_(from.local_grid_requests_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_header()) {
    header_ = new ::bosdyn::api::RequestHeader(*from.header_);
  } else {
    header_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:bosdyn.api.GetLocalGridsRequest)
}

void GetLocalGridsRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GetLocalGridsRequest_bosdyn_2fapi_2flocal_5fgrid_2eproto.base);
  header_ = nullptr;
}

GetLocalGridsRequest::~GetLocalGridsRequest() {
  // @@protoc_insertion_point(destructor:bosdyn.api.GetLocalGridsRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetLocalGridsRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete header_;
}

void GetLocalGridsRequest::ArenaDtor(void* object) {
  GetLocalGridsRequest* _this = reinterpret_cast< GetLocalGridsRequest* >(object);
  (void)_this;
}
void GetLocalGridsRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetLocalGridsRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetLocalGridsRequest& GetLocalGridsRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetLocalGridsRequest_bosdyn_2fapi_2flocal_5fgrid_2eproto.base);
  return *internal_default_instance();
}


void GetLocalGridsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:bosdyn.api.GetLocalGridsRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  local_grid_requests_.Clear();
  if (GetArena() == nullptr && header_ != nullptr) {
    delete header_;
  }
  header_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetLocalGridsRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .bosdyn.api.RequestHeader header = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_header(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .bosdyn.api.LocalGridRequest local_grid_requests = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_local_grid_requests(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetLocalGridsRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:bosdyn.api.GetLocalGridsRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .bosdyn.api.RequestHeader header = 1;
  if (this->has_header()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::header(this), target, stream);
  }

  // repeated .bosdyn.api.LocalGridRequest local_grid_requests = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_local_grid_requests_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, this->_internal_local_grid_requests(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:bosdyn.api.GetLocalGridsRequest)
  return target;
}

size_t GetLocalGridsRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bosdyn.api.GetLocalGridsRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .bosdyn.api.LocalGridRequest local_grid_requests = 2;
  total_size += 1UL * this->_internal_local_grid_requests_size();
  for (const auto& msg : this->local_grid_requests_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // .bosdyn.api.RequestHeader header = 1;
  if (this->has_header()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *header_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetLocalGridsRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bosdyn.api.GetLocalGridsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetLocalGridsRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetLocalGridsRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bosdyn.api.GetLocalGridsRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bosdyn.api.GetLocalGridsRequest)
    MergeFrom(*source);
  }
}

void GetLocalGridsRequest::MergeFrom(const GetLocalGridsRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bosdyn.api.GetLocalGridsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  local_grid_requests_.MergeFrom(from.local_grid_requests_);
  if (from.has_header()) {
    _internal_mutable_header()->::bosdyn::api::RequestHeader::MergeFrom(from._internal_header());
  }
}

void GetLocalGridsRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bosdyn.api.GetLocalGridsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetLocalGridsRequest::CopyFrom(const GetLocalGridsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bosdyn.api.GetLocalGridsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetLocalGridsRequest::IsInitialized() const {
  return true;
}

void GetLocalGridsRequest::InternalSwap(GetLocalGridsRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  local_grid_requests_.InternalSwap(&other->local_grid_requests_);
  swap(header_, other->header_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetLocalGridsRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GetLocalGridsResponse::InitAsDefaultInstance() {
  ::bosdyn::api::_GetLocalGridsResponse_default_instance_._instance.get_mutable()->header_ = const_cast< ::bosdyn::api::ResponseHeader*>(
      ::bosdyn::api::ResponseHeader::internal_default_instance());
}
class GetLocalGridsResponse::_Internal {
 public:
  static const ::bosdyn::api::ResponseHeader& header(const GetLocalGridsResponse* msg);
};

const ::bosdyn::api::ResponseHeader&
GetLocalGridsResponse::_Internal::header(const GetLocalGridsResponse* msg) {
  return *msg->header_;
}
void GetLocalGridsResponse::clear_header() {
  if (GetArena() == nullptr && header_ != nullptr) {
    delete header_;
  }
  header_ = nullptr;
}
GetLocalGridsResponse::GetLocalGridsResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  local_grid_responses_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:bosdyn.api.GetLocalGridsResponse)
}
GetLocalGridsResponse::GetLocalGridsResponse(const GetLocalGridsResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      local_grid_responses_(from.local_grid_responses_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_header()) {
    header_ = new ::bosdyn::api::ResponseHeader(*from.header_);
  } else {
    header_ = nullptr;
  }
  num_local_grid_errors_ = from.num_local_grid_errors_;
  // @@protoc_insertion_point(copy_constructor:bosdyn.api.GetLocalGridsResponse)
}

void GetLocalGridsResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GetLocalGridsResponse_bosdyn_2fapi_2flocal_5fgrid_2eproto.base);
  ::memset(&header_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&num_local_grid_errors_) -
      reinterpret_cast<char*>(&header_)) + sizeof(num_local_grid_errors_));
}

GetLocalGridsResponse::~GetLocalGridsResponse() {
  // @@protoc_insertion_point(destructor:bosdyn.api.GetLocalGridsResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetLocalGridsResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete header_;
}

void GetLocalGridsResponse::ArenaDtor(void* object) {
  GetLocalGridsResponse* _this = reinterpret_cast< GetLocalGridsResponse* >(object);
  (void)_this;
}
void GetLocalGridsResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetLocalGridsResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetLocalGridsResponse& GetLocalGridsResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetLocalGridsResponse_bosdyn_2fapi_2flocal_5fgrid_2eproto.base);
  return *internal_default_instance();
}


void GetLocalGridsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:bosdyn.api.GetLocalGridsResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  local_grid_responses_.Clear();
  if (GetArena() == nullptr && header_ != nullptr) {
    delete header_;
  }
  header_ = nullptr;
  num_local_grid_errors_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetLocalGridsResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .bosdyn.api.ResponseHeader header = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_header(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .bosdyn.api.LocalGridResponse local_grid_responses = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_local_grid_responses(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else goto handle_unusual;
        continue;
      // int32 num_local_grid_errors = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          num_local_grid_errors_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetLocalGridsResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:bosdyn.api.GetLocalGridsResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .bosdyn.api.ResponseHeader header = 1;
  if (this->has_header()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::header(this), target, stream);
  }

  // repeated .bosdyn.api.LocalGridResponse local_grid_responses = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_local_grid_responses_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, this->_internal_local_grid_responses(i), target, stream);
  }

  // int32 num_local_grid_errors = 3;
  if (this->num_local_grid_errors() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(3, this->_internal_num_local_grid_errors(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:bosdyn.api.GetLocalGridsResponse)
  return target;
}

size_t GetLocalGridsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bosdyn.api.GetLocalGridsResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .bosdyn.api.LocalGridResponse local_grid_responses = 2;
  total_size += 1UL * this->_internal_local_grid_responses_size();
  for (const auto& msg : this->local_grid_responses_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // .bosdyn.api.ResponseHeader header = 1;
  if (this->has_header()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *header_);
  }

  // int32 num_local_grid_errors = 3;
  if (this->num_local_grid_errors() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_num_local_grid_errors());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetLocalGridsResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bosdyn.api.GetLocalGridsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const GetLocalGridsResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetLocalGridsResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bosdyn.api.GetLocalGridsResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bosdyn.api.GetLocalGridsResponse)
    MergeFrom(*source);
  }
}

void GetLocalGridsResponse::MergeFrom(const GetLocalGridsResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bosdyn.api.GetLocalGridsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  local_grid_responses_.MergeFrom(from.local_grid_responses_);
  if (from.has_header()) {
    _internal_mutable_header()->::bosdyn::api::ResponseHeader::MergeFrom(from._internal_header());
  }
  if (from.num_local_grid_errors() != 0) {
    _internal_set_num_local_grid_errors(from._internal_num_local_grid_errors());
  }
}

void GetLocalGridsResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bosdyn.api.GetLocalGridsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetLocalGridsResponse::CopyFrom(const GetLocalGridsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bosdyn.api.GetLocalGridsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetLocalGridsResponse::IsInitialized() const {
  return true;
}

void GetLocalGridsResponse::InternalSwap(GetLocalGridsResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  local_grid_responses_.InternalSwap(&other->local_grid_responses_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GetLocalGridsResponse, num_local_grid_errors_)
      + sizeof(GetLocalGridsResponse::num_local_grid_errors_)
      - PROTOBUF_FIELD_OFFSET(GetLocalGridsResponse, header_)>(
          reinterpret_cast<char*>(&header_),
          reinterpret_cast<char*>(&other->header_));
}

::PROTOBUF_NAMESPACE_ID::Metadata GetLocalGridsResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace api
}  // namespace bosdyn
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::bosdyn::api::LocalGridType* Arena::CreateMaybeMessage< ::bosdyn::api::LocalGridType >(Arena* arena) {
  return Arena::CreateMessageInternal< ::bosdyn::api::LocalGridType >(arena);
}
template<> PROTOBUF_NOINLINE ::bosdyn::api::LocalGridRequest* Arena::CreateMaybeMessage< ::bosdyn::api::LocalGridRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::bosdyn::api::LocalGridRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::bosdyn::api::LocalGridExtent* Arena::CreateMaybeMessage< ::bosdyn::api::LocalGridExtent >(Arena* arena) {
  return Arena::CreateMessageInternal< ::bosdyn::api::LocalGridExtent >(arena);
}
template<> PROTOBUF_NOINLINE ::bosdyn::api::LocalGrid* Arena::CreateMaybeMessage< ::bosdyn::api::LocalGrid >(Arena* arena) {
  return Arena::CreateMessageInternal< ::bosdyn::api::LocalGrid >(arena);
}
template<> PROTOBUF_NOINLINE ::bosdyn::api::LocalGridResponse* Arena::CreateMaybeMessage< ::bosdyn::api::LocalGridResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::bosdyn::api::LocalGridResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::bosdyn::api::GetLocalGridTypesRequest* Arena::CreateMaybeMessage< ::bosdyn::api::GetLocalGridTypesRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::bosdyn::api::GetLocalGridTypesRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::bosdyn::api::GetLocalGridTypesResponse* Arena::CreateMaybeMessage< ::bosdyn::api::GetLocalGridTypesResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::bosdyn::api::GetLocalGridTypesResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::bosdyn::api::GetLocalGridsRequest* Arena::CreateMaybeMessage< ::bosdyn::api::GetLocalGridsRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::bosdyn::api::GetLocalGridsRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::bosdyn::api::GetLocalGridsResponse* Arena::CreateMaybeMessage< ::bosdyn::api::GetLocalGridsResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::bosdyn::api::GetLocalGridsResponse >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
