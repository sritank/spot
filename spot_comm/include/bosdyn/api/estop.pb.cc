// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: bosdyn/api/estop.proto

#include "bosdyn/api/estop.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_bosdyn_2fapi_2festop_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_DeregisterEstopEndpointRequest_bosdyn_2fapi_2festop_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_bosdyn_2fapi_2festop_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_EstopCheckInRequest_bosdyn_2fapi_2festop_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_bosdyn_2fapi_2festop_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_EstopConfig_bosdyn_2fapi_2festop_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_bosdyn_2fapi_2festop_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_EstopEndpoint_bosdyn_2fapi_2festop_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_bosdyn_2fapi_2festop_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_EstopEndpointWithStatus_bosdyn_2fapi_2festop_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_bosdyn_2fapi_2festop_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_EstopSystemStatus_bosdyn_2fapi_2festop_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_bosdyn_2fapi_2festop_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_GetEstopConfigRequest_bosdyn_2fapi_2festop_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_bosdyn_2fapi_2festop_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_RegisterEstopEndpointRequest_bosdyn_2fapi_2festop_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_bosdyn_2fapi_2fheader_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_RequestHeader_bosdyn_2fapi_2fheader_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_bosdyn_2fapi_2fheader_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<4> scc_info_ResponseHeader_bosdyn_2fapi_2fheader_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_bosdyn_2fapi_2festop_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_SetEstopConfigRequest_bosdyn_2fapi_2festop_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2fprotobuf_2fduration_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Duration_google_2fprotobuf_2fduration_2eproto;
namespace bosdyn {
namespace api {
class EstopEndpointDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<EstopEndpoint> _instance;
} _EstopEndpoint_default_instance_;
class EstopConfigDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<EstopConfig> _instance;
} _EstopConfig_default_instance_;
class EstopEndpointWithStatusDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<EstopEndpointWithStatus> _instance;
} _EstopEndpointWithStatus_default_instance_;
class EstopSystemStatusDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<EstopSystemStatus> _instance;
} _EstopSystemStatus_default_instance_;
class EstopCheckInRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<EstopCheckInRequest> _instance;
} _EstopCheckInRequest_default_instance_;
class EstopCheckInResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<EstopCheckInResponse> _instance;
} _EstopCheckInResponse_default_instance_;
class RegisterEstopEndpointRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<RegisterEstopEndpointRequest> _instance;
} _RegisterEstopEndpointRequest_default_instance_;
class RegisterEstopEndpointResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<RegisterEstopEndpointResponse> _instance;
} _RegisterEstopEndpointResponse_default_instance_;
class DeregisterEstopEndpointRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<DeregisterEstopEndpointRequest> _instance;
} _DeregisterEstopEndpointRequest_default_instance_;
class DeregisterEstopEndpointResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<DeregisterEstopEndpointResponse> _instance;
} _DeregisterEstopEndpointResponse_default_instance_;
class GetEstopConfigRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetEstopConfigRequest> _instance;
} _GetEstopConfigRequest_default_instance_;
class GetEstopConfigResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetEstopConfigResponse> _instance;
} _GetEstopConfigResponse_default_instance_;
class SetEstopConfigRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SetEstopConfigRequest> _instance;
} _SetEstopConfigRequest_default_instance_;
class SetEstopConfigResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SetEstopConfigResponse> _instance;
} _SetEstopConfigResponse_default_instance_;
class GetEstopSystemStatusRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetEstopSystemStatusRequest> _instance;
} _GetEstopSystemStatusRequest_default_instance_;
class GetEstopSystemStatusResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetEstopSystemStatusResponse> _instance;
} _GetEstopSystemStatusResponse_default_instance_;
}  // namespace api
}  // namespace bosdyn
static void InitDefaultsscc_info_DeregisterEstopEndpointRequest_bosdyn_2fapi_2festop_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::bosdyn::api::_DeregisterEstopEndpointRequest_default_instance_;
    new (ptr) ::bosdyn::api::DeregisterEstopEndpointRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::bosdyn::api::DeregisterEstopEndpointRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_DeregisterEstopEndpointRequest_bosdyn_2fapi_2festop_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, 0, InitDefaultsscc_info_DeregisterEstopEndpointRequest_bosdyn_2fapi_2festop_2eproto}, {
      &scc_info_RequestHeader_bosdyn_2fapi_2fheader_2eproto.base,
      &scc_info_EstopEndpoint_bosdyn_2fapi_2festop_2eproto.base,}};

static void InitDefaultsscc_info_DeregisterEstopEndpointResponse_bosdyn_2fapi_2festop_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::bosdyn::api::_DeregisterEstopEndpointResponse_default_instance_;
    new (ptr) ::bosdyn::api::DeregisterEstopEndpointResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::bosdyn::api::DeregisterEstopEndpointResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_DeregisterEstopEndpointResponse_bosdyn_2fapi_2festop_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, 0, InitDefaultsscc_info_DeregisterEstopEndpointResponse_bosdyn_2fapi_2festop_2eproto}, {
      &scc_info_ResponseHeader_bosdyn_2fapi_2fheader_2eproto.base,
      &scc_info_DeregisterEstopEndpointRequest_bosdyn_2fapi_2festop_2eproto.base,}};

static void InitDefaultsscc_info_EstopCheckInRequest_bosdyn_2fapi_2festop_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::bosdyn::api::_EstopCheckInRequest_default_instance_;
    new (ptr) ::bosdyn::api::EstopCheckInRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::bosdyn::api::EstopCheckInRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_EstopCheckInRequest_bosdyn_2fapi_2festop_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, 0, InitDefaultsscc_info_EstopCheckInRequest_bosdyn_2fapi_2festop_2eproto}, {
      &scc_info_RequestHeader_bosdyn_2fapi_2fheader_2eproto.base,
      &scc_info_EstopEndpoint_bosdyn_2fapi_2festop_2eproto.base,}};

static void InitDefaultsscc_info_EstopCheckInResponse_bosdyn_2fapi_2festop_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::bosdyn::api::_EstopCheckInResponse_default_instance_;
    new (ptr) ::bosdyn::api::EstopCheckInResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::bosdyn::api::EstopCheckInResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_EstopCheckInResponse_bosdyn_2fapi_2festop_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, 0, InitDefaultsscc_info_EstopCheckInResponse_bosdyn_2fapi_2festop_2eproto}, {
      &scc_info_ResponseHeader_bosdyn_2fapi_2fheader_2eproto.base,
      &scc_info_EstopCheckInRequest_bosdyn_2fapi_2festop_2eproto.base,}};

static void InitDefaultsscc_info_EstopConfig_bosdyn_2fapi_2festop_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::bosdyn::api::_EstopConfig_default_instance_;
    new (ptr) ::bosdyn::api::EstopConfig();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::bosdyn::api::EstopConfig::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_EstopConfig_bosdyn_2fapi_2festop_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_EstopConfig_bosdyn_2fapi_2festop_2eproto}, {
      &scc_info_EstopEndpoint_bosdyn_2fapi_2festop_2eproto.base,}};

static void InitDefaultsscc_info_EstopEndpoint_bosdyn_2fapi_2festop_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::bosdyn::api::_EstopEndpoint_default_instance_;
    new (ptr) ::bosdyn::api::EstopEndpoint();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::bosdyn::api::EstopEndpoint::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_EstopEndpoint_bosdyn_2fapi_2festop_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_EstopEndpoint_bosdyn_2fapi_2festop_2eproto}, {
      &scc_info_Duration_google_2fprotobuf_2fduration_2eproto.base,}};

static void InitDefaultsscc_info_EstopEndpointWithStatus_bosdyn_2fapi_2festop_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::bosdyn::api::_EstopEndpointWithStatus_default_instance_;
    new (ptr) ::bosdyn::api::EstopEndpointWithStatus();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::bosdyn::api::EstopEndpointWithStatus::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_EstopEndpointWithStatus_bosdyn_2fapi_2festop_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, 0, InitDefaultsscc_info_EstopEndpointWithStatus_bosdyn_2fapi_2festop_2eproto}, {
      &scc_info_EstopEndpoint_bosdyn_2fapi_2festop_2eproto.base,
      &scc_info_Duration_google_2fprotobuf_2fduration_2eproto.base,}};

static void InitDefaultsscc_info_EstopSystemStatus_bosdyn_2fapi_2festop_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::bosdyn::api::_EstopSystemStatus_default_instance_;
    new (ptr) ::bosdyn::api::EstopSystemStatus();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::bosdyn::api::EstopSystemStatus::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_EstopSystemStatus_bosdyn_2fapi_2festop_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_EstopSystemStatus_bosdyn_2fapi_2festop_2eproto}, {
      &scc_info_EstopEndpointWithStatus_bosdyn_2fapi_2festop_2eproto.base,}};

static void InitDefaultsscc_info_GetEstopConfigRequest_bosdyn_2fapi_2festop_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::bosdyn::api::_GetEstopConfigRequest_default_instance_;
    new (ptr) ::bosdyn::api::GetEstopConfigRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::bosdyn::api::GetEstopConfigRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_GetEstopConfigRequest_bosdyn_2fapi_2festop_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_GetEstopConfigRequest_bosdyn_2fapi_2festop_2eproto}, {
      &scc_info_RequestHeader_bosdyn_2fapi_2fheader_2eproto.base,}};

static void InitDefaultsscc_info_GetEstopConfigResponse_bosdyn_2fapi_2festop_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::bosdyn::api::_GetEstopConfigResponse_default_instance_;
    new (ptr) ::bosdyn::api::GetEstopConfigResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::bosdyn::api::GetEstopConfigResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<3> scc_info_GetEstopConfigResponse_bosdyn_2fapi_2festop_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 3, 0, InitDefaultsscc_info_GetEstopConfigResponse_bosdyn_2fapi_2festop_2eproto}, {
      &scc_info_ResponseHeader_bosdyn_2fapi_2fheader_2eproto.base,
      &scc_info_GetEstopConfigRequest_bosdyn_2fapi_2festop_2eproto.base,
      &scc_info_EstopConfig_bosdyn_2fapi_2festop_2eproto.base,}};

static void InitDefaultsscc_info_GetEstopSystemStatusRequest_bosdyn_2fapi_2festop_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::bosdyn::api::_GetEstopSystemStatusRequest_default_instance_;
    new (ptr) ::bosdyn::api::GetEstopSystemStatusRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::bosdyn::api::GetEstopSystemStatusRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_GetEstopSystemStatusRequest_bosdyn_2fapi_2festop_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_GetEstopSystemStatusRequest_bosdyn_2fapi_2festop_2eproto}, {
      &scc_info_RequestHeader_bosdyn_2fapi_2fheader_2eproto.base,}};

static void InitDefaultsscc_info_GetEstopSystemStatusResponse_bosdyn_2fapi_2festop_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::bosdyn::api::_GetEstopSystemStatusResponse_default_instance_;
    new (ptr) ::bosdyn::api::GetEstopSystemStatusResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::bosdyn::api::GetEstopSystemStatusResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_GetEstopSystemStatusResponse_bosdyn_2fapi_2festop_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, 0, InitDefaultsscc_info_GetEstopSystemStatusResponse_bosdyn_2fapi_2festop_2eproto}, {
      &scc_info_ResponseHeader_bosdyn_2fapi_2fheader_2eproto.base,
      &scc_info_EstopSystemStatus_bosdyn_2fapi_2festop_2eproto.base,}};

static void InitDefaultsscc_info_RegisterEstopEndpointRequest_bosdyn_2fapi_2festop_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::bosdyn::api::_RegisterEstopEndpointRequest_default_instance_;
    new (ptr) ::bosdyn::api::RegisterEstopEndpointRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::bosdyn::api::RegisterEstopEndpointRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_RegisterEstopEndpointRequest_bosdyn_2fapi_2festop_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, 0, InitDefaultsscc_info_RegisterEstopEndpointRequest_bosdyn_2fapi_2festop_2eproto}, {
      &scc_info_RequestHeader_bosdyn_2fapi_2fheader_2eproto.base,
      &scc_info_EstopEndpoint_bosdyn_2fapi_2festop_2eproto.base,}};

static void InitDefaultsscc_info_RegisterEstopEndpointResponse_bosdyn_2fapi_2festop_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::bosdyn::api::_RegisterEstopEndpointResponse_default_instance_;
    new (ptr) ::bosdyn::api::RegisterEstopEndpointResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::bosdyn::api::RegisterEstopEndpointResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<3> scc_info_RegisterEstopEndpointResponse_bosdyn_2fapi_2festop_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 3, 0, InitDefaultsscc_info_RegisterEstopEndpointResponse_bosdyn_2fapi_2festop_2eproto}, {
      &scc_info_ResponseHeader_bosdyn_2fapi_2fheader_2eproto.base,
      &scc_info_RegisterEstopEndpointRequest_bosdyn_2fapi_2festop_2eproto.base,
      &scc_info_EstopEndpoint_bosdyn_2fapi_2festop_2eproto.base,}};

static void InitDefaultsscc_info_SetEstopConfigRequest_bosdyn_2fapi_2festop_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::bosdyn::api::_SetEstopConfigRequest_default_instance_;
    new (ptr) ::bosdyn::api::SetEstopConfigRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::bosdyn::api::SetEstopConfigRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_SetEstopConfigRequest_bosdyn_2fapi_2festop_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, 0, InitDefaultsscc_info_SetEstopConfigRequest_bosdyn_2fapi_2festop_2eproto}, {
      &scc_info_RequestHeader_bosdyn_2fapi_2fheader_2eproto.base,
      &scc_info_EstopConfig_bosdyn_2fapi_2festop_2eproto.base,}};

static void InitDefaultsscc_info_SetEstopConfigResponse_bosdyn_2fapi_2festop_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::bosdyn::api::_SetEstopConfigResponse_default_instance_;
    new (ptr) ::bosdyn::api::SetEstopConfigResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::bosdyn::api::SetEstopConfigResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<3> scc_info_SetEstopConfigResponse_bosdyn_2fapi_2festop_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 3, 0, InitDefaultsscc_info_SetEstopConfigResponse_bosdyn_2fapi_2festop_2eproto}, {
      &scc_info_ResponseHeader_bosdyn_2fapi_2fheader_2eproto.base,
      &scc_info_SetEstopConfigRequest_bosdyn_2fapi_2festop_2eproto.base,
      &scc_info_EstopConfig_bosdyn_2fapi_2festop_2eproto.base,}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_bosdyn_2fapi_2festop_2eproto[16];
static const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* file_level_enum_descriptors_bosdyn_2fapi_2festop_2eproto[5];
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_bosdyn_2fapi_2festop_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_bosdyn_2fapi_2festop_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::bosdyn::api::EstopEndpoint, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::bosdyn::api::EstopEndpoint, role_),
  PROTOBUF_FIELD_OFFSET(::bosdyn::api::EstopEndpoint, name_),
  PROTOBUF_FIELD_OFFSET(::bosdyn::api::EstopEndpoint, unique_id_),
  PROTOBUF_FIELD_OFFSET(::bosdyn::api::EstopEndpoint, timeout_),
  PROTOBUF_FIELD_OFFSET(::bosdyn::api::EstopEndpoint, cut_power_timeout_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::bosdyn::api::EstopConfig, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::bosdyn::api::EstopConfig, endpoints_),
  PROTOBUF_FIELD_OFFSET(::bosdyn::api::EstopConfig, unique_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::bosdyn::api::EstopEndpointWithStatus, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::bosdyn::api::EstopEndpointWithStatus, endpoint_),
  PROTOBUF_FIELD_OFFSET(::bosdyn::api::EstopEndpointWithStatus, stop_level_),
  PROTOBUF_FIELD_OFFSET(::bosdyn::api::EstopEndpointWithStatus, time_since_valid_response_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::bosdyn::api::EstopSystemStatus, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::bosdyn::api::EstopSystemStatus, endpoints_),
  PROTOBUF_FIELD_OFFSET(::bosdyn::api::EstopSystemStatus, stop_level_),
  PROTOBUF_FIELD_OFFSET(::bosdyn::api::EstopSystemStatus, stop_level_details_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::bosdyn::api::EstopCheckInRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::bosdyn::api::EstopCheckInRequest, header_),
  PROTOBUF_FIELD_OFFSET(::bosdyn::api::EstopCheckInRequest, endpoint_),
  PROTOBUF_FIELD_OFFSET(::bosdyn::api::EstopCheckInRequest, challenge_),
  PROTOBUF_FIELD_OFFSET(::bosdyn::api::EstopCheckInRequest, response_),
  PROTOBUF_FIELD_OFFSET(::bosdyn::api::EstopCheckInRequest, stop_level_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::bosdyn::api::EstopCheckInResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::bosdyn::api::EstopCheckInResponse, header_),
  PROTOBUF_FIELD_OFFSET(::bosdyn::api::EstopCheckInResponse, request_),
  PROTOBUF_FIELD_OFFSET(::bosdyn::api::EstopCheckInResponse, challenge_),
  PROTOBUF_FIELD_OFFSET(::bosdyn::api::EstopCheckInResponse, status_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::bosdyn::api::RegisterEstopEndpointRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::bosdyn::api::RegisterEstopEndpointRequest, header_),
  PROTOBUF_FIELD_OFFSET(::bosdyn::api::RegisterEstopEndpointRequest, target_endpoint_),
  PROTOBUF_FIELD_OFFSET(::bosdyn::api::RegisterEstopEndpointRequest, target_config_id_),
  PROTOBUF_FIELD_OFFSET(::bosdyn::api::RegisterEstopEndpointRequest, new_endpoint_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::bosdyn::api::RegisterEstopEndpointResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::bosdyn::api::RegisterEstopEndpointResponse, header_),
  PROTOBUF_FIELD_OFFSET(::bosdyn::api::RegisterEstopEndpointResponse, request_),
  PROTOBUF_FIELD_OFFSET(::bosdyn::api::RegisterEstopEndpointResponse, new_endpoint_),
  PROTOBUF_FIELD_OFFSET(::bosdyn::api::RegisterEstopEndpointResponse, status_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::bosdyn::api::DeregisterEstopEndpointRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::bosdyn::api::DeregisterEstopEndpointRequest, header_),
  PROTOBUF_FIELD_OFFSET(::bosdyn::api::DeregisterEstopEndpointRequest, target_endpoint_),
  PROTOBUF_FIELD_OFFSET(::bosdyn::api::DeregisterEstopEndpointRequest, target_config_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::bosdyn::api::DeregisterEstopEndpointResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::bosdyn::api::DeregisterEstopEndpointResponse, header_),
  PROTOBUF_FIELD_OFFSET(::bosdyn::api::DeregisterEstopEndpointResponse, request_),
  PROTOBUF_FIELD_OFFSET(::bosdyn::api::DeregisterEstopEndpointResponse, status_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::bosdyn::api::GetEstopConfigRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::bosdyn::api::GetEstopConfigRequest, header_),
  PROTOBUF_FIELD_OFFSET(::bosdyn::api::GetEstopConfigRequest, target_config_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::bosdyn::api::GetEstopConfigResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::bosdyn::api::GetEstopConfigResponse, header_),
  PROTOBUF_FIELD_OFFSET(::bosdyn::api::GetEstopConfigResponse, request_),
  PROTOBUF_FIELD_OFFSET(::bosdyn::api::GetEstopConfigResponse, active_config_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::bosdyn::api::SetEstopConfigRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::bosdyn::api::SetEstopConfigRequest, header_),
  PROTOBUF_FIELD_OFFSET(::bosdyn::api::SetEstopConfigRequest, config_),
  PROTOBUF_FIELD_OFFSET(::bosdyn::api::SetEstopConfigRequest, target_config_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::bosdyn::api::SetEstopConfigResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::bosdyn::api::SetEstopConfigResponse, header_),
  PROTOBUF_FIELD_OFFSET(::bosdyn::api::SetEstopConfigResponse, request_),
  PROTOBUF_FIELD_OFFSET(::bosdyn::api::SetEstopConfigResponse, active_config_),
  PROTOBUF_FIELD_OFFSET(::bosdyn::api::SetEstopConfigResponse, status_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::bosdyn::api::GetEstopSystemStatusRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::bosdyn::api::GetEstopSystemStatusRequest, header_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::bosdyn::api::GetEstopSystemStatusResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::bosdyn::api::GetEstopSystemStatusResponse, header_),
  PROTOBUF_FIELD_OFFSET(::bosdyn::api::GetEstopSystemStatusResponse, status_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::bosdyn::api::EstopEndpoint)},
  { 10, -1, sizeof(::bosdyn::api::EstopConfig)},
  { 17, -1, sizeof(::bosdyn::api::EstopEndpointWithStatus)},
  { 25, -1, sizeof(::bosdyn::api::EstopSystemStatus)},
  { 33, -1, sizeof(::bosdyn::api::EstopCheckInRequest)},
  { 43, -1, sizeof(::bosdyn::api::EstopCheckInResponse)},
  { 52, -1, sizeof(::bosdyn::api::RegisterEstopEndpointRequest)},
  { 61, -1, sizeof(::bosdyn::api::RegisterEstopEndpointResponse)},
  { 70, -1, sizeof(::bosdyn::api::DeregisterEstopEndpointRequest)},
  { 78, -1, sizeof(::bosdyn::api::DeregisterEstopEndpointResponse)},
  { 86, -1, sizeof(::bosdyn::api::GetEstopConfigRequest)},
  { 93, -1, sizeof(::bosdyn::api::GetEstopConfigResponse)},
  { 101, -1, sizeof(::bosdyn::api::SetEstopConfigRequest)},
  { 109, -1, sizeof(::bosdyn::api::SetEstopConfigResponse)},
  { 118, -1, sizeof(::bosdyn::api::GetEstopSystemStatusRequest)},
  { 124, -1, sizeof(::bosdyn::api::GetEstopSystemStatusResponse)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::bosdyn::api::_EstopEndpoint_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::bosdyn::api::_EstopConfig_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::bosdyn::api::_EstopEndpointWithStatus_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::bosdyn::api::_EstopSystemStatus_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::bosdyn::api::_EstopCheckInRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::bosdyn::api::_EstopCheckInResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::bosdyn::api::_RegisterEstopEndpointRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::bosdyn::api::_RegisterEstopEndpointResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::bosdyn::api::_DeregisterEstopEndpointRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::bosdyn::api::_DeregisterEstopEndpointResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::bosdyn::api::_GetEstopConfigRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::bosdyn::api::_GetEstopConfigResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::bosdyn::api::_SetEstopConfigRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::bosdyn::api::_SetEstopConfigResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::bosdyn::api::_GetEstopSystemStatusRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::bosdyn::api::_GetEstopSystemStatusResponse_default_instance_),
};

const char descriptor_table_protodef_bosdyn_2fapi_2festop_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\026bosdyn/api/estop.proto\022\nbosdyn.api\032\027bo"
  "sdyn/api/header.proto\032\036google/protobuf/d"
  "uration.proto\"\240\001\n\rEstopEndpoint\022\014\n\004role\030"
  "\001 \001(\t\022\014\n\004name\030\002 \001(\t\022\021\n\tunique_id\030\003 \001(\t\022*"
  "\n\007timeout\030\004 \001(\0132\031.google.protobuf.Durati"
  "on\0224\n\021cut_power_timeout\030\005 \001(\0132\031.google.p"
  "rotobuf.Duration\"N\n\013EstopConfig\022,\n\tendpo"
  "ints\030\001 \003(\0132\031.bosdyn.api.EstopEndpoint\022\021\n"
  "\tunique_id\030\002 \001(\t\"\264\001\n\027EstopEndpointWithSt"
  "atus\022+\n\010endpoint\030\001 \001(\0132\031.bosdyn.api.Esto"
  "pEndpoint\022.\n\nstop_level\030\002 \001(\0162\032.bosdyn.a"
  "pi.EstopStopLevel\022<\n\031time_since_valid_re"
  "sponse\030\003 \001(\0132\031.google.protobuf.Duration\""
  "\227\001\n\021EstopSystemStatus\0226\n\tendpoints\030\003 \003(\013"
  "2#.bosdyn.api.EstopEndpointWithStatus\022.\n"
  "\nstop_level\030\004 \001(\0162\032.bosdyn.api.EstopStop"
  "Level\022\032\n\022stop_level_details\030\005 \001(\t\"\302\001\n\023Es"
  "topCheckInRequest\022)\n\006header\030\001 \001(\0132\031.bosd"
  "yn.api.RequestHeader\022+\n\010endpoint\030\002 \001(\0132\031"
  ".bosdyn.api.EstopEndpoint\022\021\n\tchallenge\030\003"
  " \001(\004\022\020\n\010response\030\004 \001(\004\022.\n\nstop_level\030\005 \001"
  "(\0162\032.bosdyn.api.EstopStopLevel\"\263\002\n\024Estop"
  "CheckInResponse\022*\n\006header\030\001 \001(\0132\032.bosdyn"
  ".api.ResponseHeader\0220\n\007request\030\002 \001(\0132\037.b"
  "osdyn.api.EstopCheckInRequest\022\021\n\tchallen"
  "ge\030\003 \001(\004\0227\n\006status\030\004 \001(\0162\'.bosdyn.api.Es"
  "topCheckInResponse.Status\"q\n\006Status\022\022\n\016S"
  "TATUS_UNKNOWN\020\000\022\r\n\tSTATUS_OK\020\001\022\033\n\027STATUS"
  "_ENDPOINT_UNKNOWN\020\002\022\'\n#STATUS_INCORRECT_"
  "CHALLENGE_RESPONSE\020\005\"\310\001\n\034RegisterEstopEn"
  "dpointRequest\022)\n\006header\030\001 \001(\0132\031.bosdyn.a"
  "pi.RequestHeader\0222\n\017target_endpoint\030\002 \001("
  "\0132\031.bosdyn.api.EstopEndpoint\022\030\n\020target_c"
  "onfig_id\030\003 \001(\t\022/\n\014new_endpoint\030\004 \001(\0132\031.b"
  "osdyn.api.EstopEndpoint\"\203\003\n\035RegisterEsto"
  "pEndpointResponse\022*\n\006header\030\001 \001(\0132\032.bosd"
  "yn.api.ResponseHeader\0229\n\007request\030\002 \001(\0132("
  ".bosdyn.api.RegisterEstopEndpointRequest"
  "\022/\n\014new_endpoint\030\003 \001(\0132\031.bosdyn.api.Esto"
  "pEndpoint\022@\n\006status\030\004 \001(\01620.bosdyn.api.R"
  "egisterEstopEndpointResponse.Status\"\207\001\n\006"
  "Status\022\022\n\016STATUS_UNKNOWN\020\000\022\022\n\016STATUS_SUC"
  "CESS\020\001\022\034\n\030STATUS_ENDPOINT_MISMATCH\020\002\022\032\n\026"
  "STATUS_CONFIG_MISMATCH\020\003\022\033\n\027STATUS_INVAL"
  "ID_ENDPOINT\020\004\"\231\001\n\036DeregisterEstopEndpoin"
  "tRequest\022)\n\006header\030\001 \001(\0132\031.bosdyn.api.Re"
  "questHeader\0222\n\017target_endpoint\030\002 \001(\0132\031.b"
  "osdyn.api.EstopEndpoint\022\030\n\020target_config"
  "_id\030\003 \001(\t\"\272\002\n\037DeregisterEstopEndpointRes"
  "ponse\022*\n\006header\030\001 \001(\0132\032.bosdyn.api.Respo"
  "nseHeader\022;\n\007request\030\002 \001(\0132*.bosdyn.api."
  "DeregisterEstopEndpointRequest\022B\n\006status"
  "\030\004 \001(\01622.bosdyn.api.DeregisterEstopEndpo"
  "intResponse.Status\"j\n\006Status\022\022\n\016STATUS_U"
  "NKNOWN\020\000\022\022\n\016STATUS_SUCCESS\020\001\022\034\n\030STATUS_E"
  "NDPOINT_MISMATCH\020\002\022\032\n\026STATUS_CONFIG_MISM"
  "ATCH\020\003\"\\\n\025GetEstopConfigRequest\022)\n\006heade"
  "r\030\001 \001(\0132\031.bosdyn.api.RequestHeader\022\030\n\020ta"
  "rget_config_id\030\004 \001(\t\"\250\001\n\026GetEstopConfigR"
  "esponse\022*\n\006header\030\001 \001(\0132\032.bosdyn.api.Res"
  "ponseHeader\0222\n\007request\030\002 \001(\0132!.bosdyn.ap"
  "i.GetEstopConfigRequest\022.\n\ractive_config"
  "\030\003 \001(\0132\027.bosdyn.api.EstopConfig\"\205\001\n\025SetE"
  "stopConfigRequest\022)\n\006header\030\001 \001(\0132\031.bosd"
  "yn.api.RequestHeader\022\'\n\006config\030\003 \001(\0132\027.b"
  "osdyn.api.EstopConfig\022\030\n\020target_config_i"
  "d\030\004 \001(\t\"\254\002\n\026SetEstopConfigResponse\022*\n\006he"
  "ader\030\001 \001(\0132\032.bosdyn.api.ResponseHeader\0222"
  "\n\007request\030\002 \001(\0132!.bosdyn.api.SetEstopCon"
  "figRequest\022.\n\ractive_config\030\003 \001(\0132\027.bosd"
  "yn.api.EstopConfig\0229\n\006status\030\004 \001(\0162).bos"
  "dyn.api.SetEstopConfigResponse.Status\"G\n"
  "\006Status\022\022\n\016STATUS_UNKNOWN\020\000\022\022\n\016STATUS_SU"
  "CCESS\020\001\022\025\n\021STATUS_INVALID_ID\020\002\"H\n\033GetEst"
  "opSystemStatusRequest\022)\n\006header\030\001 \001(\0132\031."
  "bosdyn.api.RequestHeader\"y\n\034GetEstopSyst"
  "emStatusResponse\022*\n\006header\030\001 \001(\0132\032.bosdy"
  "n.api.ResponseHeader\022-\n\006status\030\003 \001(\0132\035.b"
  "osdyn.api.EstopSystemStatus*u\n\016EstopStop"
  "Level\022\027\n\023ESTOP_LEVEL_UNKNOWN\020\000\022\023\n\017ESTOP_"
  "LEVEL_CUT\020\001\022\037\n\033ESTOP_LEVEL_SETTLE_THEN_C"
  "UT\020\002\022\024\n\020ESTOP_LEVEL_NONE\020\004B\014B\nEstopProto"
  "b\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_bosdyn_2fapi_2festop_2eproto_deps[2] = {
  &::descriptor_table_bosdyn_2fapi_2fheader_2eproto,
  &::descriptor_table_google_2fprotobuf_2fduration_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_bosdyn_2fapi_2festop_2eproto_sccs[16] = {
  &scc_info_DeregisterEstopEndpointRequest_bosdyn_2fapi_2festop_2eproto.base,
  &scc_info_DeregisterEstopEndpointResponse_bosdyn_2fapi_2festop_2eproto.base,
  &scc_info_EstopCheckInRequest_bosdyn_2fapi_2festop_2eproto.base,
  &scc_info_EstopCheckInResponse_bosdyn_2fapi_2festop_2eproto.base,
  &scc_info_EstopConfig_bosdyn_2fapi_2festop_2eproto.base,
  &scc_info_EstopEndpoint_bosdyn_2fapi_2festop_2eproto.base,
  &scc_info_EstopEndpointWithStatus_bosdyn_2fapi_2festop_2eproto.base,
  &scc_info_EstopSystemStatus_bosdyn_2fapi_2festop_2eproto.base,
  &scc_info_GetEstopConfigRequest_bosdyn_2fapi_2festop_2eproto.base,
  &scc_info_GetEstopConfigResponse_bosdyn_2fapi_2festop_2eproto.base,
  &scc_info_GetEstopSystemStatusRequest_bosdyn_2fapi_2festop_2eproto.base,
  &scc_info_GetEstopSystemStatusResponse_bosdyn_2fapi_2festop_2eproto.base,
  &scc_info_RegisterEstopEndpointRequest_bosdyn_2fapi_2festop_2eproto.base,
  &scc_info_RegisterEstopEndpointResponse_bosdyn_2fapi_2festop_2eproto.base,
  &scc_info_SetEstopConfigRequest_bosdyn_2fapi_2festop_2eproto.base,
  &scc_info_SetEstopConfigResponse_bosdyn_2fapi_2festop_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_bosdyn_2fapi_2festop_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_bosdyn_2fapi_2festop_2eproto = {
  false, false, descriptor_table_protodef_bosdyn_2fapi_2festop_2eproto, "bosdyn/api/estop.proto", 3288,
  &descriptor_table_bosdyn_2fapi_2festop_2eproto_once, descriptor_table_bosdyn_2fapi_2festop_2eproto_sccs, descriptor_table_bosdyn_2fapi_2festop_2eproto_deps, 16, 2,
  schemas, file_default_instances, TableStruct_bosdyn_2fapi_2festop_2eproto::offsets,
  file_level_metadata_bosdyn_2fapi_2festop_2eproto, 16, file_level_enum_descriptors_bosdyn_2fapi_2festop_2eproto, file_level_service_descriptors_bosdyn_2fapi_2festop_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_bosdyn_2fapi_2festop_2eproto = (static_cast<void>(::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_bosdyn_2fapi_2festop_2eproto)), true);
namespace bosdyn {
namespace api {
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* EstopCheckInResponse_Status_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_bosdyn_2fapi_2festop_2eproto);
  return file_level_enum_descriptors_bosdyn_2fapi_2festop_2eproto[0];
}
bool EstopCheckInResponse_Status_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 5:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr EstopCheckInResponse_Status EstopCheckInResponse::STATUS_UNKNOWN;
constexpr EstopCheckInResponse_Status EstopCheckInResponse::STATUS_OK;
constexpr EstopCheckInResponse_Status EstopCheckInResponse::STATUS_ENDPOINT_UNKNOWN;
constexpr EstopCheckInResponse_Status EstopCheckInResponse::STATUS_INCORRECT_CHALLENGE_RESPONSE;
constexpr EstopCheckInResponse_Status EstopCheckInResponse::Status_MIN;
constexpr EstopCheckInResponse_Status EstopCheckInResponse::Status_MAX;
constexpr int EstopCheckInResponse::Status_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* RegisterEstopEndpointResponse_Status_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_bosdyn_2fapi_2festop_2eproto);
  return file_level_enum_descriptors_bosdyn_2fapi_2festop_2eproto[1];
}
bool RegisterEstopEndpointResponse_Status_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr RegisterEstopEndpointResponse_Status RegisterEstopEndpointResponse::STATUS_UNKNOWN;
constexpr RegisterEstopEndpointResponse_Status RegisterEstopEndpointResponse::STATUS_SUCCESS;
constexpr RegisterEstopEndpointResponse_Status RegisterEstopEndpointResponse::STATUS_ENDPOINT_MISMATCH;
constexpr RegisterEstopEndpointResponse_Status RegisterEstopEndpointResponse::STATUS_CONFIG_MISMATCH;
constexpr RegisterEstopEndpointResponse_Status RegisterEstopEndpointResponse::STATUS_INVALID_ENDPOINT;
constexpr RegisterEstopEndpointResponse_Status RegisterEstopEndpointResponse::Status_MIN;
constexpr RegisterEstopEndpointResponse_Status RegisterEstopEndpointResponse::Status_MAX;
constexpr int RegisterEstopEndpointResponse::Status_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* DeregisterEstopEndpointResponse_Status_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_bosdyn_2fapi_2festop_2eproto);
  return file_level_enum_descriptors_bosdyn_2fapi_2festop_2eproto[2];
}
bool DeregisterEstopEndpointResponse_Status_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr DeregisterEstopEndpointResponse_Status DeregisterEstopEndpointResponse::STATUS_UNKNOWN;
constexpr DeregisterEstopEndpointResponse_Status DeregisterEstopEndpointResponse::STATUS_SUCCESS;
constexpr DeregisterEstopEndpointResponse_Status DeregisterEstopEndpointResponse::STATUS_ENDPOINT_MISMATCH;
constexpr DeregisterEstopEndpointResponse_Status DeregisterEstopEndpointResponse::STATUS_CONFIG_MISMATCH;
constexpr DeregisterEstopEndpointResponse_Status DeregisterEstopEndpointResponse::Status_MIN;
constexpr DeregisterEstopEndpointResponse_Status DeregisterEstopEndpointResponse::Status_MAX;
constexpr int DeregisterEstopEndpointResponse::Status_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* SetEstopConfigResponse_Status_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_bosdyn_2fapi_2festop_2eproto);
  return file_level_enum_descriptors_bosdyn_2fapi_2festop_2eproto[3];
}
bool SetEstopConfigResponse_Status_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr SetEstopConfigResponse_Status SetEstopConfigResponse::STATUS_UNKNOWN;
constexpr SetEstopConfigResponse_Status SetEstopConfigResponse::STATUS_SUCCESS;
constexpr SetEstopConfigResponse_Status SetEstopConfigResponse::STATUS_INVALID_ID;
constexpr SetEstopConfigResponse_Status SetEstopConfigResponse::Status_MIN;
constexpr SetEstopConfigResponse_Status SetEstopConfigResponse::Status_MAX;
constexpr int SetEstopConfigResponse::Status_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* EstopStopLevel_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_bosdyn_2fapi_2festop_2eproto);
  return file_level_enum_descriptors_bosdyn_2fapi_2festop_2eproto[4];
}
bool EstopStopLevel_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 4:
      return true;
    default:
      return false;
  }
}


// ===================================================================

void EstopEndpoint::InitAsDefaultInstance() {
  ::bosdyn::api::_EstopEndpoint_default_instance_._instance.get_mutable()->timeout_ = const_cast< PROTOBUF_NAMESPACE_ID::Duration*>(
      PROTOBUF_NAMESPACE_ID::Duration::internal_default_instance());
  ::bosdyn::api::_EstopEndpoint_default_instance_._instance.get_mutable()->cut_power_timeout_ = const_cast< PROTOBUF_NAMESPACE_ID::Duration*>(
      PROTOBUF_NAMESPACE_ID::Duration::internal_default_instance());
}
class EstopEndpoint::_Internal {
 public:
  static const PROTOBUF_NAMESPACE_ID::Duration& timeout(const EstopEndpoint* msg);
  static const PROTOBUF_NAMESPACE_ID::Duration& cut_power_timeout(const EstopEndpoint* msg);
};

const PROTOBUF_NAMESPACE_ID::Duration&
EstopEndpoint::_Internal::timeout(const EstopEndpoint* msg) {
  return *msg->timeout_;
}
const PROTOBUF_NAMESPACE_ID::Duration&
EstopEndpoint::_Internal::cut_power_timeout(const EstopEndpoint* msg) {
  return *msg->cut_power_timeout_;
}
void EstopEndpoint::clear_timeout() {
  if (GetArena() == nullptr && timeout_ != nullptr) {
    delete timeout_;
  }
  timeout_ = nullptr;
}
void EstopEndpoint::clear_cut_power_timeout() {
  if (GetArena() == nullptr && cut_power_timeout_ != nullptr) {
    delete cut_power_timeout_;
  }
  cut_power_timeout_ = nullptr;
}
EstopEndpoint::EstopEndpoint(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:bosdyn.api.EstopEndpoint)
}
EstopEndpoint::EstopEndpoint(const EstopEndpoint& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  role_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_role().empty()) {
    role_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_role(),
      GetArena());
  }
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_name().empty()) {
    name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_name(),
      GetArena());
  }
  unique_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_unique_id().empty()) {
    unique_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_unique_id(),
      GetArena());
  }
  if (from._internal_has_timeout()) {
    timeout_ = new PROTOBUF_NAMESPACE_ID::Duration(*from.timeout_);
  } else {
    timeout_ = nullptr;
  }
  if (from._internal_has_cut_power_timeout()) {
    cut_power_timeout_ = new PROTOBUF_NAMESPACE_ID::Duration(*from.cut_power_timeout_);
  } else {
    cut_power_timeout_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:bosdyn.api.EstopEndpoint)
}

void EstopEndpoint::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_EstopEndpoint_bosdyn_2fapi_2festop_2eproto.base);
  role_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  unique_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&timeout_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&cut_power_timeout_) -
      reinterpret_cast<char*>(&timeout_)) + sizeof(cut_power_timeout_));
}

EstopEndpoint::~EstopEndpoint() {
  // @@protoc_insertion_point(destructor:bosdyn.api.EstopEndpoint)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void EstopEndpoint::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  role_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  unique_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete timeout_;
  if (this != internal_default_instance()) delete cut_power_timeout_;
}

void EstopEndpoint::ArenaDtor(void* object) {
  EstopEndpoint* _this = reinterpret_cast< EstopEndpoint* >(object);
  (void)_this;
}
void EstopEndpoint::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void EstopEndpoint::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const EstopEndpoint& EstopEndpoint::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_EstopEndpoint_bosdyn_2fapi_2festop_2eproto.base);
  return *internal_default_instance();
}


void EstopEndpoint::Clear() {
// @@protoc_insertion_point(message_clear_start:bosdyn.api.EstopEndpoint)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  role_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  name_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  unique_id_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  if (GetArena() == nullptr && timeout_ != nullptr) {
    delete timeout_;
  }
  timeout_ = nullptr;
  if (GetArena() == nullptr && cut_power_timeout_ != nullptr) {
    delete cut_power_timeout_;
  }
  cut_power_timeout_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* EstopEndpoint::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string role = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_role();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "bosdyn.api.EstopEndpoint.role"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string name = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "bosdyn.api.EstopEndpoint.name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string unique_id = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_unique_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "bosdyn.api.EstopEndpoint.unique_id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .google.protobuf.Duration timeout = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_timeout(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .google.protobuf.Duration cut_power_timeout = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          ptr = ctx->ParseMessage(_internal_mutable_cut_power_timeout(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* EstopEndpoint::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:bosdyn.api.EstopEndpoint)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string role = 1;
  if (this->role().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_role().data(), static_cast<int>(this->_internal_role().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "bosdyn.api.EstopEndpoint.role");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_role(), target);
  }

  // string name = 2;
  if (this->name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "bosdyn.api.EstopEndpoint.name");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_name(), target);
  }

  // string unique_id = 3;
  if (this->unique_id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_unique_id().data(), static_cast<int>(this->_internal_unique_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "bosdyn.api.EstopEndpoint.unique_id");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_unique_id(), target);
  }

  // .google.protobuf.Duration timeout = 4;
  if (this->has_timeout()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        4, _Internal::timeout(this), target, stream);
  }

  // .google.protobuf.Duration cut_power_timeout = 5;
  if (this->has_cut_power_timeout()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        5, _Internal::cut_power_timeout(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:bosdyn.api.EstopEndpoint)
  return target;
}

size_t EstopEndpoint::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bosdyn.api.EstopEndpoint)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string role = 1;
  if (this->role().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_role());
  }

  // string name = 2;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // string unique_id = 3;
  if (this->unique_id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_unique_id());
  }

  // .google.protobuf.Duration timeout = 4;
  if (this->has_timeout()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *timeout_);
  }

  // .google.protobuf.Duration cut_power_timeout = 5;
  if (this->has_cut_power_timeout()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *cut_power_timeout_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void EstopEndpoint::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bosdyn.api.EstopEndpoint)
  GOOGLE_DCHECK_NE(&from, this);
  const EstopEndpoint* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<EstopEndpoint>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bosdyn.api.EstopEndpoint)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bosdyn.api.EstopEndpoint)
    MergeFrom(*source);
  }
}

void EstopEndpoint::MergeFrom(const EstopEndpoint& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bosdyn.api.EstopEndpoint)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.role().size() > 0) {
    _internal_set_role(from._internal_role());
  }
  if (from.name().size() > 0) {
    _internal_set_name(from._internal_name());
  }
  if (from.unique_id().size() > 0) {
    _internal_set_unique_id(from._internal_unique_id());
  }
  if (from.has_timeout()) {
    _internal_mutable_timeout()->PROTOBUF_NAMESPACE_ID::Duration::MergeFrom(from._internal_timeout());
  }
  if (from.has_cut_power_timeout()) {
    _internal_mutable_cut_power_timeout()->PROTOBUF_NAMESPACE_ID::Duration::MergeFrom(from._internal_cut_power_timeout());
  }
}

void EstopEndpoint::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bosdyn.api.EstopEndpoint)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EstopEndpoint::CopyFrom(const EstopEndpoint& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bosdyn.api.EstopEndpoint)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EstopEndpoint::IsInitialized() const {
  return true;
}

void EstopEndpoint::InternalSwap(EstopEndpoint* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  role_.Swap(&other->role_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  name_.Swap(&other->name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  unique_id_.Swap(&other->unique_id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(EstopEndpoint, cut_power_timeout_)
      + sizeof(EstopEndpoint::cut_power_timeout_)
      - PROTOBUF_FIELD_OFFSET(EstopEndpoint, timeout_)>(
          reinterpret_cast<char*>(&timeout_),
          reinterpret_cast<char*>(&other->timeout_));
}

::PROTOBUF_NAMESPACE_ID::Metadata EstopEndpoint::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void EstopConfig::InitAsDefaultInstance() {
}
class EstopConfig::_Internal {
 public:
};

EstopConfig::EstopConfig(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  endpoints_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:bosdyn.api.EstopConfig)
}
EstopConfig::EstopConfig(const EstopConfig& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      endpoints_(from.endpoints_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  unique_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_unique_id().empty()) {
    unique_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_unique_id(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:bosdyn.api.EstopConfig)
}

void EstopConfig::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_EstopConfig_bosdyn_2fapi_2festop_2eproto.base);
  unique_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

EstopConfig::~EstopConfig() {
  // @@protoc_insertion_point(destructor:bosdyn.api.EstopConfig)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void EstopConfig::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  unique_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void EstopConfig::ArenaDtor(void* object) {
  EstopConfig* _this = reinterpret_cast< EstopConfig* >(object);
  (void)_this;
}
void EstopConfig::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void EstopConfig::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const EstopConfig& EstopConfig::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_EstopConfig_bosdyn_2fapi_2festop_2eproto.base);
  return *internal_default_instance();
}


void EstopConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:bosdyn.api.EstopConfig)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  endpoints_.Clear();
  unique_id_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* EstopConfig::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .bosdyn.api.EstopEndpoint endpoints = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_endpoints(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      // string unique_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_unique_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "bosdyn.api.EstopConfig.unique_id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* EstopConfig::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:bosdyn.api.EstopConfig)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .bosdyn.api.EstopEndpoint endpoints = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_endpoints_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_endpoints(i), target, stream);
  }

  // string unique_id = 2;
  if (this->unique_id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_unique_id().data(), static_cast<int>(this->_internal_unique_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "bosdyn.api.EstopConfig.unique_id");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_unique_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:bosdyn.api.EstopConfig)
  return target;
}

size_t EstopConfig::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bosdyn.api.EstopConfig)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .bosdyn.api.EstopEndpoint endpoints = 1;
  total_size += 1UL * this->_internal_endpoints_size();
  for (const auto& msg : this->endpoints_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string unique_id = 2;
  if (this->unique_id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_unique_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void EstopConfig::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bosdyn.api.EstopConfig)
  GOOGLE_DCHECK_NE(&from, this);
  const EstopConfig* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<EstopConfig>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bosdyn.api.EstopConfig)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bosdyn.api.EstopConfig)
    MergeFrom(*source);
  }
}

void EstopConfig::MergeFrom(const EstopConfig& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bosdyn.api.EstopConfig)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  endpoints_.MergeFrom(from.endpoints_);
  if (from.unique_id().size() > 0) {
    _internal_set_unique_id(from._internal_unique_id());
  }
}

void EstopConfig::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bosdyn.api.EstopConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EstopConfig::CopyFrom(const EstopConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bosdyn.api.EstopConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EstopConfig::IsInitialized() const {
  return true;
}

void EstopConfig::InternalSwap(EstopConfig* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  endpoints_.InternalSwap(&other->endpoints_);
  unique_id_.Swap(&other->unique_id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata EstopConfig::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void EstopEndpointWithStatus::InitAsDefaultInstance() {
  ::bosdyn::api::_EstopEndpointWithStatus_default_instance_._instance.get_mutable()->endpoint_ = const_cast< ::bosdyn::api::EstopEndpoint*>(
      ::bosdyn::api::EstopEndpoint::internal_default_instance());
  ::bosdyn::api::_EstopEndpointWithStatus_default_instance_._instance.get_mutable()->time_since_valid_response_ = const_cast< PROTOBUF_NAMESPACE_ID::Duration*>(
      PROTOBUF_NAMESPACE_ID::Duration::internal_default_instance());
}
class EstopEndpointWithStatus::_Internal {
 public:
  static const ::bosdyn::api::EstopEndpoint& endpoint(const EstopEndpointWithStatus* msg);
  static const PROTOBUF_NAMESPACE_ID::Duration& time_since_valid_response(const EstopEndpointWithStatus* msg);
};

const ::bosdyn::api::EstopEndpoint&
EstopEndpointWithStatus::_Internal::endpoint(const EstopEndpointWithStatus* msg) {
  return *msg->endpoint_;
}
const PROTOBUF_NAMESPACE_ID::Duration&
EstopEndpointWithStatus::_Internal::time_since_valid_response(const EstopEndpointWithStatus* msg) {
  return *msg->time_since_valid_response_;
}
void EstopEndpointWithStatus::clear_time_since_valid_response() {
  if (GetArena() == nullptr && time_since_valid_response_ != nullptr) {
    delete time_since_valid_response_;
  }
  time_since_valid_response_ = nullptr;
}
EstopEndpointWithStatus::EstopEndpointWithStatus(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:bosdyn.api.EstopEndpointWithStatus)
}
EstopEndpointWithStatus::EstopEndpointWithStatus(const EstopEndpointWithStatus& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_endpoint()) {
    endpoint_ = new ::bosdyn::api::EstopEndpoint(*from.endpoint_);
  } else {
    endpoint_ = nullptr;
  }
  if (from._internal_has_time_since_valid_response()) {
    time_since_valid_response_ = new PROTOBUF_NAMESPACE_ID::Duration(*from.time_since_valid_response_);
  } else {
    time_since_valid_response_ = nullptr;
  }
  stop_level_ = from.stop_level_;
  // @@protoc_insertion_point(copy_constructor:bosdyn.api.EstopEndpointWithStatus)
}

void EstopEndpointWithStatus::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_EstopEndpointWithStatus_bosdyn_2fapi_2festop_2eproto.base);
  ::memset(&endpoint_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&stop_level_) -
      reinterpret_cast<char*>(&endpoint_)) + sizeof(stop_level_));
}

EstopEndpointWithStatus::~EstopEndpointWithStatus() {
  // @@protoc_insertion_point(destructor:bosdyn.api.EstopEndpointWithStatus)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void EstopEndpointWithStatus::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete endpoint_;
  if (this != internal_default_instance()) delete time_since_valid_response_;
}

void EstopEndpointWithStatus::ArenaDtor(void* object) {
  EstopEndpointWithStatus* _this = reinterpret_cast< EstopEndpointWithStatus* >(object);
  (void)_this;
}
void EstopEndpointWithStatus::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void EstopEndpointWithStatus::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const EstopEndpointWithStatus& EstopEndpointWithStatus::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_EstopEndpointWithStatus_bosdyn_2fapi_2festop_2eproto.base);
  return *internal_default_instance();
}


void EstopEndpointWithStatus::Clear() {
// @@protoc_insertion_point(message_clear_start:bosdyn.api.EstopEndpointWithStatus)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && endpoint_ != nullptr) {
    delete endpoint_;
  }
  endpoint_ = nullptr;
  if (GetArena() == nullptr && time_since_valid_response_ != nullptr) {
    delete time_since_valid_response_;
  }
  time_since_valid_response_ = nullptr;
  stop_level_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* EstopEndpointWithStatus::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .bosdyn.api.EstopEndpoint endpoint = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_endpoint(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .bosdyn.api.EstopStopLevel stop_level = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_stop_level(static_cast<::bosdyn::api::EstopStopLevel>(val));
        } else goto handle_unusual;
        continue;
      // .google.protobuf.Duration time_since_valid_response = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_time_since_valid_response(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* EstopEndpointWithStatus::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:bosdyn.api.EstopEndpointWithStatus)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .bosdyn.api.EstopEndpoint endpoint = 1;
  if (this->has_endpoint()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::endpoint(this), target, stream);
  }

  // .bosdyn.api.EstopStopLevel stop_level = 2;
  if (this->stop_level() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      2, this->_internal_stop_level(), target);
  }

  // .google.protobuf.Duration time_since_valid_response = 3;
  if (this->has_time_since_valid_response()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::time_since_valid_response(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:bosdyn.api.EstopEndpointWithStatus)
  return target;
}

size_t EstopEndpointWithStatus::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bosdyn.api.EstopEndpointWithStatus)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .bosdyn.api.EstopEndpoint endpoint = 1;
  if (this->has_endpoint()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *endpoint_);
  }

  // .google.protobuf.Duration time_since_valid_response = 3;
  if (this->has_time_since_valid_response()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *time_since_valid_response_);
  }

  // .bosdyn.api.EstopStopLevel stop_level = 2;
  if (this->stop_level() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_stop_level());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void EstopEndpointWithStatus::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bosdyn.api.EstopEndpointWithStatus)
  GOOGLE_DCHECK_NE(&from, this);
  const EstopEndpointWithStatus* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<EstopEndpointWithStatus>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bosdyn.api.EstopEndpointWithStatus)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bosdyn.api.EstopEndpointWithStatus)
    MergeFrom(*source);
  }
}

void EstopEndpointWithStatus::MergeFrom(const EstopEndpointWithStatus& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bosdyn.api.EstopEndpointWithStatus)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_endpoint()) {
    _internal_mutable_endpoint()->::bosdyn::api::EstopEndpoint::MergeFrom(from._internal_endpoint());
  }
  if (from.has_time_since_valid_response()) {
    _internal_mutable_time_since_valid_response()->PROTOBUF_NAMESPACE_ID::Duration::MergeFrom(from._internal_time_since_valid_response());
  }
  if (from.stop_level() != 0) {
    _internal_set_stop_level(from._internal_stop_level());
  }
}

void EstopEndpointWithStatus::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bosdyn.api.EstopEndpointWithStatus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EstopEndpointWithStatus::CopyFrom(const EstopEndpointWithStatus& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bosdyn.api.EstopEndpointWithStatus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EstopEndpointWithStatus::IsInitialized() const {
  return true;
}

void EstopEndpointWithStatus::InternalSwap(EstopEndpointWithStatus* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(EstopEndpointWithStatus, stop_level_)
      + sizeof(EstopEndpointWithStatus::stop_level_)
      - PROTOBUF_FIELD_OFFSET(EstopEndpointWithStatus, endpoint_)>(
          reinterpret_cast<char*>(&endpoint_),
          reinterpret_cast<char*>(&other->endpoint_));
}

::PROTOBUF_NAMESPACE_ID::Metadata EstopEndpointWithStatus::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void EstopSystemStatus::InitAsDefaultInstance() {
}
class EstopSystemStatus::_Internal {
 public:
};

EstopSystemStatus::EstopSystemStatus(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  endpoints_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:bosdyn.api.EstopSystemStatus)
}
EstopSystemStatus::EstopSystemStatus(const EstopSystemStatus& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      endpoints_(from.endpoints_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  stop_level_details_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_stop_level_details().empty()) {
    stop_level_details_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_stop_level_details(),
      GetArena());
  }
  stop_level_ = from.stop_level_;
  // @@protoc_insertion_point(copy_constructor:bosdyn.api.EstopSystemStatus)
}

void EstopSystemStatus::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_EstopSystemStatus_bosdyn_2fapi_2festop_2eproto.base);
  stop_level_details_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  stop_level_ = 0;
}

EstopSystemStatus::~EstopSystemStatus() {
  // @@protoc_insertion_point(destructor:bosdyn.api.EstopSystemStatus)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void EstopSystemStatus::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  stop_level_details_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void EstopSystemStatus::ArenaDtor(void* object) {
  EstopSystemStatus* _this = reinterpret_cast< EstopSystemStatus* >(object);
  (void)_this;
}
void EstopSystemStatus::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void EstopSystemStatus::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const EstopSystemStatus& EstopSystemStatus::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_EstopSystemStatus_bosdyn_2fapi_2festop_2eproto.base);
  return *internal_default_instance();
}


void EstopSystemStatus::Clear() {
// @@protoc_insertion_point(message_clear_start:bosdyn.api.EstopSystemStatus)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  endpoints_.Clear();
  stop_level_details_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  stop_level_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* EstopSystemStatus::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .bosdyn.api.EstopEndpointWithStatus endpoints = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_endpoints(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<26>(ptr));
        } else goto handle_unusual;
        continue;
      // .bosdyn.api.EstopStopLevel stop_level = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_stop_level(static_cast<::bosdyn::api::EstopStopLevel>(val));
        } else goto handle_unusual;
        continue;
      // string stop_level_details = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          auto str = _internal_mutable_stop_level_details();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "bosdyn.api.EstopSystemStatus.stop_level_details"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* EstopSystemStatus::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:bosdyn.api.EstopSystemStatus)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .bosdyn.api.EstopEndpointWithStatus endpoints = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_endpoints_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, this->_internal_endpoints(i), target, stream);
  }

  // .bosdyn.api.EstopStopLevel stop_level = 4;
  if (this->stop_level() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      4, this->_internal_stop_level(), target);
  }

  // string stop_level_details = 5;
  if (this->stop_level_details().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_stop_level_details().data(), static_cast<int>(this->_internal_stop_level_details().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "bosdyn.api.EstopSystemStatus.stop_level_details");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_stop_level_details(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:bosdyn.api.EstopSystemStatus)
  return target;
}

size_t EstopSystemStatus::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bosdyn.api.EstopSystemStatus)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .bosdyn.api.EstopEndpointWithStatus endpoints = 3;
  total_size += 1UL * this->_internal_endpoints_size();
  for (const auto& msg : this->endpoints_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string stop_level_details = 5;
  if (this->stop_level_details().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_stop_level_details());
  }

  // .bosdyn.api.EstopStopLevel stop_level = 4;
  if (this->stop_level() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_stop_level());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void EstopSystemStatus::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bosdyn.api.EstopSystemStatus)
  GOOGLE_DCHECK_NE(&from, this);
  const EstopSystemStatus* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<EstopSystemStatus>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bosdyn.api.EstopSystemStatus)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bosdyn.api.EstopSystemStatus)
    MergeFrom(*source);
  }
}

void EstopSystemStatus::MergeFrom(const EstopSystemStatus& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bosdyn.api.EstopSystemStatus)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  endpoints_.MergeFrom(from.endpoints_);
  if (from.stop_level_details().size() > 0) {
    _internal_set_stop_level_details(from._internal_stop_level_details());
  }
  if (from.stop_level() != 0) {
    _internal_set_stop_level(from._internal_stop_level());
  }
}

void EstopSystemStatus::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bosdyn.api.EstopSystemStatus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EstopSystemStatus::CopyFrom(const EstopSystemStatus& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bosdyn.api.EstopSystemStatus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EstopSystemStatus::IsInitialized() const {
  return true;
}

void EstopSystemStatus::InternalSwap(EstopSystemStatus* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  endpoints_.InternalSwap(&other->endpoints_);
  stop_level_details_.Swap(&other->stop_level_details_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(stop_level_, other->stop_level_);
}

::PROTOBUF_NAMESPACE_ID::Metadata EstopSystemStatus::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void EstopCheckInRequest::InitAsDefaultInstance() {
  ::bosdyn::api::_EstopCheckInRequest_default_instance_._instance.get_mutable()->header_ = const_cast< ::bosdyn::api::RequestHeader*>(
      ::bosdyn::api::RequestHeader::internal_default_instance());
  ::bosdyn::api::_EstopCheckInRequest_default_instance_._instance.get_mutable()->endpoint_ = const_cast< ::bosdyn::api::EstopEndpoint*>(
      ::bosdyn::api::EstopEndpoint::internal_default_instance());
}
class EstopCheckInRequest::_Internal {
 public:
  static const ::bosdyn::api::RequestHeader& header(const EstopCheckInRequest* msg);
  static const ::bosdyn::api::EstopEndpoint& endpoint(const EstopCheckInRequest* msg);
};

const ::bosdyn::api::RequestHeader&
EstopCheckInRequest::_Internal::header(const EstopCheckInRequest* msg) {
  return *msg->header_;
}
const ::bosdyn::api::EstopEndpoint&
EstopCheckInRequest::_Internal::endpoint(const EstopCheckInRequest* msg) {
  return *msg->endpoint_;
}
void EstopCheckInRequest::clear_header() {
  if (GetArena() == nullptr && header_ != nullptr) {
    delete header_;
  }
  header_ = nullptr;
}
EstopCheckInRequest::EstopCheckInRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:bosdyn.api.EstopCheckInRequest)
}
EstopCheckInRequest::EstopCheckInRequest(const EstopCheckInRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_header()) {
    header_ = new ::bosdyn::api::RequestHeader(*from.header_);
  } else {
    header_ = nullptr;
  }
  if (from._internal_has_endpoint()) {
    endpoint_ = new ::bosdyn::api::EstopEndpoint(*from.endpoint_);
  } else {
    endpoint_ = nullptr;
  }
  ::memcpy(&challenge_, &from.challenge_,
    static_cast<size_t>(reinterpret_cast<char*>(&stop_level_) -
    reinterpret_cast<char*>(&challenge_)) + sizeof(stop_level_));
  // @@protoc_insertion_point(copy_constructor:bosdyn.api.EstopCheckInRequest)
}

void EstopCheckInRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_EstopCheckInRequest_bosdyn_2fapi_2festop_2eproto.base);
  ::memset(&header_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&stop_level_) -
      reinterpret_cast<char*>(&header_)) + sizeof(stop_level_));
}

EstopCheckInRequest::~EstopCheckInRequest() {
  // @@protoc_insertion_point(destructor:bosdyn.api.EstopCheckInRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void EstopCheckInRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete header_;
  if (this != internal_default_instance()) delete endpoint_;
}

void EstopCheckInRequest::ArenaDtor(void* object) {
  EstopCheckInRequest* _this = reinterpret_cast< EstopCheckInRequest* >(object);
  (void)_this;
}
void EstopCheckInRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void EstopCheckInRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const EstopCheckInRequest& EstopCheckInRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_EstopCheckInRequest_bosdyn_2fapi_2festop_2eproto.base);
  return *internal_default_instance();
}


void EstopCheckInRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:bosdyn.api.EstopCheckInRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && header_ != nullptr) {
    delete header_;
  }
  header_ = nullptr;
  if (GetArena() == nullptr && endpoint_ != nullptr) {
    delete endpoint_;
  }
  endpoint_ = nullptr;
  ::memset(&challenge_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&stop_level_) -
      reinterpret_cast<char*>(&challenge_)) + sizeof(stop_level_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* EstopCheckInRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .bosdyn.api.RequestHeader header = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_header(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .bosdyn.api.EstopEndpoint endpoint = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_endpoint(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint64 challenge = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          challenge_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint64 response = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          response_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .bosdyn.api.EstopStopLevel stop_level = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_stop_level(static_cast<::bosdyn::api::EstopStopLevel>(val));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* EstopCheckInRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:bosdyn.api.EstopCheckInRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .bosdyn.api.RequestHeader header = 1;
  if (this->has_header()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::header(this), target, stream);
  }

  // .bosdyn.api.EstopEndpoint endpoint = 2;
  if (this->has_endpoint()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::endpoint(this), target, stream);
  }

  // uint64 challenge = 3;
  if (this->challenge() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(3, this->_internal_challenge(), target);
  }

  // uint64 response = 4;
  if (this->response() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(4, this->_internal_response(), target);
  }

  // .bosdyn.api.EstopStopLevel stop_level = 5;
  if (this->stop_level() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      5, this->_internal_stop_level(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:bosdyn.api.EstopCheckInRequest)
  return target;
}

size_t EstopCheckInRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bosdyn.api.EstopCheckInRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .bosdyn.api.RequestHeader header = 1;
  if (this->has_header()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *header_);
  }

  // .bosdyn.api.EstopEndpoint endpoint = 2;
  if (this->has_endpoint()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *endpoint_);
  }

  // uint64 challenge = 3;
  if (this->challenge() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_challenge());
  }

  // uint64 response = 4;
  if (this->response() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_response());
  }

  // .bosdyn.api.EstopStopLevel stop_level = 5;
  if (this->stop_level() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_stop_level());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void EstopCheckInRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bosdyn.api.EstopCheckInRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const EstopCheckInRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<EstopCheckInRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bosdyn.api.EstopCheckInRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bosdyn.api.EstopCheckInRequest)
    MergeFrom(*source);
  }
}

void EstopCheckInRequest::MergeFrom(const EstopCheckInRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bosdyn.api.EstopCheckInRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_header()) {
    _internal_mutable_header()->::bosdyn::api::RequestHeader::MergeFrom(from._internal_header());
  }
  if (from.has_endpoint()) {
    _internal_mutable_endpoint()->::bosdyn::api::EstopEndpoint::MergeFrom(from._internal_endpoint());
  }
  if (from.challenge() != 0) {
    _internal_set_challenge(from._internal_challenge());
  }
  if (from.response() != 0) {
    _internal_set_response(from._internal_response());
  }
  if (from.stop_level() != 0) {
    _internal_set_stop_level(from._internal_stop_level());
  }
}

void EstopCheckInRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bosdyn.api.EstopCheckInRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EstopCheckInRequest::CopyFrom(const EstopCheckInRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bosdyn.api.EstopCheckInRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EstopCheckInRequest::IsInitialized() const {
  return true;
}

void EstopCheckInRequest::InternalSwap(EstopCheckInRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(EstopCheckInRequest, stop_level_)
      + sizeof(EstopCheckInRequest::stop_level_)
      - PROTOBUF_FIELD_OFFSET(EstopCheckInRequest, header_)>(
          reinterpret_cast<char*>(&header_),
          reinterpret_cast<char*>(&other->header_));
}

::PROTOBUF_NAMESPACE_ID::Metadata EstopCheckInRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void EstopCheckInResponse::InitAsDefaultInstance() {
  ::bosdyn::api::_EstopCheckInResponse_default_instance_._instance.get_mutable()->header_ = const_cast< ::bosdyn::api::ResponseHeader*>(
      ::bosdyn::api::ResponseHeader::internal_default_instance());
  ::bosdyn::api::_EstopCheckInResponse_default_instance_._instance.get_mutable()->request_ = const_cast< ::bosdyn::api::EstopCheckInRequest*>(
      ::bosdyn::api::EstopCheckInRequest::internal_default_instance());
}
class EstopCheckInResponse::_Internal {
 public:
  static const ::bosdyn::api::ResponseHeader& header(const EstopCheckInResponse* msg);
  static const ::bosdyn::api::EstopCheckInRequest& request(const EstopCheckInResponse* msg);
};

const ::bosdyn::api::ResponseHeader&
EstopCheckInResponse::_Internal::header(const EstopCheckInResponse* msg) {
  return *msg->header_;
}
const ::bosdyn::api::EstopCheckInRequest&
EstopCheckInResponse::_Internal::request(const EstopCheckInResponse* msg) {
  return *msg->request_;
}
void EstopCheckInResponse::clear_header() {
  if (GetArena() == nullptr && header_ != nullptr) {
    delete header_;
  }
  header_ = nullptr;
}
EstopCheckInResponse::EstopCheckInResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:bosdyn.api.EstopCheckInResponse)
}
EstopCheckInResponse::EstopCheckInResponse(const EstopCheckInResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_header()) {
    header_ = new ::bosdyn::api::ResponseHeader(*from.header_);
  } else {
    header_ = nullptr;
  }
  if (from._internal_has_request()) {
    request_ = new ::bosdyn::api::EstopCheckInRequest(*from.request_);
  } else {
    request_ = nullptr;
  }
  ::memcpy(&challenge_, &from.challenge_,
    static_cast<size_t>(reinterpret_cast<char*>(&status_) -
    reinterpret_cast<char*>(&challenge_)) + sizeof(status_));
  // @@protoc_insertion_point(copy_constructor:bosdyn.api.EstopCheckInResponse)
}

void EstopCheckInResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_EstopCheckInResponse_bosdyn_2fapi_2festop_2eproto.base);
  ::memset(&header_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&status_) -
      reinterpret_cast<char*>(&header_)) + sizeof(status_));
}

EstopCheckInResponse::~EstopCheckInResponse() {
  // @@protoc_insertion_point(destructor:bosdyn.api.EstopCheckInResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void EstopCheckInResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete header_;
  if (this != internal_default_instance()) delete request_;
}

void EstopCheckInResponse::ArenaDtor(void* object) {
  EstopCheckInResponse* _this = reinterpret_cast< EstopCheckInResponse* >(object);
  (void)_this;
}
void EstopCheckInResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void EstopCheckInResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const EstopCheckInResponse& EstopCheckInResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_EstopCheckInResponse_bosdyn_2fapi_2festop_2eproto.base);
  return *internal_default_instance();
}


void EstopCheckInResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:bosdyn.api.EstopCheckInResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && header_ != nullptr) {
    delete header_;
  }
  header_ = nullptr;
  if (GetArena() == nullptr && request_ != nullptr) {
    delete request_;
  }
  request_ = nullptr;
  ::memset(&challenge_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&status_) -
      reinterpret_cast<char*>(&challenge_)) + sizeof(status_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* EstopCheckInResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .bosdyn.api.ResponseHeader header = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_header(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .bosdyn.api.EstopCheckInRequest request = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_request(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint64 challenge = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          challenge_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .bosdyn.api.EstopCheckInResponse.Status status = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_status(static_cast<::bosdyn::api::EstopCheckInResponse_Status>(val));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* EstopCheckInResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:bosdyn.api.EstopCheckInResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .bosdyn.api.ResponseHeader header = 1;
  if (this->has_header()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::header(this), target, stream);
  }

  // .bosdyn.api.EstopCheckInRequest request = 2;
  if (this->has_request()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::request(this), target, stream);
  }

  // uint64 challenge = 3;
  if (this->challenge() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(3, this->_internal_challenge(), target);
  }

  // .bosdyn.api.EstopCheckInResponse.Status status = 4;
  if (this->status() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      4, this->_internal_status(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:bosdyn.api.EstopCheckInResponse)
  return target;
}

size_t EstopCheckInResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bosdyn.api.EstopCheckInResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .bosdyn.api.ResponseHeader header = 1;
  if (this->has_header()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *header_);
  }

  // .bosdyn.api.EstopCheckInRequest request = 2;
  if (this->has_request()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *request_);
  }

  // uint64 challenge = 3;
  if (this->challenge() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_challenge());
  }

  // .bosdyn.api.EstopCheckInResponse.Status status = 4;
  if (this->status() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_status());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void EstopCheckInResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bosdyn.api.EstopCheckInResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const EstopCheckInResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<EstopCheckInResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bosdyn.api.EstopCheckInResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bosdyn.api.EstopCheckInResponse)
    MergeFrom(*source);
  }
}

void EstopCheckInResponse::MergeFrom(const EstopCheckInResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bosdyn.api.EstopCheckInResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_header()) {
    _internal_mutable_header()->::bosdyn::api::ResponseHeader::MergeFrom(from._internal_header());
  }
  if (from.has_request()) {
    _internal_mutable_request()->::bosdyn::api::EstopCheckInRequest::MergeFrom(from._internal_request());
  }
  if (from.challenge() != 0) {
    _internal_set_challenge(from._internal_challenge());
  }
  if (from.status() != 0) {
    _internal_set_status(from._internal_status());
  }
}

void EstopCheckInResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bosdyn.api.EstopCheckInResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EstopCheckInResponse::CopyFrom(const EstopCheckInResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bosdyn.api.EstopCheckInResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EstopCheckInResponse::IsInitialized() const {
  return true;
}

void EstopCheckInResponse::InternalSwap(EstopCheckInResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(EstopCheckInResponse, status_)
      + sizeof(EstopCheckInResponse::status_)
      - PROTOBUF_FIELD_OFFSET(EstopCheckInResponse, header_)>(
          reinterpret_cast<char*>(&header_),
          reinterpret_cast<char*>(&other->header_));
}

::PROTOBUF_NAMESPACE_ID::Metadata EstopCheckInResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void RegisterEstopEndpointRequest::InitAsDefaultInstance() {
  ::bosdyn::api::_RegisterEstopEndpointRequest_default_instance_._instance.get_mutable()->header_ = const_cast< ::bosdyn::api::RequestHeader*>(
      ::bosdyn::api::RequestHeader::internal_default_instance());
  ::bosdyn::api::_RegisterEstopEndpointRequest_default_instance_._instance.get_mutable()->target_endpoint_ = const_cast< ::bosdyn::api::EstopEndpoint*>(
      ::bosdyn::api::EstopEndpoint::internal_default_instance());
  ::bosdyn::api::_RegisterEstopEndpointRequest_default_instance_._instance.get_mutable()->new_endpoint_ = const_cast< ::bosdyn::api::EstopEndpoint*>(
      ::bosdyn::api::EstopEndpoint::internal_default_instance());
}
class RegisterEstopEndpointRequest::_Internal {
 public:
  static const ::bosdyn::api::RequestHeader& header(const RegisterEstopEndpointRequest* msg);
  static const ::bosdyn::api::EstopEndpoint& target_endpoint(const RegisterEstopEndpointRequest* msg);
  static const ::bosdyn::api::EstopEndpoint& new_endpoint(const RegisterEstopEndpointRequest* msg);
};

const ::bosdyn::api::RequestHeader&
RegisterEstopEndpointRequest::_Internal::header(const RegisterEstopEndpointRequest* msg) {
  return *msg->header_;
}
const ::bosdyn::api::EstopEndpoint&
RegisterEstopEndpointRequest::_Internal::target_endpoint(const RegisterEstopEndpointRequest* msg) {
  return *msg->target_endpoint_;
}
const ::bosdyn::api::EstopEndpoint&
RegisterEstopEndpointRequest::_Internal::new_endpoint(const RegisterEstopEndpointRequest* msg) {
  return *msg->new_endpoint_;
}
void RegisterEstopEndpointRequest::clear_header() {
  if (GetArena() == nullptr && header_ != nullptr) {
    delete header_;
  }
  header_ = nullptr;
}
RegisterEstopEndpointRequest::RegisterEstopEndpointRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:bosdyn.api.RegisterEstopEndpointRequest)
}
RegisterEstopEndpointRequest::RegisterEstopEndpointRequest(const RegisterEstopEndpointRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  target_config_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_target_config_id().empty()) {
    target_config_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_target_config_id(),
      GetArena());
  }
  if (from._internal_has_header()) {
    header_ = new ::bosdyn::api::RequestHeader(*from.header_);
  } else {
    header_ = nullptr;
  }
  if (from._internal_has_target_endpoint()) {
    target_endpoint_ = new ::bosdyn::api::EstopEndpoint(*from.target_endpoint_);
  } else {
    target_endpoint_ = nullptr;
  }
  if (from._internal_has_new_endpoint()) {
    new_endpoint_ = new ::bosdyn::api::EstopEndpoint(*from.new_endpoint_);
  } else {
    new_endpoint_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:bosdyn.api.RegisterEstopEndpointRequest)
}

void RegisterEstopEndpointRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_RegisterEstopEndpointRequest_bosdyn_2fapi_2festop_2eproto.base);
  target_config_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&header_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&new_endpoint_) -
      reinterpret_cast<char*>(&header_)) + sizeof(new_endpoint_));
}

RegisterEstopEndpointRequest::~RegisterEstopEndpointRequest() {
  // @@protoc_insertion_point(destructor:bosdyn.api.RegisterEstopEndpointRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void RegisterEstopEndpointRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  target_config_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete header_;
  if (this != internal_default_instance()) delete target_endpoint_;
  if (this != internal_default_instance()) delete new_endpoint_;
}

void RegisterEstopEndpointRequest::ArenaDtor(void* object) {
  RegisterEstopEndpointRequest* _this = reinterpret_cast< RegisterEstopEndpointRequest* >(object);
  (void)_this;
}
void RegisterEstopEndpointRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void RegisterEstopEndpointRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const RegisterEstopEndpointRequest& RegisterEstopEndpointRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_RegisterEstopEndpointRequest_bosdyn_2fapi_2festop_2eproto.base);
  return *internal_default_instance();
}


void RegisterEstopEndpointRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:bosdyn.api.RegisterEstopEndpointRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  target_config_id_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  if (GetArena() == nullptr && header_ != nullptr) {
    delete header_;
  }
  header_ = nullptr;
  if (GetArena() == nullptr && target_endpoint_ != nullptr) {
    delete target_endpoint_;
  }
  target_endpoint_ = nullptr;
  if (GetArena() == nullptr && new_endpoint_ != nullptr) {
    delete new_endpoint_;
  }
  new_endpoint_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RegisterEstopEndpointRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .bosdyn.api.RequestHeader header = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_header(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .bosdyn.api.EstopEndpoint target_endpoint = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_target_endpoint(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string target_config_id = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_target_config_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "bosdyn.api.RegisterEstopEndpointRequest.target_config_id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .bosdyn.api.EstopEndpoint new_endpoint = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_new_endpoint(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* RegisterEstopEndpointRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:bosdyn.api.RegisterEstopEndpointRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .bosdyn.api.RequestHeader header = 1;
  if (this->has_header()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::header(this), target, stream);
  }

  // .bosdyn.api.EstopEndpoint target_endpoint = 2;
  if (this->has_target_endpoint()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::target_endpoint(this), target, stream);
  }

  // string target_config_id = 3;
  if (this->target_config_id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_target_config_id().data(), static_cast<int>(this->_internal_target_config_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "bosdyn.api.RegisterEstopEndpointRequest.target_config_id");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_target_config_id(), target);
  }

  // .bosdyn.api.EstopEndpoint new_endpoint = 4;
  if (this->has_new_endpoint()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        4, _Internal::new_endpoint(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:bosdyn.api.RegisterEstopEndpointRequest)
  return target;
}

size_t RegisterEstopEndpointRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bosdyn.api.RegisterEstopEndpointRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string target_config_id = 3;
  if (this->target_config_id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_target_config_id());
  }

  // .bosdyn.api.RequestHeader header = 1;
  if (this->has_header()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *header_);
  }

  // .bosdyn.api.EstopEndpoint target_endpoint = 2;
  if (this->has_target_endpoint()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *target_endpoint_);
  }

  // .bosdyn.api.EstopEndpoint new_endpoint = 4;
  if (this->has_new_endpoint()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *new_endpoint_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RegisterEstopEndpointRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bosdyn.api.RegisterEstopEndpointRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const RegisterEstopEndpointRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<RegisterEstopEndpointRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bosdyn.api.RegisterEstopEndpointRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bosdyn.api.RegisterEstopEndpointRequest)
    MergeFrom(*source);
  }
}

void RegisterEstopEndpointRequest::MergeFrom(const RegisterEstopEndpointRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bosdyn.api.RegisterEstopEndpointRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.target_config_id().size() > 0) {
    _internal_set_target_config_id(from._internal_target_config_id());
  }
  if (from.has_header()) {
    _internal_mutable_header()->::bosdyn::api::RequestHeader::MergeFrom(from._internal_header());
  }
  if (from.has_target_endpoint()) {
    _internal_mutable_target_endpoint()->::bosdyn::api::EstopEndpoint::MergeFrom(from._internal_target_endpoint());
  }
  if (from.has_new_endpoint()) {
    _internal_mutable_new_endpoint()->::bosdyn::api::EstopEndpoint::MergeFrom(from._internal_new_endpoint());
  }
}

void RegisterEstopEndpointRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bosdyn.api.RegisterEstopEndpointRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RegisterEstopEndpointRequest::CopyFrom(const RegisterEstopEndpointRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bosdyn.api.RegisterEstopEndpointRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RegisterEstopEndpointRequest::IsInitialized() const {
  return true;
}

void RegisterEstopEndpointRequest::InternalSwap(RegisterEstopEndpointRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  target_config_id_.Swap(&other->target_config_id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(RegisterEstopEndpointRequest, new_endpoint_)
      + sizeof(RegisterEstopEndpointRequest::new_endpoint_)
      - PROTOBUF_FIELD_OFFSET(RegisterEstopEndpointRequest, header_)>(
          reinterpret_cast<char*>(&header_),
          reinterpret_cast<char*>(&other->header_));
}

::PROTOBUF_NAMESPACE_ID::Metadata RegisterEstopEndpointRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void RegisterEstopEndpointResponse::InitAsDefaultInstance() {
  ::bosdyn::api::_RegisterEstopEndpointResponse_default_instance_._instance.get_mutable()->header_ = const_cast< ::bosdyn::api::ResponseHeader*>(
      ::bosdyn::api::ResponseHeader::internal_default_instance());
  ::bosdyn::api::_RegisterEstopEndpointResponse_default_instance_._instance.get_mutable()->request_ = const_cast< ::bosdyn::api::RegisterEstopEndpointRequest*>(
      ::bosdyn::api::RegisterEstopEndpointRequest::internal_default_instance());
  ::bosdyn::api::_RegisterEstopEndpointResponse_default_instance_._instance.get_mutable()->new_endpoint_ = const_cast< ::bosdyn::api::EstopEndpoint*>(
      ::bosdyn::api::EstopEndpoint::internal_default_instance());
}
class RegisterEstopEndpointResponse::_Internal {
 public:
  static const ::bosdyn::api::ResponseHeader& header(const RegisterEstopEndpointResponse* msg);
  static const ::bosdyn::api::RegisterEstopEndpointRequest& request(const RegisterEstopEndpointResponse* msg);
  static const ::bosdyn::api::EstopEndpoint& new_endpoint(const RegisterEstopEndpointResponse* msg);
};

const ::bosdyn::api::ResponseHeader&
RegisterEstopEndpointResponse::_Internal::header(const RegisterEstopEndpointResponse* msg) {
  return *msg->header_;
}
const ::bosdyn::api::RegisterEstopEndpointRequest&
RegisterEstopEndpointResponse::_Internal::request(const RegisterEstopEndpointResponse* msg) {
  return *msg->request_;
}
const ::bosdyn::api::EstopEndpoint&
RegisterEstopEndpointResponse::_Internal::new_endpoint(const RegisterEstopEndpointResponse* msg) {
  return *msg->new_endpoint_;
}
void RegisterEstopEndpointResponse::clear_header() {
  if (GetArena() == nullptr && header_ != nullptr) {
    delete header_;
  }
  header_ = nullptr;
}
RegisterEstopEndpointResponse::RegisterEstopEndpointResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:bosdyn.api.RegisterEstopEndpointResponse)
}
RegisterEstopEndpointResponse::RegisterEstopEndpointResponse(const RegisterEstopEndpointResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_header()) {
    header_ = new ::bosdyn::api::ResponseHeader(*from.header_);
  } else {
    header_ = nullptr;
  }
  if (from._internal_has_request()) {
    request_ = new ::bosdyn::api::RegisterEstopEndpointRequest(*from.request_);
  } else {
    request_ = nullptr;
  }
  if (from._internal_has_new_endpoint()) {
    new_endpoint_ = new ::bosdyn::api::EstopEndpoint(*from.new_endpoint_);
  } else {
    new_endpoint_ = nullptr;
  }
  status_ = from.status_;
  // @@protoc_insertion_point(copy_constructor:bosdyn.api.RegisterEstopEndpointResponse)
}

void RegisterEstopEndpointResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_RegisterEstopEndpointResponse_bosdyn_2fapi_2festop_2eproto.base);
  ::memset(&header_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&status_) -
      reinterpret_cast<char*>(&header_)) + sizeof(status_));
}

RegisterEstopEndpointResponse::~RegisterEstopEndpointResponse() {
  // @@protoc_insertion_point(destructor:bosdyn.api.RegisterEstopEndpointResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void RegisterEstopEndpointResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete header_;
  if (this != internal_default_instance()) delete request_;
  if (this != internal_default_instance()) delete new_endpoint_;
}

void RegisterEstopEndpointResponse::ArenaDtor(void* object) {
  RegisterEstopEndpointResponse* _this = reinterpret_cast< RegisterEstopEndpointResponse* >(object);
  (void)_this;
}
void RegisterEstopEndpointResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void RegisterEstopEndpointResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const RegisterEstopEndpointResponse& RegisterEstopEndpointResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_RegisterEstopEndpointResponse_bosdyn_2fapi_2festop_2eproto.base);
  return *internal_default_instance();
}


void RegisterEstopEndpointResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:bosdyn.api.RegisterEstopEndpointResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && header_ != nullptr) {
    delete header_;
  }
  header_ = nullptr;
  if (GetArena() == nullptr && request_ != nullptr) {
    delete request_;
  }
  request_ = nullptr;
  if (GetArena() == nullptr && new_endpoint_ != nullptr) {
    delete new_endpoint_;
  }
  new_endpoint_ = nullptr;
  status_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RegisterEstopEndpointResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .bosdyn.api.ResponseHeader header = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_header(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .bosdyn.api.RegisterEstopEndpointRequest request = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_request(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .bosdyn.api.EstopEndpoint new_endpoint = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_new_endpoint(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .bosdyn.api.RegisterEstopEndpointResponse.Status status = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_status(static_cast<::bosdyn::api::RegisterEstopEndpointResponse_Status>(val));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* RegisterEstopEndpointResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:bosdyn.api.RegisterEstopEndpointResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .bosdyn.api.ResponseHeader header = 1;
  if (this->has_header()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::header(this), target, stream);
  }

  // .bosdyn.api.RegisterEstopEndpointRequest request = 2;
  if (this->has_request()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::request(this), target, stream);
  }

  // .bosdyn.api.EstopEndpoint new_endpoint = 3;
  if (this->has_new_endpoint()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::new_endpoint(this), target, stream);
  }

  // .bosdyn.api.RegisterEstopEndpointResponse.Status status = 4;
  if (this->status() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      4, this->_internal_status(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:bosdyn.api.RegisterEstopEndpointResponse)
  return target;
}

size_t RegisterEstopEndpointResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bosdyn.api.RegisterEstopEndpointResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .bosdyn.api.ResponseHeader header = 1;
  if (this->has_header()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *header_);
  }

  // .bosdyn.api.RegisterEstopEndpointRequest request = 2;
  if (this->has_request()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *request_);
  }

  // .bosdyn.api.EstopEndpoint new_endpoint = 3;
  if (this->has_new_endpoint()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *new_endpoint_);
  }

  // .bosdyn.api.RegisterEstopEndpointResponse.Status status = 4;
  if (this->status() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_status());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RegisterEstopEndpointResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bosdyn.api.RegisterEstopEndpointResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const RegisterEstopEndpointResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<RegisterEstopEndpointResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bosdyn.api.RegisterEstopEndpointResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bosdyn.api.RegisterEstopEndpointResponse)
    MergeFrom(*source);
  }
}

void RegisterEstopEndpointResponse::MergeFrom(const RegisterEstopEndpointResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bosdyn.api.RegisterEstopEndpointResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_header()) {
    _internal_mutable_header()->::bosdyn::api::ResponseHeader::MergeFrom(from._internal_header());
  }
  if (from.has_request()) {
    _internal_mutable_request()->::bosdyn::api::RegisterEstopEndpointRequest::MergeFrom(from._internal_request());
  }
  if (from.has_new_endpoint()) {
    _internal_mutable_new_endpoint()->::bosdyn::api::EstopEndpoint::MergeFrom(from._internal_new_endpoint());
  }
  if (from.status() != 0) {
    _internal_set_status(from._internal_status());
  }
}

void RegisterEstopEndpointResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bosdyn.api.RegisterEstopEndpointResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RegisterEstopEndpointResponse::CopyFrom(const RegisterEstopEndpointResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bosdyn.api.RegisterEstopEndpointResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RegisterEstopEndpointResponse::IsInitialized() const {
  return true;
}

void RegisterEstopEndpointResponse::InternalSwap(RegisterEstopEndpointResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(RegisterEstopEndpointResponse, status_)
      + sizeof(RegisterEstopEndpointResponse::status_)
      - PROTOBUF_FIELD_OFFSET(RegisterEstopEndpointResponse, header_)>(
          reinterpret_cast<char*>(&header_),
          reinterpret_cast<char*>(&other->header_));
}

::PROTOBUF_NAMESPACE_ID::Metadata RegisterEstopEndpointResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void DeregisterEstopEndpointRequest::InitAsDefaultInstance() {
  ::bosdyn::api::_DeregisterEstopEndpointRequest_default_instance_._instance.get_mutable()->header_ = const_cast< ::bosdyn::api::RequestHeader*>(
      ::bosdyn::api::RequestHeader::internal_default_instance());
  ::bosdyn::api::_DeregisterEstopEndpointRequest_default_instance_._instance.get_mutable()->target_endpoint_ = const_cast< ::bosdyn::api::EstopEndpoint*>(
      ::bosdyn::api::EstopEndpoint::internal_default_instance());
}
class DeregisterEstopEndpointRequest::_Internal {
 public:
  static const ::bosdyn::api::RequestHeader& header(const DeregisterEstopEndpointRequest* msg);
  static const ::bosdyn::api::EstopEndpoint& target_endpoint(const DeregisterEstopEndpointRequest* msg);
};

const ::bosdyn::api::RequestHeader&
DeregisterEstopEndpointRequest::_Internal::header(const DeregisterEstopEndpointRequest* msg) {
  return *msg->header_;
}
const ::bosdyn::api::EstopEndpoint&
DeregisterEstopEndpointRequest::_Internal::target_endpoint(const DeregisterEstopEndpointRequest* msg) {
  return *msg->target_endpoint_;
}
void DeregisterEstopEndpointRequest::clear_header() {
  if (GetArena() == nullptr && header_ != nullptr) {
    delete header_;
  }
  header_ = nullptr;
}
DeregisterEstopEndpointRequest::DeregisterEstopEndpointRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:bosdyn.api.DeregisterEstopEndpointRequest)
}
DeregisterEstopEndpointRequest::DeregisterEstopEndpointRequest(const DeregisterEstopEndpointRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  target_config_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_target_config_id().empty()) {
    target_config_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_target_config_id(),
      GetArena());
  }
  if (from._internal_has_header()) {
    header_ = new ::bosdyn::api::RequestHeader(*from.header_);
  } else {
    header_ = nullptr;
  }
  if (from._internal_has_target_endpoint()) {
    target_endpoint_ = new ::bosdyn::api::EstopEndpoint(*from.target_endpoint_);
  } else {
    target_endpoint_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:bosdyn.api.DeregisterEstopEndpointRequest)
}

void DeregisterEstopEndpointRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_DeregisterEstopEndpointRequest_bosdyn_2fapi_2festop_2eproto.base);
  target_config_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&header_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&target_endpoint_) -
      reinterpret_cast<char*>(&header_)) + sizeof(target_endpoint_));
}

DeregisterEstopEndpointRequest::~DeregisterEstopEndpointRequest() {
  // @@protoc_insertion_point(destructor:bosdyn.api.DeregisterEstopEndpointRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void DeregisterEstopEndpointRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  target_config_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete header_;
  if (this != internal_default_instance()) delete target_endpoint_;
}

void DeregisterEstopEndpointRequest::ArenaDtor(void* object) {
  DeregisterEstopEndpointRequest* _this = reinterpret_cast< DeregisterEstopEndpointRequest* >(object);
  (void)_this;
}
void DeregisterEstopEndpointRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void DeregisterEstopEndpointRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DeregisterEstopEndpointRequest& DeregisterEstopEndpointRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_DeregisterEstopEndpointRequest_bosdyn_2fapi_2festop_2eproto.base);
  return *internal_default_instance();
}


void DeregisterEstopEndpointRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:bosdyn.api.DeregisterEstopEndpointRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  target_config_id_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  if (GetArena() == nullptr && header_ != nullptr) {
    delete header_;
  }
  header_ = nullptr;
  if (GetArena() == nullptr && target_endpoint_ != nullptr) {
    delete target_endpoint_;
  }
  target_endpoint_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DeregisterEstopEndpointRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .bosdyn.api.RequestHeader header = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_header(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .bosdyn.api.EstopEndpoint target_endpoint = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_target_endpoint(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string target_config_id = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_target_config_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "bosdyn.api.DeregisterEstopEndpointRequest.target_config_id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* DeregisterEstopEndpointRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:bosdyn.api.DeregisterEstopEndpointRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .bosdyn.api.RequestHeader header = 1;
  if (this->has_header()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::header(this), target, stream);
  }

  // .bosdyn.api.EstopEndpoint target_endpoint = 2;
  if (this->has_target_endpoint()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::target_endpoint(this), target, stream);
  }

  // string target_config_id = 3;
  if (this->target_config_id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_target_config_id().data(), static_cast<int>(this->_internal_target_config_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "bosdyn.api.DeregisterEstopEndpointRequest.target_config_id");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_target_config_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:bosdyn.api.DeregisterEstopEndpointRequest)
  return target;
}

size_t DeregisterEstopEndpointRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bosdyn.api.DeregisterEstopEndpointRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string target_config_id = 3;
  if (this->target_config_id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_target_config_id());
  }

  // .bosdyn.api.RequestHeader header = 1;
  if (this->has_header()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *header_);
  }

  // .bosdyn.api.EstopEndpoint target_endpoint = 2;
  if (this->has_target_endpoint()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *target_endpoint_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DeregisterEstopEndpointRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bosdyn.api.DeregisterEstopEndpointRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const DeregisterEstopEndpointRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<DeregisterEstopEndpointRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bosdyn.api.DeregisterEstopEndpointRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bosdyn.api.DeregisterEstopEndpointRequest)
    MergeFrom(*source);
  }
}

void DeregisterEstopEndpointRequest::MergeFrom(const DeregisterEstopEndpointRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bosdyn.api.DeregisterEstopEndpointRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.target_config_id().size() > 0) {
    _internal_set_target_config_id(from._internal_target_config_id());
  }
  if (from.has_header()) {
    _internal_mutable_header()->::bosdyn::api::RequestHeader::MergeFrom(from._internal_header());
  }
  if (from.has_target_endpoint()) {
    _internal_mutable_target_endpoint()->::bosdyn::api::EstopEndpoint::MergeFrom(from._internal_target_endpoint());
  }
}

void DeregisterEstopEndpointRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bosdyn.api.DeregisterEstopEndpointRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeregisterEstopEndpointRequest::CopyFrom(const DeregisterEstopEndpointRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bosdyn.api.DeregisterEstopEndpointRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeregisterEstopEndpointRequest::IsInitialized() const {
  return true;
}

void DeregisterEstopEndpointRequest::InternalSwap(DeregisterEstopEndpointRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  target_config_id_.Swap(&other->target_config_id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(DeregisterEstopEndpointRequest, target_endpoint_)
      + sizeof(DeregisterEstopEndpointRequest::target_endpoint_)
      - PROTOBUF_FIELD_OFFSET(DeregisterEstopEndpointRequest, header_)>(
          reinterpret_cast<char*>(&header_),
          reinterpret_cast<char*>(&other->header_));
}

::PROTOBUF_NAMESPACE_ID::Metadata DeregisterEstopEndpointRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void DeregisterEstopEndpointResponse::InitAsDefaultInstance() {
  ::bosdyn::api::_DeregisterEstopEndpointResponse_default_instance_._instance.get_mutable()->header_ = const_cast< ::bosdyn::api::ResponseHeader*>(
      ::bosdyn::api::ResponseHeader::internal_default_instance());
  ::bosdyn::api::_DeregisterEstopEndpointResponse_default_instance_._instance.get_mutable()->request_ = const_cast< ::bosdyn::api::DeregisterEstopEndpointRequest*>(
      ::bosdyn::api::DeregisterEstopEndpointRequest::internal_default_instance());
}
class DeregisterEstopEndpointResponse::_Internal {
 public:
  static const ::bosdyn::api::ResponseHeader& header(const DeregisterEstopEndpointResponse* msg);
  static const ::bosdyn::api::DeregisterEstopEndpointRequest& request(const DeregisterEstopEndpointResponse* msg);
};

const ::bosdyn::api::ResponseHeader&
DeregisterEstopEndpointResponse::_Internal::header(const DeregisterEstopEndpointResponse* msg) {
  return *msg->header_;
}
const ::bosdyn::api::DeregisterEstopEndpointRequest&
DeregisterEstopEndpointResponse::_Internal::request(const DeregisterEstopEndpointResponse* msg) {
  return *msg->request_;
}
void DeregisterEstopEndpointResponse::clear_header() {
  if (GetArena() == nullptr && header_ != nullptr) {
    delete header_;
  }
  header_ = nullptr;
}
DeregisterEstopEndpointResponse::DeregisterEstopEndpointResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:bosdyn.api.DeregisterEstopEndpointResponse)
}
DeregisterEstopEndpointResponse::DeregisterEstopEndpointResponse(const DeregisterEstopEndpointResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_header()) {
    header_ = new ::bosdyn::api::ResponseHeader(*from.header_);
  } else {
    header_ = nullptr;
  }
  if (from._internal_has_request()) {
    request_ = new ::bosdyn::api::DeregisterEstopEndpointRequest(*from.request_);
  } else {
    request_ = nullptr;
  }
  status_ = from.status_;
  // @@protoc_insertion_point(copy_constructor:bosdyn.api.DeregisterEstopEndpointResponse)
}

void DeregisterEstopEndpointResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_DeregisterEstopEndpointResponse_bosdyn_2fapi_2festop_2eproto.base);
  ::memset(&header_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&status_) -
      reinterpret_cast<char*>(&header_)) + sizeof(status_));
}

DeregisterEstopEndpointResponse::~DeregisterEstopEndpointResponse() {
  // @@protoc_insertion_point(destructor:bosdyn.api.DeregisterEstopEndpointResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void DeregisterEstopEndpointResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete header_;
  if (this != internal_default_instance()) delete request_;
}

void DeregisterEstopEndpointResponse::ArenaDtor(void* object) {
  DeregisterEstopEndpointResponse* _this = reinterpret_cast< DeregisterEstopEndpointResponse* >(object);
  (void)_this;
}
void DeregisterEstopEndpointResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void DeregisterEstopEndpointResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DeregisterEstopEndpointResponse& DeregisterEstopEndpointResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_DeregisterEstopEndpointResponse_bosdyn_2fapi_2festop_2eproto.base);
  return *internal_default_instance();
}


void DeregisterEstopEndpointResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:bosdyn.api.DeregisterEstopEndpointResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && header_ != nullptr) {
    delete header_;
  }
  header_ = nullptr;
  if (GetArena() == nullptr && request_ != nullptr) {
    delete request_;
  }
  request_ = nullptr;
  status_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DeregisterEstopEndpointResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .bosdyn.api.ResponseHeader header = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_header(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .bosdyn.api.DeregisterEstopEndpointRequest request = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_request(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .bosdyn.api.DeregisterEstopEndpointResponse.Status status = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_status(static_cast<::bosdyn::api::DeregisterEstopEndpointResponse_Status>(val));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* DeregisterEstopEndpointResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:bosdyn.api.DeregisterEstopEndpointResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .bosdyn.api.ResponseHeader header = 1;
  if (this->has_header()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::header(this), target, stream);
  }

  // .bosdyn.api.DeregisterEstopEndpointRequest request = 2;
  if (this->has_request()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::request(this), target, stream);
  }

  // .bosdyn.api.DeregisterEstopEndpointResponse.Status status = 4;
  if (this->status() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      4, this->_internal_status(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:bosdyn.api.DeregisterEstopEndpointResponse)
  return target;
}

size_t DeregisterEstopEndpointResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bosdyn.api.DeregisterEstopEndpointResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .bosdyn.api.ResponseHeader header = 1;
  if (this->has_header()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *header_);
  }

  // .bosdyn.api.DeregisterEstopEndpointRequest request = 2;
  if (this->has_request()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *request_);
  }

  // .bosdyn.api.DeregisterEstopEndpointResponse.Status status = 4;
  if (this->status() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_status());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DeregisterEstopEndpointResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bosdyn.api.DeregisterEstopEndpointResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const DeregisterEstopEndpointResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<DeregisterEstopEndpointResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bosdyn.api.DeregisterEstopEndpointResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bosdyn.api.DeregisterEstopEndpointResponse)
    MergeFrom(*source);
  }
}

void DeregisterEstopEndpointResponse::MergeFrom(const DeregisterEstopEndpointResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bosdyn.api.DeregisterEstopEndpointResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_header()) {
    _internal_mutable_header()->::bosdyn::api::ResponseHeader::MergeFrom(from._internal_header());
  }
  if (from.has_request()) {
    _internal_mutable_request()->::bosdyn::api::DeregisterEstopEndpointRequest::MergeFrom(from._internal_request());
  }
  if (from.status() != 0) {
    _internal_set_status(from._internal_status());
  }
}

void DeregisterEstopEndpointResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bosdyn.api.DeregisterEstopEndpointResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeregisterEstopEndpointResponse::CopyFrom(const DeregisterEstopEndpointResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bosdyn.api.DeregisterEstopEndpointResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeregisterEstopEndpointResponse::IsInitialized() const {
  return true;
}

void DeregisterEstopEndpointResponse::InternalSwap(DeregisterEstopEndpointResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(DeregisterEstopEndpointResponse, status_)
      + sizeof(DeregisterEstopEndpointResponse::status_)
      - PROTOBUF_FIELD_OFFSET(DeregisterEstopEndpointResponse, header_)>(
          reinterpret_cast<char*>(&header_),
          reinterpret_cast<char*>(&other->header_));
}

::PROTOBUF_NAMESPACE_ID::Metadata DeregisterEstopEndpointResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GetEstopConfigRequest::InitAsDefaultInstance() {
  ::bosdyn::api::_GetEstopConfigRequest_default_instance_._instance.get_mutable()->header_ = const_cast< ::bosdyn::api::RequestHeader*>(
      ::bosdyn::api::RequestHeader::internal_default_instance());
}
class GetEstopConfigRequest::_Internal {
 public:
  static const ::bosdyn::api::RequestHeader& header(const GetEstopConfigRequest* msg);
};

const ::bosdyn::api::RequestHeader&
GetEstopConfigRequest::_Internal::header(const GetEstopConfigRequest* msg) {
  return *msg->header_;
}
void GetEstopConfigRequest::clear_header() {
  if (GetArena() == nullptr && header_ != nullptr) {
    delete header_;
  }
  header_ = nullptr;
}
GetEstopConfigRequest::GetEstopConfigRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:bosdyn.api.GetEstopConfigRequest)
}
GetEstopConfigRequest::GetEstopConfigRequest(const GetEstopConfigRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  target_config_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_target_config_id().empty()) {
    target_config_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_target_config_id(),
      GetArena());
  }
  if (from._internal_has_header()) {
    header_ = new ::bosdyn::api::RequestHeader(*from.header_);
  } else {
    header_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:bosdyn.api.GetEstopConfigRequest)
}

void GetEstopConfigRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GetEstopConfigRequest_bosdyn_2fapi_2festop_2eproto.base);
  target_config_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  header_ = nullptr;
}

GetEstopConfigRequest::~GetEstopConfigRequest() {
  // @@protoc_insertion_point(destructor:bosdyn.api.GetEstopConfigRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetEstopConfigRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  target_config_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete header_;
}

void GetEstopConfigRequest::ArenaDtor(void* object) {
  GetEstopConfigRequest* _this = reinterpret_cast< GetEstopConfigRequest* >(object);
  (void)_this;
}
void GetEstopConfigRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetEstopConfigRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetEstopConfigRequest& GetEstopConfigRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetEstopConfigRequest_bosdyn_2fapi_2festop_2eproto.base);
  return *internal_default_instance();
}


void GetEstopConfigRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:bosdyn.api.GetEstopConfigRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  target_config_id_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  if (GetArena() == nullptr && header_ != nullptr) {
    delete header_;
  }
  header_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetEstopConfigRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .bosdyn.api.RequestHeader header = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_header(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string target_config_id = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_target_config_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "bosdyn.api.GetEstopConfigRequest.target_config_id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetEstopConfigRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:bosdyn.api.GetEstopConfigRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .bosdyn.api.RequestHeader header = 1;
  if (this->has_header()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::header(this), target, stream);
  }

  // string target_config_id = 4;
  if (this->target_config_id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_target_config_id().data(), static_cast<int>(this->_internal_target_config_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "bosdyn.api.GetEstopConfigRequest.target_config_id");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_target_config_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:bosdyn.api.GetEstopConfigRequest)
  return target;
}

size_t GetEstopConfigRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bosdyn.api.GetEstopConfigRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string target_config_id = 4;
  if (this->target_config_id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_target_config_id());
  }

  // .bosdyn.api.RequestHeader header = 1;
  if (this->has_header()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *header_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetEstopConfigRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bosdyn.api.GetEstopConfigRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetEstopConfigRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetEstopConfigRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bosdyn.api.GetEstopConfigRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bosdyn.api.GetEstopConfigRequest)
    MergeFrom(*source);
  }
}

void GetEstopConfigRequest::MergeFrom(const GetEstopConfigRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bosdyn.api.GetEstopConfigRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.target_config_id().size() > 0) {
    _internal_set_target_config_id(from._internal_target_config_id());
  }
  if (from.has_header()) {
    _internal_mutable_header()->::bosdyn::api::RequestHeader::MergeFrom(from._internal_header());
  }
}

void GetEstopConfigRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bosdyn.api.GetEstopConfigRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetEstopConfigRequest::CopyFrom(const GetEstopConfigRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bosdyn.api.GetEstopConfigRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetEstopConfigRequest::IsInitialized() const {
  return true;
}

void GetEstopConfigRequest::InternalSwap(GetEstopConfigRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  target_config_id_.Swap(&other->target_config_id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(header_, other->header_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetEstopConfigRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GetEstopConfigResponse::InitAsDefaultInstance() {
  ::bosdyn::api::_GetEstopConfigResponse_default_instance_._instance.get_mutable()->header_ = const_cast< ::bosdyn::api::ResponseHeader*>(
      ::bosdyn::api::ResponseHeader::internal_default_instance());
  ::bosdyn::api::_GetEstopConfigResponse_default_instance_._instance.get_mutable()->request_ = const_cast< ::bosdyn::api::GetEstopConfigRequest*>(
      ::bosdyn::api::GetEstopConfigRequest::internal_default_instance());
  ::bosdyn::api::_GetEstopConfigResponse_default_instance_._instance.get_mutable()->active_config_ = const_cast< ::bosdyn::api::EstopConfig*>(
      ::bosdyn::api::EstopConfig::internal_default_instance());
}
class GetEstopConfigResponse::_Internal {
 public:
  static const ::bosdyn::api::ResponseHeader& header(const GetEstopConfigResponse* msg);
  static const ::bosdyn::api::GetEstopConfigRequest& request(const GetEstopConfigResponse* msg);
  static const ::bosdyn::api::EstopConfig& active_config(const GetEstopConfigResponse* msg);
};

const ::bosdyn::api::ResponseHeader&
GetEstopConfigResponse::_Internal::header(const GetEstopConfigResponse* msg) {
  return *msg->header_;
}
const ::bosdyn::api::GetEstopConfigRequest&
GetEstopConfigResponse::_Internal::request(const GetEstopConfigResponse* msg) {
  return *msg->request_;
}
const ::bosdyn::api::EstopConfig&
GetEstopConfigResponse::_Internal::active_config(const GetEstopConfigResponse* msg) {
  return *msg->active_config_;
}
void GetEstopConfigResponse::clear_header() {
  if (GetArena() == nullptr && header_ != nullptr) {
    delete header_;
  }
  header_ = nullptr;
}
GetEstopConfigResponse::GetEstopConfigResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:bosdyn.api.GetEstopConfigResponse)
}
GetEstopConfigResponse::GetEstopConfigResponse(const GetEstopConfigResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_header()) {
    header_ = new ::bosdyn::api::ResponseHeader(*from.header_);
  } else {
    header_ = nullptr;
  }
  if (from._internal_has_request()) {
    request_ = new ::bosdyn::api::GetEstopConfigRequest(*from.request_);
  } else {
    request_ = nullptr;
  }
  if (from._internal_has_active_config()) {
    active_config_ = new ::bosdyn::api::EstopConfig(*from.active_config_);
  } else {
    active_config_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:bosdyn.api.GetEstopConfigResponse)
}

void GetEstopConfigResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GetEstopConfigResponse_bosdyn_2fapi_2festop_2eproto.base);
  ::memset(&header_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&active_config_) -
      reinterpret_cast<char*>(&header_)) + sizeof(active_config_));
}

GetEstopConfigResponse::~GetEstopConfigResponse() {
  // @@protoc_insertion_point(destructor:bosdyn.api.GetEstopConfigResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetEstopConfigResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete header_;
  if (this != internal_default_instance()) delete request_;
  if (this != internal_default_instance()) delete active_config_;
}

void GetEstopConfigResponse::ArenaDtor(void* object) {
  GetEstopConfigResponse* _this = reinterpret_cast< GetEstopConfigResponse* >(object);
  (void)_this;
}
void GetEstopConfigResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetEstopConfigResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetEstopConfigResponse& GetEstopConfigResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetEstopConfigResponse_bosdyn_2fapi_2festop_2eproto.base);
  return *internal_default_instance();
}


void GetEstopConfigResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:bosdyn.api.GetEstopConfigResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && header_ != nullptr) {
    delete header_;
  }
  header_ = nullptr;
  if (GetArena() == nullptr && request_ != nullptr) {
    delete request_;
  }
  request_ = nullptr;
  if (GetArena() == nullptr && active_config_ != nullptr) {
    delete active_config_;
  }
  active_config_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetEstopConfigResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .bosdyn.api.ResponseHeader header = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_header(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .bosdyn.api.GetEstopConfigRequest request = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_request(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .bosdyn.api.EstopConfig active_config = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_active_config(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetEstopConfigResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:bosdyn.api.GetEstopConfigResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .bosdyn.api.ResponseHeader header = 1;
  if (this->has_header()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::header(this), target, stream);
  }

  // .bosdyn.api.GetEstopConfigRequest request = 2;
  if (this->has_request()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::request(this), target, stream);
  }

  // .bosdyn.api.EstopConfig active_config = 3;
  if (this->has_active_config()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::active_config(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:bosdyn.api.GetEstopConfigResponse)
  return target;
}

size_t GetEstopConfigResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bosdyn.api.GetEstopConfigResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .bosdyn.api.ResponseHeader header = 1;
  if (this->has_header()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *header_);
  }

  // .bosdyn.api.GetEstopConfigRequest request = 2;
  if (this->has_request()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *request_);
  }

  // .bosdyn.api.EstopConfig active_config = 3;
  if (this->has_active_config()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *active_config_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetEstopConfigResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bosdyn.api.GetEstopConfigResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const GetEstopConfigResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetEstopConfigResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bosdyn.api.GetEstopConfigResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bosdyn.api.GetEstopConfigResponse)
    MergeFrom(*source);
  }
}

void GetEstopConfigResponse::MergeFrom(const GetEstopConfigResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bosdyn.api.GetEstopConfigResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_header()) {
    _internal_mutable_header()->::bosdyn::api::ResponseHeader::MergeFrom(from._internal_header());
  }
  if (from.has_request()) {
    _internal_mutable_request()->::bosdyn::api::GetEstopConfigRequest::MergeFrom(from._internal_request());
  }
  if (from.has_active_config()) {
    _internal_mutable_active_config()->::bosdyn::api::EstopConfig::MergeFrom(from._internal_active_config());
  }
}

void GetEstopConfigResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bosdyn.api.GetEstopConfigResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetEstopConfigResponse::CopyFrom(const GetEstopConfigResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bosdyn.api.GetEstopConfigResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetEstopConfigResponse::IsInitialized() const {
  return true;
}

void GetEstopConfigResponse::InternalSwap(GetEstopConfigResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GetEstopConfigResponse, active_config_)
      + sizeof(GetEstopConfigResponse::active_config_)
      - PROTOBUF_FIELD_OFFSET(GetEstopConfigResponse, header_)>(
          reinterpret_cast<char*>(&header_),
          reinterpret_cast<char*>(&other->header_));
}

::PROTOBUF_NAMESPACE_ID::Metadata GetEstopConfigResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void SetEstopConfigRequest::InitAsDefaultInstance() {
  ::bosdyn::api::_SetEstopConfigRequest_default_instance_._instance.get_mutable()->header_ = const_cast< ::bosdyn::api::RequestHeader*>(
      ::bosdyn::api::RequestHeader::internal_default_instance());
  ::bosdyn::api::_SetEstopConfigRequest_default_instance_._instance.get_mutable()->config_ = const_cast< ::bosdyn::api::EstopConfig*>(
      ::bosdyn::api::EstopConfig::internal_default_instance());
}
class SetEstopConfigRequest::_Internal {
 public:
  static const ::bosdyn::api::RequestHeader& header(const SetEstopConfigRequest* msg);
  static const ::bosdyn::api::EstopConfig& config(const SetEstopConfigRequest* msg);
};

const ::bosdyn::api::RequestHeader&
SetEstopConfigRequest::_Internal::header(const SetEstopConfigRequest* msg) {
  return *msg->header_;
}
const ::bosdyn::api::EstopConfig&
SetEstopConfigRequest::_Internal::config(const SetEstopConfigRequest* msg) {
  return *msg->config_;
}
void SetEstopConfigRequest::clear_header() {
  if (GetArena() == nullptr && header_ != nullptr) {
    delete header_;
  }
  header_ = nullptr;
}
SetEstopConfigRequest::SetEstopConfigRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:bosdyn.api.SetEstopConfigRequest)
}
SetEstopConfigRequest::SetEstopConfigRequest(const SetEstopConfigRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  target_config_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_target_config_id().empty()) {
    target_config_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_target_config_id(),
      GetArena());
  }
  if (from._internal_has_header()) {
    header_ = new ::bosdyn::api::RequestHeader(*from.header_);
  } else {
    header_ = nullptr;
  }
  if (from._internal_has_config()) {
    config_ = new ::bosdyn::api::EstopConfig(*from.config_);
  } else {
    config_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:bosdyn.api.SetEstopConfigRequest)
}

void SetEstopConfigRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_SetEstopConfigRequest_bosdyn_2fapi_2festop_2eproto.base);
  target_config_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&header_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&config_) -
      reinterpret_cast<char*>(&header_)) + sizeof(config_));
}

SetEstopConfigRequest::~SetEstopConfigRequest() {
  // @@protoc_insertion_point(destructor:bosdyn.api.SetEstopConfigRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void SetEstopConfigRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  target_config_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete header_;
  if (this != internal_default_instance()) delete config_;
}

void SetEstopConfigRequest::ArenaDtor(void* object) {
  SetEstopConfigRequest* _this = reinterpret_cast< SetEstopConfigRequest* >(object);
  (void)_this;
}
void SetEstopConfigRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SetEstopConfigRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SetEstopConfigRequest& SetEstopConfigRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_SetEstopConfigRequest_bosdyn_2fapi_2festop_2eproto.base);
  return *internal_default_instance();
}


void SetEstopConfigRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:bosdyn.api.SetEstopConfigRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  target_config_id_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  if (GetArena() == nullptr && header_ != nullptr) {
    delete header_;
  }
  header_ = nullptr;
  if (GetArena() == nullptr && config_ != nullptr) {
    delete config_;
  }
  config_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SetEstopConfigRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .bosdyn.api.RequestHeader header = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_header(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .bosdyn.api.EstopConfig config = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_config(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string target_config_id = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_target_config_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "bosdyn.api.SetEstopConfigRequest.target_config_id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SetEstopConfigRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:bosdyn.api.SetEstopConfigRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .bosdyn.api.RequestHeader header = 1;
  if (this->has_header()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::header(this), target, stream);
  }

  // .bosdyn.api.EstopConfig config = 3;
  if (this->has_config()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::config(this), target, stream);
  }

  // string target_config_id = 4;
  if (this->target_config_id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_target_config_id().data(), static_cast<int>(this->_internal_target_config_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "bosdyn.api.SetEstopConfigRequest.target_config_id");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_target_config_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:bosdyn.api.SetEstopConfigRequest)
  return target;
}

size_t SetEstopConfigRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bosdyn.api.SetEstopConfigRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string target_config_id = 4;
  if (this->target_config_id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_target_config_id());
  }

  // .bosdyn.api.RequestHeader header = 1;
  if (this->has_header()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *header_);
  }

  // .bosdyn.api.EstopConfig config = 3;
  if (this->has_config()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *config_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SetEstopConfigRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bosdyn.api.SetEstopConfigRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const SetEstopConfigRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SetEstopConfigRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bosdyn.api.SetEstopConfigRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bosdyn.api.SetEstopConfigRequest)
    MergeFrom(*source);
  }
}

void SetEstopConfigRequest::MergeFrom(const SetEstopConfigRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bosdyn.api.SetEstopConfigRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.target_config_id().size() > 0) {
    _internal_set_target_config_id(from._internal_target_config_id());
  }
  if (from.has_header()) {
    _internal_mutable_header()->::bosdyn::api::RequestHeader::MergeFrom(from._internal_header());
  }
  if (from.has_config()) {
    _internal_mutable_config()->::bosdyn::api::EstopConfig::MergeFrom(from._internal_config());
  }
}

void SetEstopConfigRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bosdyn.api.SetEstopConfigRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetEstopConfigRequest::CopyFrom(const SetEstopConfigRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bosdyn.api.SetEstopConfigRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetEstopConfigRequest::IsInitialized() const {
  return true;
}

void SetEstopConfigRequest::InternalSwap(SetEstopConfigRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  target_config_id_.Swap(&other->target_config_id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SetEstopConfigRequest, config_)
      + sizeof(SetEstopConfigRequest::config_)
      - PROTOBUF_FIELD_OFFSET(SetEstopConfigRequest, header_)>(
          reinterpret_cast<char*>(&header_),
          reinterpret_cast<char*>(&other->header_));
}

::PROTOBUF_NAMESPACE_ID::Metadata SetEstopConfigRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void SetEstopConfigResponse::InitAsDefaultInstance() {
  ::bosdyn::api::_SetEstopConfigResponse_default_instance_._instance.get_mutable()->header_ = const_cast< ::bosdyn::api::ResponseHeader*>(
      ::bosdyn::api::ResponseHeader::internal_default_instance());
  ::bosdyn::api::_SetEstopConfigResponse_default_instance_._instance.get_mutable()->request_ = const_cast< ::bosdyn::api::SetEstopConfigRequest*>(
      ::bosdyn::api::SetEstopConfigRequest::internal_default_instance());
  ::bosdyn::api::_SetEstopConfigResponse_default_instance_._instance.get_mutable()->active_config_ = const_cast< ::bosdyn::api::EstopConfig*>(
      ::bosdyn::api::EstopConfig::internal_default_instance());
}
class SetEstopConfigResponse::_Internal {
 public:
  static const ::bosdyn::api::ResponseHeader& header(const SetEstopConfigResponse* msg);
  static const ::bosdyn::api::SetEstopConfigRequest& request(const SetEstopConfigResponse* msg);
  static const ::bosdyn::api::EstopConfig& active_config(const SetEstopConfigResponse* msg);
};

const ::bosdyn::api::ResponseHeader&
SetEstopConfigResponse::_Internal::header(const SetEstopConfigResponse* msg) {
  return *msg->header_;
}
const ::bosdyn::api::SetEstopConfigRequest&
SetEstopConfigResponse::_Internal::request(const SetEstopConfigResponse* msg) {
  return *msg->request_;
}
const ::bosdyn::api::EstopConfig&
SetEstopConfigResponse::_Internal::active_config(const SetEstopConfigResponse* msg) {
  return *msg->active_config_;
}
void SetEstopConfigResponse::clear_header() {
  if (GetArena() == nullptr && header_ != nullptr) {
    delete header_;
  }
  header_ = nullptr;
}
SetEstopConfigResponse::SetEstopConfigResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:bosdyn.api.SetEstopConfigResponse)
}
SetEstopConfigResponse::SetEstopConfigResponse(const SetEstopConfigResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_header()) {
    header_ = new ::bosdyn::api::ResponseHeader(*from.header_);
  } else {
    header_ = nullptr;
  }
  if (from._internal_has_request()) {
    request_ = new ::bosdyn::api::SetEstopConfigRequest(*from.request_);
  } else {
    request_ = nullptr;
  }
  if (from._internal_has_active_config()) {
    active_config_ = new ::bosdyn::api::EstopConfig(*from.active_config_);
  } else {
    active_config_ = nullptr;
  }
  status_ = from.status_;
  // @@protoc_insertion_point(copy_constructor:bosdyn.api.SetEstopConfigResponse)
}

void SetEstopConfigResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_SetEstopConfigResponse_bosdyn_2fapi_2festop_2eproto.base);
  ::memset(&header_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&status_) -
      reinterpret_cast<char*>(&header_)) + sizeof(status_));
}

SetEstopConfigResponse::~SetEstopConfigResponse() {
  // @@protoc_insertion_point(destructor:bosdyn.api.SetEstopConfigResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void SetEstopConfigResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete header_;
  if (this != internal_default_instance()) delete request_;
  if (this != internal_default_instance()) delete active_config_;
}

void SetEstopConfigResponse::ArenaDtor(void* object) {
  SetEstopConfigResponse* _this = reinterpret_cast< SetEstopConfigResponse* >(object);
  (void)_this;
}
void SetEstopConfigResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SetEstopConfigResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SetEstopConfigResponse& SetEstopConfigResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_SetEstopConfigResponse_bosdyn_2fapi_2festop_2eproto.base);
  return *internal_default_instance();
}


void SetEstopConfigResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:bosdyn.api.SetEstopConfigResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && header_ != nullptr) {
    delete header_;
  }
  header_ = nullptr;
  if (GetArena() == nullptr && request_ != nullptr) {
    delete request_;
  }
  request_ = nullptr;
  if (GetArena() == nullptr && active_config_ != nullptr) {
    delete active_config_;
  }
  active_config_ = nullptr;
  status_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SetEstopConfigResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .bosdyn.api.ResponseHeader header = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_header(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .bosdyn.api.SetEstopConfigRequest request = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_request(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .bosdyn.api.EstopConfig active_config = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_active_config(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .bosdyn.api.SetEstopConfigResponse.Status status = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_status(static_cast<::bosdyn::api::SetEstopConfigResponse_Status>(val));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SetEstopConfigResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:bosdyn.api.SetEstopConfigResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .bosdyn.api.ResponseHeader header = 1;
  if (this->has_header()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::header(this), target, stream);
  }

  // .bosdyn.api.SetEstopConfigRequest request = 2;
  if (this->has_request()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::request(this), target, stream);
  }

  // .bosdyn.api.EstopConfig active_config = 3;
  if (this->has_active_config()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::active_config(this), target, stream);
  }

  // .bosdyn.api.SetEstopConfigResponse.Status status = 4;
  if (this->status() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      4, this->_internal_status(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:bosdyn.api.SetEstopConfigResponse)
  return target;
}

size_t SetEstopConfigResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bosdyn.api.SetEstopConfigResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .bosdyn.api.ResponseHeader header = 1;
  if (this->has_header()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *header_);
  }

  // .bosdyn.api.SetEstopConfigRequest request = 2;
  if (this->has_request()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *request_);
  }

  // .bosdyn.api.EstopConfig active_config = 3;
  if (this->has_active_config()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *active_config_);
  }

  // .bosdyn.api.SetEstopConfigResponse.Status status = 4;
  if (this->status() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_status());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SetEstopConfigResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bosdyn.api.SetEstopConfigResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const SetEstopConfigResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SetEstopConfigResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bosdyn.api.SetEstopConfigResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bosdyn.api.SetEstopConfigResponse)
    MergeFrom(*source);
  }
}

void SetEstopConfigResponse::MergeFrom(const SetEstopConfigResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bosdyn.api.SetEstopConfigResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_header()) {
    _internal_mutable_header()->::bosdyn::api::ResponseHeader::MergeFrom(from._internal_header());
  }
  if (from.has_request()) {
    _internal_mutable_request()->::bosdyn::api::SetEstopConfigRequest::MergeFrom(from._internal_request());
  }
  if (from.has_active_config()) {
    _internal_mutable_active_config()->::bosdyn::api::EstopConfig::MergeFrom(from._internal_active_config());
  }
  if (from.status() != 0) {
    _internal_set_status(from._internal_status());
  }
}

void SetEstopConfigResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bosdyn.api.SetEstopConfigResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetEstopConfigResponse::CopyFrom(const SetEstopConfigResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bosdyn.api.SetEstopConfigResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetEstopConfigResponse::IsInitialized() const {
  return true;
}

void SetEstopConfigResponse::InternalSwap(SetEstopConfigResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SetEstopConfigResponse, status_)
      + sizeof(SetEstopConfigResponse::status_)
      - PROTOBUF_FIELD_OFFSET(SetEstopConfigResponse, header_)>(
          reinterpret_cast<char*>(&header_),
          reinterpret_cast<char*>(&other->header_));
}

::PROTOBUF_NAMESPACE_ID::Metadata SetEstopConfigResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GetEstopSystemStatusRequest::InitAsDefaultInstance() {
  ::bosdyn::api::_GetEstopSystemStatusRequest_default_instance_._instance.get_mutable()->header_ = const_cast< ::bosdyn::api::RequestHeader*>(
      ::bosdyn::api::RequestHeader::internal_default_instance());
}
class GetEstopSystemStatusRequest::_Internal {
 public:
  static const ::bosdyn::api::RequestHeader& header(const GetEstopSystemStatusRequest* msg);
};

const ::bosdyn::api::RequestHeader&
GetEstopSystemStatusRequest::_Internal::header(const GetEstopSystemStatusRequest* msg) {
  return *msg->header_;
}
void GetEstopSystemStatusRequest::clear_header() {
  if (GetArena() == nullptr && header_ != nullptr) {
    delete header_;
  }
  header_ = nullptr;
}
GetEstopSystemStatusRequest::GetEstopSystemStatusRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:bosdyn.api.GetEstopSystemStatusRequest)
}
GetEstopSystemStatusRequest::GetEstopSystemStatusRequest(const GetEstopSystemStatusRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_header()) {
    header_ = new ::bosdyn::api::RequestHeader(*from.header_);
  } else {
    header_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:bosdyn.api.GetEstopSystemStatusRequest)
}

void GetEstopSystemStatusRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GetEstopSystemStatusRequest_bosdyn_2fapi_2festop_2eproto.base);
  header_ = nullptr;
}

GetEstopSystemStatusRequest::~GetEstopSystemStatusRequest() {
  // @@protoc_insertion_point(destructor:bosdyn.api.GetEstopSystemStatusRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetEstopSystemStatusRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete header_;
}

void GetEstopSystemStatusRequest::ArenaDtor(void* object) {
  GetEstopSystemStatusRequest* _this = reinterpret_cast< GetEstopSystemStatusRequest* >(object);
  (void)_this;
}
void GetEstopSystemStatusRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetEstopSystemStatusRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetEstopSystemStatusRequest& GetEstopSystemStatusRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetEstopSystemStatusRequest_bosdyn_2fapi_2festop_2eproto.base);
  return *internal_default_instance();
}


void GetEstopSystemStatusRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:bosdyn.api.GetEstopSystemStatusRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && header_ != nullptr) {
    delete header_;
  }
  header_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetEstopSystemStatusRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .bosdyn.api.RequestHeader header = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_header(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetEstopSystemStatusRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:bosdyn.api.GetEstopSystemStatusRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .bosdyn.api.RequestHeader header = 1;
  if (this->has_header()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::header(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:bosdyn.api.GetEstopSystemStatusRequest)
  return target;
}

size_t GetEstopSystemStatusRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bosdyn.api.GetEstopSystemStatusRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .bosdyn.api.RequestHeader header = 1;
  if (this->has_header()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *header_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetEstopSystemStatusRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bosdyn.api.GetEstopSystemStatusRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetEstopSystemStatusRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetEstopSystemStatusRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bosdyn.api.GetEstopSystemStatusRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bosdyn.api.GetEstopSystemStatusRequest)
    MergeFrom(*source);
  }
}

void GetEstopSystemStatusRequest::MergeFrom(const GetEstopSystemStatusRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bosdyn.api.GetEstopSystemStatusRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_header()) {
    _internal_mutable_header()->::bosdyn::api::RequestHeader::MergeFrom(from._internal_header());
  }
}

void GetEstopSystemStatusRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bosdyn.api.GetEstopSystemStatusRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetEstopSystemStatusRequest::CopyFrom(const GetEstopSystemStatusRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bosdyn.api.GetEstopSystemStatusRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetEstopSystemStatusRequest::IsInitialized() const {
  return true;
}

void GetEstopSystemStatusRequest::InternalSwap(GetEstopSystemStatusRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(header_, other->header_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetEstopSystemStatusRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GetEstopSystemStatusResponse::InitAsDefaultInstance() {
  ::bosdyn::api::_GetEstopSystemStatusResponse_default_instance_._instance.get_mutable()->header_ = const_cast< ::bosdyn::api::ResponseHeader*>(
      ::bosdyn::api::ResponseHeader::internal_default_instance());
  ::bosdyn::api::_GetEstopSystemStatusResponse_default_instance_._instance.get_mutable()->status_ = const_cast< ::bosdyn::api::EstopSystemStatus*>(
      ::bosdyn::api::EstopSystemStatus::internal_default_instance());
}
class GetEstopSystemStatusResponse::_Internal {
 public:
  static const ::bosdyn::api::ResponseHeader& header(const GetEstopSystemStatusResponse* msg);
  static const ::bosdyn::api::EstopSystemStatus& status(const GetEstopSystemStatusResponse* msg);
};

const ::bosdyn::api::ResponseHeader&
GetEstopSystemStatusResponse::_Internal::header(const GetEstopSystemStatusResponse* msg) {
  return *msg->header_;
}
const ::bosdyn::api::EstopSystemStatus&
GetEstopSystemStatusResponse::_Internal::status(const GetEstopSystemStatusResponse* msg) {
  return *msg->status_;
}
void GetEstopSystemStatusResponse::clear_header() {
  if (GetArena() == nullptr && header_ != nullptr) {
    delete header_;
  }
  header_ = nullptr;
}
GetEstopSystemStatusResponse::GetEstopSystemStatusResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:bosdyn.api.GetEstopSystemStatusResponse)
}
GetEstopSystemStatusResponse::GetEstopSystemStatusResponse(const GetEstopSystemStatusResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_header()) {
    header_ = new ::bosdyn::api::ResponseHeader(*from.header_);
  } else {
    header_ = nullptr;
  }
  if (from._internal_has_status()) {
    status_ = new ::bosdyn::api::EstopSystemStatus(*from.status_);
  } else {
    status_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:bosdyn.api.GetEstopSystemStatusResponse)
}

void GetEstopSystemStatusResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GetEstopSystemStatusResponse_bosdyn_2fapi_2festop_2eproto.base);
  ::memset(&header_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&status_) -
      reinterpret_cast<char*>(&header_)) + sizeof(status_));
}

GetEstopSystemStatusResponse::~GetEstopSystemStatusResponse() {
  // @@protoc_insertion_point(destructor:bosdyn.api.GetEstopSystemStatusResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetEstopSystemStatusResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete header_;
  if (this != internal_default_instance()) delete status_;
}

void GetEstopSystemStatusResponse::ArenaDtor(void* object) {
  GetEstopSystemStatusResponse* _this = reinterpret_cast< GetEstopSystemStatusResponse* >(object);
  (void)_this;
}
void GetEstopSystemStatusResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetEstopSystemStatusResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetEstopSystemStatusResponse& GetEstopSystemStatusResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetEstopSystemStatusResponse_bosdyn_2fapi_2festop_2eproto.base);
  return *internal_default_instance();
}


void GetEstopSystemStatusResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:bosdyn.api.GetEstopSystemStatusResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && header_ != nullptr) {
    delete header_;
  }
  header_ = nullptr;
  if (GetArena() == nullptr && status_ != nullptr) {
    delete status_;
  }
  status_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetEstopSystemStatusResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .bosdyn.api.ResponseHeader header = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_header(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .bosdyn.api.EstopSystemStatus status = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_status(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetEstopSystemStatusResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:bosdyn.api.GetEstopSystemStatusResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .bosdyn.api.ResponseHeader header = 1;
  if (this->has_header()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::header(this), target, stream);
  }

  // .bosdyn.api.EstopSystemStatus status = 3;
  if (this->has_status()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::status(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:bosdyn.api.GetEstopSystemStatusResponse)
  return target;
}

size_t GetEstopSystemStatusResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bosdyn.api.GetEstopSystemStatusResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .bosdyn.api.ResponseHeader header = 1;
  if (this->has_header()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *header_);
  }

  // .bosdyn.api.EstopSystemStatus status = 3;
  if (this->has_status()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *status_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetEstopSystemStatusResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bosdyn.api.GetEstopSystemStatusResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const GetEstopSystemStatusResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetEstopSystemStatusResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bosdyn.api.GetEstopSystemStatusResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bosdyn.api.GetEstopSystemStatusResponse)
    MergeFrom(*source);
  }
}

void GetEstopSystemStatusResponse::MergeFrom(const GetEstopSystemStatusResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bosdyn.api.GetEstopSystemStatusResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_header()) {
    _internal_mutable_header()->::bosdyn::api::ResponseHeader::MergeFrom(from._internal_header());
  }
  if (from.has_status()) {
    _internal_mutable_status()->::bosdyn::api::EstopSystemStatus::MergeFrom(from._internal_status());
  }
}

void GetEstopSystemStatusResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bosdyn.api.GetEstopSystemStatusResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetEstopSystemStatusResponse::CopyFrom(const GetEstopSystemStatusResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bosdyn.api.GetEstopSystemStatusResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetEstopSystemStatusResponse::IsInitialized() const {
  return true;
}

void GetEstopSystemStatusResponse::InternalSwap(GetEstopSystemStatusResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GetEstopSystemStatusResponse, status_)
      + sizeof(GetEstopSystemStatusResponse::status_)
      - PROTOBUF_FIELD_OFFSET(GetEstopSystemStatusResponse, header_)>(
          reinterpret_cast<char*>(&header_),
          reinterpret_cast<char*>(&other->header_));
}

::PROTOBUF_NAMESPACE_ID::Metadata GetEstopSystemStatusResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace api
}  // namespace bosdyn
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::bosdyn::api::EstopEndpoint* Arena::CreateMaybeMessage< ::bosdyn::api::EstopEndpoint >(Arena* arena) {
  return Arena::CreateMessageInternal< ::bosdyn::api::EstopEndpoint >(arena);
}
template<> PROTOBUF_NOINLINE ::bosdyn::api::EstopConfig* Arena::CreateMaybeMessage< ::bosdyn::api::EstopConfig >(Arena* arena) {
  return Arena::CreateMessageInternal< ::bosdyn::api::EstopConfig >(arena);
}
template<> PROTOBUF_NOINLINE ::bosdyn::api::EstopEndpointWithStatus* Arena::CreateMaybeMessage< ::bosdyn::api::EstopEndpointWithStatus >(Arena* arena) {
  return Arena::CreateMessageInternal< ::bosdyn::api::EstopEndpointWithStatus >(arena);
}
template<> PROTOBUF_NOINLINE ::bosdyn::api::EstopSystemStatus* Arena::CreateMaybeMessage< ::bosdyn::api::EstopSystemStatus >(Arena* arena) {
  return Arena::CreateMessageInternal< ::bosdyn::api::EstopSystemStatus >(arena);
}
template<> PROTOBUF_NOINLINE ::bosdyn::api::EstopCheckInRequest* Arena::CreateMaybeMessage< ::bosdyn::api::EstopCheckInRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::bosdyn::api::EstopCheckInRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::bosdyn::api::EstopCheckInResponse* Arena::CreateMaybeMessage< ::bosdyn::api::EstopCheckInResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::bosdyn::api::EstopCheckInResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::bosdyn::api::RegisterEstopEndpointRequest* Arena::CreateMaybeMessage< ::bosdyn::api::RegisterEstopEndpointRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::bosdyn::api::RegisterEstopEndpointRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::bosdyn::api::RegisterEstopEndpointResponse* Arena::CreateMaybeMessage< ::bosdyn::api::RegisterEstopEndpointResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::bosdyn::api::RegisterEstopEndpointResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::bosdyn::api::DeregisterEstopEndpointRequest* Arena::CreateMaybeMessage< ::bosdyn::api::DeregisterEstopEndpointRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::bosdyn::api::DeregisterEstopEndpointRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::bosdyn::api::DeregisterEstopEndpointResponse* Arena::CreateMaybeMessage< ::bosdyn::api::DeregisterEstopEndpointResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::bosdyn::api::DeregisterEstopEndpointResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::bosdyn::api::GetEstopConfigRequest* Arena::CreateMaybeMessage< ::bosdyn::api::GetEstopConfigRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::bosdyn::api::GetEstopConfigRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::bosdyn::api::GetEstopConfigResponse* Arena::CreateMaybeMessage< ::bosdyn::api::GetEstopConfigResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::bosdyn::api::GetEstopConfigResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::bosdyn::api::SetEstopConfigRequest* Arena::CreateMaybeMessage< ::bosdyn::api::SetEstopConfigRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::bosdyn::api::SetEstopConfigRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::bosdyn::api::SetEstopConfigResponse* Arena::CreateMaybeMessage< ::bosdyn::api::SetEstopConfigResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::bosdyn::api::SetEstopConfigResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::bosdyn::api::GetEstopSystemStatusRequest* Arena::CreateMaybeMessage< ::bosdyn::api::GetEstopSystemStatusRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::bosdyn::api::GetEstopSystemStatusRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::bosdyn::api::GetEstopSystemStatusResponse* Arena::CreateMaybeMessage< ::bosdyn::api::GetEstopSystemStatusResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::bosdyn::api::GetEstopSystemStatusResponse >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
