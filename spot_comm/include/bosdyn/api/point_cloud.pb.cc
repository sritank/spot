// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: bosdyn/api/point_cloud.proto

#include "bosdyn/api/point_cloud.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_bosdyn_2fapi_2fgeometry_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_FrameTreeSnapshot_bosdyn_2fapi_2fgeometry_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_bosdyn_2fapi_2fpoint_5fcloud_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_PointCloud_bosdyn_2fapi_2fpoint_5fcloud_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_bosdyn_2fapi_2fpoint_5fcloud_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_PointCloud_EncodingParameters_bosdyn_2fapi_2fpoint_5fcloud_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_bosdyn_2fapi_2fpoint_5fcloud_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_PointCloudSource_bosdyn_2fapi_2fpoint_5fcloud_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_bosdyn_2fapi_2fheader_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_RequestHeader_bosdyn_2fapi_2fheader_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_bosdyn_2fapi_2fheader_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<4> scc_info_ResponseHeader_bosdyn_2fapi_2fheader_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2fprotobuf_2ftimestamp_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Timestamp_google_2fprotobuf_2ftimestamp_2eproto;
namespace bosdyn {
namespace api {
class PointCloudSourceDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<PointCloudSource> _instance;
} _PointCloudSource_default_instance_;
class PointCloud_EncodingParametersDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<PointCloud_EncodingParameters> _instance;
} _PointCloud_EncodingParameters_default_instance_;
class PointCloudDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<PointCloud> _instance;
} _PointCloud_default_instance_;
class GetPointCloudRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetPointCloudRequest> _instance;
} _GetPointCloudRequest_default_instance_;
class GetPointCloudResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetPointCloudResponse> _instance;
} _GetPointCloudResponse_default_instance_;
}  // namespace api
}  // namespace bosdyn
static void InitDefaultsscc_info_GetPointCloudRequest_bosdyn_2fapi_2fpoint_5fcloud_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::bosdyn::api::_GetPointCloudRequest_default_instance_;
    new (ptr) ::bosdyn::api::GetPointCloudRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::bosdyn::api::GetPointCloudRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_GetPointCloudRequest_bosdyn_2fapi_2fpoint_5fcloud_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_GetPointCloudRequest_bosdyn_2fapi_2fpoint_5fcloud_2eproto}, {
      &scc_info_RequestHeader_bosdyn_2fapi_2fheader_2eproto.base,}};

static void InitDefaultsscc_info_GetPointCloudResponse_bosdyn_2fapi_2fpoint_5fcloud_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::bosdyn::api::_GetPointCloudResponse_default_instance_;
    new (ptr) ::bosdyn::api::GetPointCloudResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::bosdyn::api::GetPointCloudResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_GetPointCloudResponse_bosdyn_2fapi_2fpoint_5fcloud_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, 0, InitDefaultsscc_info_GetPointCloudResponse_bosdyn_2fapi_2fpoint_5fcloud_2eproto}, {
      &scc_info_ResponseHeader_bosdyn_2fapi_2fheader_2eproto.base,
      &scc_info_PointCloud_bosdyn_2fapi_2fpoint_5fcloud_2eproto.base,}};

static void InitDefaultsscc_info_PointCloud_bosdyn_2fapi_2fpoint_5fcloud_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::bosdyn::api::_PointCloud_default_instance_;
    new (ptr) ::bosdyn::api::PointCloud();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::bosdyn::api::PointCloud::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_PointCloud_bosdyn_2fapi_2fpoint_5fcloud_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, 0, InitDefaultsscc_info_PointCloud_bosdyn_2fapi_2fpoint_5fcloud_2eproto}, {
      &scc_info_PointCloudSource_bosdyn_2fapi_2fpoint_5fcloud_2eproto.base,
      &scc_info_PointCloud_EncodingParameters_bosdyn_2fapi_2fpoint_5fcloud_2eproto.base,}};

static void InitDefaultsscc_info_PointCloud_EncodingParameters_bosdyn_2fapi_2fpoint_5fcloud_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::bosdyn::api::_PointCloud_EncodingParameters_default_instance_;
    new (ptr) ::bosdyn::api::PointCloud_EncodingParameters();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::bosdyn::api::PointCloud_EncodingParameters::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_PointCloud_EncodingParameters_bosdyn_2fapi_2fpoint_5fcloud_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_PointCloud_EncodingParameters_bosdyn_2fapi_2fpoint_5fcloud_2eproto}, {}};

static void InitDefaultsscc_info_PointCloudSource_bosdyn_2fapi_2fpoint_5fcloud_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::bosdyn::api::_PointCloudSource_default_instance_;
    new (ptr) ::bosdyn::api::PointCloudSource();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::bosdyn::api::PointCloudSource::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_PointCloudSource_bosdyn_2fapi_2fpoint_5fcloud_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, 0, InitDefaultsscc_info_PointCloudSource_bosdyn_2fapi_2fpoint_5fcloud_2eproto}, {
      &scc_info_Timestamp_google_2fprotobuf_2ftimestamp_2eproto.base,
      &scc_info_FrameTreeSnapshot_bosdyn_2fapi_2fgeometry_2eproto.base,}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_bosdyn_2fapi_2fpoint_5fcloud_2eproto[5];
static const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* file_level_enum_descriptors_bosdyn_2fapi_2fpoint_5fcloud_2eproto[2];
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_bosdyn_2fapi_2fpoint_5fcloud_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_bosdyn_2fapi_2fpoint_5fcloud_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::bosdyn::api::PointCloudSource, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::bosdyn::api::PointCloudSource, name_),
  PROTOBUF_FIELD_OFFSET(::bosdyn::api::PointCloudSource, frame_name_sensor_),
  PROTOBUF_FIELD_OFFSET(::bosdyn::api::PointCloudSource, acquisition_time_),
  PROTOBUF_FIELD_OFFSET(::bosdyn::api::PointCloudSource, transforms_snapshot_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::bosdyn::api::PointCloud_EncodingParameters, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::bosdyn::api::PointCloud_EncodingParameters, scale_factor_),
  PROTOBUF_FIELD_OFFSET(::bosdyn::api::PointCloud_EncodingParameters, max_x_),
  PROTOBUF_FIELD_OFFSET(::bosdyn::api::PointCloud_EncodingParameters, max_y_),
  PROTOBUF_FIELD_OFFSET(::bosdyn::api::PointCloud_EncodingParameters, max_z_),
  PROTOBUF_FIELD_OFFSET(::bosdyn::api::PointCloud_EncodingParameters, remapping_constant_),
  PROTOBUF_FIELD_OFFSET(::bosdyn::api::PointCloud_EncodingParameters, bytes_per_point_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::bosdyn::api::PointCloud, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::bosdyn::api::PointCloud, source_),
  PROTOBUF_FIELD_OFFSET(::bosdyn::api::PointCloud, num_points_),
  PROTOBUF_FIELD_OFFSET(::bosdyn::api::PointCloud, encoding_),
  PROTOBUF_FIELD_OFFSET(::bosdyn::api::PointCloud, encoding_parameters_),
  PROTOBUF_FIELD_OFFSET(::bosdyn::api::PointCloud, data_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::bosdyn::api::GetPointCloudRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::bosdyn::api::GetPointCloudRequest, header_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::bosdyn::api::GetPointCloudResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::bosdyn::api::GetPointCloudResponse, header_),
  PROTOBUF_FIELD_OFFSET(::bosdyn::api::GetPointCloudResponse, status_),
  PROTOBUF_FIELD_OFFSET(::bosdyn::api::GetPointCloudResponse, point_cloud_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::bosdyn::api::PointCloudSource)},
  { 9, -1, sizeof(::bosdyn::api::PointCloud_EncodingParameters)},
  { 20, -1, sizeof(::bosdyn::api::PointCloud)},
  { 30, -1, sizeof(::bosdyn::api::GetPointCloudRequest)},
  { 36, -1, sizeof(::bosdyn::api::GetPointCloudResponse)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::bosdyn::api::_PointCloudSource_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::bosdyn::api::_PointCloud_EncodingParameters_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::bosdyn::api::_PointCloud_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::bosdyn::api::_GetPointCloudRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::bosdyn::api::_GetPointCloudResponse_default_instance_),
};

const char descriptor_table_protodef_bosdyn_2fapi_2fpoint_5fcloud_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\034bosdyn/api/point_cloud.proto\022\nbosdyn.a"
  "pi\032\027bosdyn/api/header.proto\032\031bosdyn/api/"
  "geometry.proto\032\037google/protobuf/timestam"
  "p.proto\"\263\001\n\020PointCloudSource\022\014\n\004name\030\001 \001"
  "(\t\022\031\n\021frame_name_sensor\030\003 \001(\t\0224\n\020acquisi"
  "tion_time\030\036 \001(\0132\032.google.protobuf.Timest"
  "amp\022:\n\023transforms_snapshot\030\037 \001(\0132\035.bosdy"
  "n.api.FrameTreeSnapshotJ\004\010\002\020\003\"\326\003\n\nPointC"
  "loud\022,\n\006source\030\001 \001(\0132\034.bosdyn.api.PointC"
  "loudSource\022\022\n\nnum_points\030\002 \001(\005\0221\n\010encodi"
  "ng\030\003 \001(\0162\037.bosdyn.api.PointCloud.Encodin"
  "g\022F\n\023encoding_parameters\030\004 \001(\0132).bosdyn."
  "api.PointCloud.EncodingParameters\022\014\n\004dat"
  "a\030\005 \001(\014\032\214\001\n\022EncodingParameters\022\024\n\014scale_"
  "factor\030\001 \001(\005\022\r\n\005max_x\030\002 \001(\001\022\r\n\005max_y\030\003 \001"
  "(\001\022\r\n\005max_z\030\004 \001(\001\022\032\n\022remapping_constant\030"
  "\005 \001(\001\022\027\n\017bytes_per_point\030\006 \001(\005\"b\n\010Encodi"
  "ng\022\024\n\020ENCODING_UNKNOWN\020\000\022\024\n\020ENCODING_XYZ"
  "_32F\020\001\022\024\n\020ENCODING_XYZ_4SC\020\002\022\024\n\020ENCODING"
  "_XYZ_5SC\020\003J\004\010\010\020\tJ\004\010\t\020\n\"A\n\024GetPointCloudR"
  "equest\022)\n\006header\030\001 \001(\0132\031.bosdyn.api.Requ"
  "estHeader\"\230\002\n\025GetPointCloudResponse\022*\n\006h"
  "eader\030\001 \001(\0132\032.bosdyn.api.ResponseHeader\022"
  "8\n\006status\030\002 \001(\0162(.bosdyn.api.GetPointClo"
  "udResponse.Status\022+\n\013point_cloud\030\003 \001(\0132\026"
  ".bosdyn.api.PointCloud\"l\n\006Status\022\022\n\016STAT"
  "US_UNKNOWN\020\000\022\r\n\tSTATUS_OK\020\001\022\034\n\030STATUS_SO"
  "URCE_DATA_ERROR\020\002\022!\n\035STATUS_POINT_CLOUD_"
  "DATA_ERROR\020\003B\021B\017PointCloudProtob\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_bosdyn_2fapi_2fpoint_5fcloud_2eproto_deps[3] = {
  &::descriptor_table_bosdyn_2fapi_2fgeometry_2eproto,
  &::descriptor_table_bosdyn_2fapi_2fheader_2eproto,
  &::descriptor_table_google_2fprotobuf_2ftimestamp_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_bosdyn_2fapi_2fpoint_5fcloud_2eproto_sccs[5] = {
  &scc_info_GetPointCloudRequest_bosdyn_2fapi_2fpoint_5fcloud_2eproto.base,
  &scc_info_GetPointCloudResponse_bosdyn_2fapi_2fpoint_5fcloud_2eproto.base,
  &scc_info_PointCloud_bosdyn_2fapi_2fpoint_5fcloud_2eproto.base,
  &scc_info_PointCloud_EncodingParameters_bosdyn_2fapi_2fpoint_5fcloud_2eproto.base,
  &scc_info_PointCloudSource_bosdyn_2fapi_2fpoint_5fcloud_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_bosdyn_2fapi_2fpoint_5fcloud_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_bosdyn_2fapi_2fpoint_5fcloud_2eproto = {
  false, false, descriptor_table_protodef_bosdyn_2fapi_2fpoint_5fcloud_2eproto, "bosdyn/api/point_cloud.proto", 1159,
  &descriptor_table_bosdyn_2fapi_2fpoint_5fcloud_2eproto_once, descriptor_table_bosdyn_2fapi_2fpoint_5fcloud_2eproto_sccs, descriptor_table_bosdyn_2fapi_2fpoint_5fcloud_2eproto_deps, 5, 3,
  schemas, file_default_instances, TableStruct_bosdyn_2fapi_2fpoint_5fcloud_2eproto::offsets,
  file_level_metadata_bosdyn_2fapi_2fpoint_5fcloud_2eproto, 5, file_level_enum_descriptors_bosdyn_2fapi_2fpoint_5fcloud_2eproto, file_level_service_descriptors_bosdyn_2fapi_2fpoint_5fcloud_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_bosdyn_2fapi_2fpoint_5fcloud_2eproto = (static_cast<void>(::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_bosdyn_2fapi_2fpoint_5fcloud_2eproto)), true);
namespace bosdyn {
namespace api {
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* PointCloud_Encoding_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_bosdyn_2fapi_2fpoint_5fcloud_2eproto);
  return file_level_enum_descriptors_bosdyn_2fapi_2fpoint_5fcloud_2eproto[0];
}
bool PointCloud_Encoding_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr PointCloud_Encoding PointCloud::ENCODING_UNKNOWN;
constexpr PointCloud_Encoding PointCloud::ENCODING_XYZ_32F;
constexpr PointCloud_Encoding PointCloud::ENCODING_XYZ_4SC;
constexpr PointCloud_Encoding PointCloud::ENCODING_XYZ_5SC;
constexpr PointCloud_Encoding PointCloud::Encoding_MIN;
constexpr PointCloud_Encoding PointCloud::Encoding_MAX;
constexpr int PointCloud::Encoding_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* GetPointCloudResponse_Status_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_bosdyn_2fapi_2fpoint_5fcloud_2eproto);
  return file_level_enum_descriptors_bosdyn_2fapi_2fpoint_5fcloud_2eproto[1];
}
bool GetPointCloudResponse_Status_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr GetPointCloudResponse_Status GetPointCloudResponse::STATUS_UNKNOWN;
constexpr GetPointCloudResponse_Status GetPointCloudResponse::STATUS_OK;
constexpr GetPointCloudResponse_Status GetPointCloudResponse::STATUS_SOURCE_DATA_ERROR;
constexpr GetPointCloudResponse_Status GetPointCloudResponse::STATUS_POINT_CLOUD_DATA_ERROR;
constexpr GetPointCloudResponse_Status GetPointCloudResponse::Status_MIN;
constexpr GetPointCloudResponse_Status GetPointCloudResponse::Status_MAX;
constexpr int GetPointCloudResponse::Status_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)

// ===================================================================

void PointCloudSource::InitAsDefaultInstance() {
  ::bosdyn::api::_PointCloudSource_default_instance_._instance.get_mutable()->acquisition_time_ = const_cast< PROTOBUF_NAMESPACE_ID::Timestamp*>(
      PROTOBUF_NAMESPACE_ID::Timestamp::internal_default_instance());
  ::bosdyn::api::_PointCloudSource_default_instance_._instance.get_mutable()->transforms_snapshot_ = const_cast< ::bosdyn::api::FrameTreeSnapshot*>(
      ::bosdyn::api::FrameTreeSnapshot::internal_default_instance());
}
class PointCloudSource::_Internal {
 public:
  static const PROTOBUF_NAMESPACE_ID::Timestamp& acquisition_time(const PointCloudSource* msg);
  static const ::bosdyn::api::FrameTreeSnapshot& transforms_snapshot(const PointCloudSource* msg);
};

const PROTOBUF_NAMESPACE_ID::Timestamp&
PointCloudSource::_Internal::acquisition_time(const PointCloudSource* msg) {
  return *msg->acquisition_time_;
}
const ::bosdyn::api::FrameTreeSnapshot&
PointCloudSource::_Internal::transforms_snapshot(const PointCloudSource* msg) {
  return *msg->transforms_snapshot_;
}
void PointCloudSource::clear_acquisition_time() {
  if (GetArena() == nullptr && acquisition_time_ != nullptr) {
    delete acquisition_time_;
  }
  acquisition_time_ = nullptr;
}
void PointCloudSource::clear_transforms_snapshot() {
  if (GetArena() == nullptr && transforms_snapshot_ != nullptr) {
    delete transforms_snapshot_;
  }
  transforms_snapshot_ = nullptr;
}
PointCloudSource::PointCloudSource(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:bosdyn.api.PointCloudSource)
}
PointCloudSource::PointCloudSource(const PointCloudSource& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_name().empty()) {
    name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_name(),
      GetArena());
  }
  frame_name_sensor_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_frame_name_sensor().empty()) {
    frame_name_sensor_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_frame_name_sensor(),
      GetArena());
  }
  if (from._internal_has_acquisition_time()) {
    acquisition_time_ = new PROTOBUF_NAMESPACE_ID::Timestamp(*from.acquisition_time_);
  } else {
    acquisition_time_ = nullptr;
  }
  if (from._internal_has_transforms_snapshot()) {
    transforms_snapshot_ = new ::bosdyn::api::FrameTreeSnapshot(*from.transforms_snapshot_);
  } else {
    transforms_snapshot_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:bosdyn.api.PointCloudSource)
}

void PointCloudSource::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_PointCloudSource_bosdyn_2fapi_2fpoint_5fcloud_2eproto.base);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  frame_name_sensor_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&acquisition_time_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&transforms_snapshot_) -
      reinterpret_cast<char*>(&acquisition_time_)) + sizeof(transforms_snapshot_));
}

PointCloudSource::~PointCloudSource() {
  // @@protoc_insertion_point(destructor:bosdyn.api.PointCloudSource)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void PointCloudSource::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  frame_name_sensor_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete acquisition_time_;
  if (this != internal_default_instance()) delete transforms_snapshot_;
}

void PointCloudSource::ArenaDtor(void* object) {
  PointCloudSource* _this = reinterpret_cast< PointCloudSource* >(object);
  (void)_this;
}
void PointCloudSource::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PointCloudSource::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const PointCloudSource& PointCloudSource::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_PointCloudSource_bosdyn_2fapi_2fpoint_5fcloud_2eproto.base);
  return *internal_default_instance();
}


void PointCloudSource::Clear() {
// @@protoc_insertion_point(message_clear_start:bosdyn.api.PointCloudSource)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  frame_name_sensor_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  if (GetArena() == nullptr && acquisition_time_ != nullptr) {
    delete acquisition_time_;
  }
  acquisition_time_ = nullptr;
  if (GetArena() == nullptr && transforms_snapshot_ != nullptr) {
    delete transforms_snapshot_;
  }
  transforms_snapshot_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PointCloudSource::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "bosdyn.api.PointCloudSource.name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string frame_name_sensor = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_frame_name_sensor();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "bosdyn.api.PointCloudSource.frame_name_sensor"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .google.protobuf.Timestamp acquisition_time = 30;
      case 30:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 242)) {
          ptr = ctx->ParseMessage(_internal_mutable_acquisition_time(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .bosdyn.api.FrameTreeSnapshot transforms_snapshot = 31;
      case 31:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 250)) {
          ptr = ctx->ParseMessage(_internal_mutable_transforms_snapshot(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* PointCloudSource::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:bosdyn.api.PointCloudSource)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "bosdyn.api.PointCloudSource.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  // string frame_name_sensor = 3;
  if (this->frame_name_sensor().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_frame_name_sensor().data(), static_cast<int>(this->_internal_frame_name_sensor().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "bosdyn.api.PointCloudSource.frame_name_sensor");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_frame_name_sensor(), target);
  }

  // .google.protobuf.Timestamp acquisition_time = 30;
  if (this->has_acquisition_time()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        30, _Internal::acquisition_time(this), target, stream);
  }

  // .bosdyn.api.FrameTreeSnapshot transforms_snapshot = 31;
  if (this->has_transforms_snapshot()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        31, _Internal::transforms_snapshot(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:bosdyn.api.PointCloudSource)
  return target;
}

size_t PointCloudSource::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bosdyn.api.PointCloudSource)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // string frame_name_sensor = 3;
  if (this->frame_name_sensor().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_frame_name_sensor());
  }

  // .google.protobuf.Timestamp acquisition_time = 30;
  if (this->has_acquisition_time()) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *acquisition_time_);
  }

  // .bosdyn.api.FrameTreeSnapshot transforms_snapshot = 31;
  if (this->has_transforms_snapshot()) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *transforms_snapshot_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PointCloudSource::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bosdyn.api.PointCloudSource)
  GOOGLE_DCHECK_NE(&from, this);
  const PointCloudSource* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<PointCloudSource>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bosdyn.api.PointCloudSource)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bosdyn.api.PointCloudSource)
    MergeFrom(*source);
  }
}

void PointCloudSource::MergeFrom(const PointCloudSource& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bosdyn.api.PointCloudSource)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {
    _internal_set_name(from._internal_name());
  }
  if (from.frame_name_sensor().size() > 0) {
    _internal_set_frame_name_sensor(from._internal_frame_name_sensor());
  }
  if (from.has_acquisition_time()) {
    _internal_mutable_acquisition_time()->PROTOBUF_NAMESPACE_ID::Timestamp::MergeFrom(from._internal_acquisition_time());
  }
  if (from.has_transforms_snapshot()) {
    _internal_mutable_transforms_snapshot()->::bosdyn::api::FrameTreeSnapshot::MergeFrom(from._internal_transforms_snapshot());
  }
}

void PointCloudSource::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bosdyn.api.PointCloudSource)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PointCloudSource::CopyFrom(const PointCloudSource& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bosdyn.api.PointCloudSource)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PointCloudSource::IsInitialized() const {
  return true;
}

void PointCloudSource::InternalSwap(PointCloudSource* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  name_.Swap(&other->name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  frame_name_sensor_.Swap(&other->frame_name_sensor_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PointCloudSource, transforms_snapshot_)
      + sizeof(PointCloudSource::transforms_snapshot_)
      - PROTOBUF_FIELD_OFFSET(PointCloudSource, acquisition_time_)>(
          reinterpret_cast<char*>(&acquisition_time_),
          reinterpret_cast<char*>(&other->acquisition_time_));
}

::PROTOBUF_NAMESPACE_ID::Metadata PointCloudSource::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void PointCloud_EncodingParameters::InitAsDefaultInstance() {
}
class PointCloud_EncodingParameters::_Internal {
 public:
};

PointCloud_EncodingParameters::PointCloud_EncodingParameters(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:bosdyn.api.PointCloud.EncodingParameters)
}
PointCloud_EncodingParameters::PointCloud_EncodingParameters(const PointCloud_EncodingParameters& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&max_x_, &from.max_x_,
    static_cast<size_t>(reinterpret_cast<char*>(&remapping_constant_) -
    reinterpret_cast<char*>(&max_x_)) + sizeof(remapping_constant_));
  // @@protoc_insertion_point(copy_constructor:bosdyn.api.PointCloud.EncodingParameters)
}

void PointCloud_EncodingParameters::SharedCtor() {
  ::memset(&max_x_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&remapping_constant_) -
      reinterpret_cast<char*>(&max_x_)) + sizeof(remapping_constant_));
}

PointCloud_EncodingParameters::~PointCloud_EncodingParameters() {
  // @@protoc_insertion_point(destructor:bosdyn.api.PointCloud.EncodingParameters)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void PointCloud_EncodingParameters::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void PointCloud_EncodingParameters::ArenaDtor(void* object) {
  PointCloud_EncodingParameters* _this = reinterpret_cast< PointCloud_EncodingParameters* >(object);
  (void)_this;
}
void PointCloud_EncodingParameters::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PointCloud_EncodingParameters::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const PointCloud_EncodingParameters& PointCloud_EncodingParameters::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_PointCloud_EncodingParameters_bosdyn_2fapi_2fpoint_5fcloud_2eproto.base);
  return *internal_default_instance();
}


void PointCloud_EncodingParameters::Clear() {
// @@protoc_insertion_point(message_clear_start:bosdyn.api.PointCloud.EncodingParameters)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&max_x_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&remapping_constant_) -
      reinterpret_cast<char*>(&max_x_)) + sizeof(remapping_constant_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PointCloud_EncodingParameters::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 scale_factor = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          scale_factor_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // double max_x = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 17)) {
          max_x_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else goto handle_unusual;
        continue;
      // double max_y = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 25)) {
          max_y_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else goto handle_unusual;
        continue;
      // double max_z = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 33)) {
          max_z_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else goto handle_unusual;
        continue;
      // double remapping_constant = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 41)) {
          remapping_constant_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else goto handle_unusual;
        continue;
      // int32 bytes_per_point = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 48)) {
          bytes_per_point_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* PointCloud_EncodingParameters::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:bosdyn.api.PointCloud.EncodingParameters)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 scale_factor = 1;
  if (this->scale_factor() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_scale_factor(), target);
  }

  // double max_x = 2;
  if (!(this->max_x() <= 0 && this->max_x() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(2, this->_internal_max_x(), target);
  }

  // double max_y = 3;
  if (!(this->max_y() <= 0 && this->max_y() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(3, this->_internal_max_y(), target);
  }

  // double max_z = 4;
  if (!(this->max_z() <= 0 && this->max_z() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(4, this->_internal_max_z(), target);
  }

  // double remapping_constant = 5;
  if (!(this->remapping_constant() <= 0 && this->remapping_constant() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(5, this->_internal_remapping_constant(), target);
  }

  // int32 bytes_per_point = 6;
  if (this->bytes_per_point() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(6, this->_internal_bytes_per_point(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:bosdyn.api.PointCloud.EncodingParameters)
  return target;
}

size_t PointCloud_EncodingParameters::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bosdyn.api.PointCloud.EncodingParameters)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // double max_x = 2;
  if (!(this->max_x() <= 0 && this->max_x() >= 0)) {
    total_size += 1 + 8;
  }

  // double max_y = 3;
  if (!(this->max_y() <= 0 && this->max_y() >= 0)) {
    total_size += 1 + 8;
  }

  // int32 scale_factor = 1;
  if (this->scale_factor() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_scale_factor());
  }

  // int32 bytes_per_point = 6;
  if (this->bytes_per_point() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_bytes_per_point());
  }

  // double max_z = 4;
  if (!(this->max_z() <= 0 && this->max_z() >= 0)) {
    total_size += 1 + 8;
  }

  // double remapping_constant = 5;
  if (!(this->remapping_constant() <= 0 && this->remapping_constant() >= 0)) {
    total_size += 1 + 8;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PointCloud_EncodingParameters::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bosdyn.api.PointCloud.EncodingParameters)
  GOOGLE_DCHECK_NE(&from, this);
  const PointCloud_EncodingParameters* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<PointCloud_EncodingParameters>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bosdyn.api.PointCloud.EncodingParameters)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bosdyn.api.PointCloud.EncodingParameters)
    MergeFrom(*source);
  }
}

void PointCloud_EncodingParameters::MergeFrom(const PointCloud_EncodingParameters& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bosdyn.api.PointCloud.EncodingParameters)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (!(from.max_x() <= 0 && from.max_x() >= 0)) {
    _internal_set_max_x(from._internal_max_x());
  }
  if (!(from.max_y() <= 0 && from.max_y() >= 0)) {
    _internal_set_max_y(from._internal_max_y());
  }
  if (from.scale_factor() != 0) {
    _internal_set_scale_factor(from._internal_scale_factor());
  }
  if (from.bytes_per_point() != 0) {
    _internal_set_bytes_per_point(from._internal_bytes_per_point());
  }
  if (!(from.max_z() <= 0 && from.max_z() >= 0)) {
    _internal_set_max_z(from._internal_max_z());
  }
  if (!(from.remapping_constant() <= 0 && from.remapping_constant() >= 0)) {
    _internal_set_remapping_constant(from._internal_remapping_constant());
  }
}

void PointCloud_EncodingParameters::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bosdyn.api.PointCloud.EncodingParameters)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PointCloud_EncodingParameters::CopyFrom(const PointCloud_EncodingParameters& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bosdyn.api.PointCloud.EncodingParameters)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PointCloud_EncodingParameters::IsInitialized() const {
  return true;
}

void PointCloud_EncodingParameters::InternalSwap(PointCloud_EncodingParameters* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PointCloud_EncodingParameters, remapping_constant_)
      + sizeof(PointCloud_EncodingParameters::remapping_constant_)
      - PROTOBUF_FIELD_OFFSET(PointCloud_EncodingParameters, max_x_)>(
          reinterpret_cast<char*>(&max_x_),
          reinterpret_cast<char*>(&other->max_x_));
}

::PROTOBUF_NAMESPACE_ID::Metadata PointCloud_EncodingParameters::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void PointCloud::InitAsDefaultInstance() {
  ::bosdyn::api::_PointCloud_default_instance_._instance.get_mutable()->source_ = const_cast< ::bosdyn::api::PointCloudSource*>(
      ::bosdyn::api::PointCloudSource::internal_default_instance());
  ::bosdyn::api::_PointCloud_default_instance_._instance.get_mutable()->encoding_parameters_ = const_cast< ::bosdyn::api::PointCloud_EncodingParameters*>(
      ::bosdyn::api::PointCloud_EncodingParameters::internal_default_instance());
}
class PointCloud::_Internal {
 public:
  static const ::bosdyn::api::PointCloudSource& source(const PointCloud* msg);
  static const ::bosdyn::api::PointCloud_EncodingParameters& encoding_parameters(const PointCloud* msg);
};

const ::bosdyn::api::PointCloudSource&
PointCloud::_Internal::source(const PointCloud* msg) {
  return *msg->source_;
}
const ::bosdyn::api::PointCloud_EncodingParameters&
PointCloud::_Internal::encoding_parameters(const PointCloud* msg) {
  return *msg->encoding_parameters_;
}
PointCloud::PointCloud(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:bosdyn.api.PointCloud)
}
PointCloud::PointCloud(const PointCloud& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  data_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_data().empty()) {
    data_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_data(),
      GetArena());
  }
  if (from._internal_has_source()) {
    source_ = new ::bosdyn::api::PointCloudSource(*from.source_);
  } else {
    source_ = nullptr;
  }
  if (from._internal_has_encoding_parameters()) {
    encoding_parameters_ = new ::bosdyn::api::PointCloud_EncodingParameters(*from.encoding_parameters_);
  } else {
    encoding_parameters_ = nullptr;
  }
  ::memcpy(&num_points_, &from.num_points_,
    static_cast<size_t>(reinterpret_cast<char*>(&encoding_) -
    reinterpret_cast<char*>(&num_points_)) + sizeof(encoding_));
  // @@protoc_insertion_point(copy_constructor:bosdyn.api.PointCloud)
}

void PointCloud::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_PointCloud_bosdyn_2fapi_2fpoint_5fcloud_2eproto.base);
  data_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&source_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&encoding_) -
      reinterpret_cast<char*>(&source_)) + sizeof(encoding_));
}

PointCloud::~PointCloud() {
  // @@protoc_insertion_point(destructor:bosdyn.api.PointCloud)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void PointCloud::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  data_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete source_;
  if (this != internal_default_instance()) delete encoding_parameters_;
}

void PointCloud::ArenaDtor(void* object) {
  PointCloud* _this = reinterpret_cast< PointCloud* >(object);
  (void)_this;
}
void PointCloud::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PointCloud::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const PointCloud& PointCloud::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_PointCloud_bosdyn_2fapi_2fpoint_5fcloud_2eproto.base);
  return *internal_default_instance();
}


void PointCloud::Clear() {
// @@protoc_insertion_point(message_clear_start:bosdyn.api.PointCloud)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  data_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  if (GetArena() == nullptr && source_ != nullptr) {
    delete source_;
  }
  source_ = nullptr;
  if (GetArena() == nullptr && encoding_parameters_ != nullptr) {
    delete encoding_parameters_;
  }
  encoding_parameters_ = nullptr;
  ::memset(&num_points_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&encoding_) -
      reinterpret_cast<char*>(&num_points_)) + sizeof(encoding_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PointCloud::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .bosdyn.api.PointCloudSource source = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_source(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 num_points = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          num_points_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .bosdyn.api.PointCloud.Encoding encoding = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_encoding(static_cast<::bosdyn::api::PointCloud_Encoding>(val));
        } else goto handle_unusual;
        continue;
      // .bosdyn.api.PointCloud.EncodingParameters encoding_parameters = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_encoding_parameters(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bytes data = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          auto str = _internal_mutable_data();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* PointCloud::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:bosdyn.api.PointCloud)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .bosdyn.api.PointCloudSource source = 1;
  if (this->has_source()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::source(this), target, stream);
  }

  // int32 num_points = 2;
  if (this->num_points() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->_internal_num_points(), target);
  }

  // .bosdyn.api.PointCloud.Encoding encoding = 3;
  if (this->encoding() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      3, this->_internal_encoding(), target);
  }

  // .bosdyn.api.PointCloud.EncodingParameters encoding_parameters = 4;
  if (this->has_encoding_parameters()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        4, _Internal::encoding_parameters(this), target, stream);
  }

  // bytes data = 5;
  if (this->data().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        5, this->_internal_data(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:bosdyn.api.PointCloud)
  return target;
}

size_t PointCloud::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bosdyn.api.PointCloud)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes data = 5;
  if (this->data().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_data());
  }

  // .bosdyn.api.PointCloudSource source = 1;
  if (this->has_source()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *source_);
  }

  // .bosdyn.api.PointCloud.EncodingParameters encoding_parameters = 4;
  if (this->has_encoding_parameters()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *encoding_parameters_);
  }

  // int32 num_points = 2;
  if (this->num_points() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_num_points());
  }

  // .bosdyn.api.PointCloud.Encoding encoding = 3;
  if (this->encoding() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_encoding());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PointCloud::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bosdyn.api.PointCloud)
  GOOGLE_DCHECK_NE(&from, this);
  const PointCloud* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<PointCloud>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bosdyn.api.PointCloud)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bosdyn.api.PointCloud)
    MergeFrom(*source);
  }
}

void PointCloud::MergeFrom(const PointCloud& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bosdyn.api.PointCloud)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.data().size() > 0) {
    _internal_set_data(from._internal_data());
  }
  if (from.has_source()) {
    _internal_mutable_source()->::bosdyn::api::PointCloudSource::MergeFrom(from._internal_source());
  }
  if (from.has_encoding_parameters()) {
    _internal_mutable_encoding_parameters()->::bosdyn::api::PointCloud_EncodingParameters::MergeFrom(from._internal_encoding_parameters());
  }
  if (from.num_points() != 0) {
    _internal_set_num_points(from._internal_num_points());
  }
  if (from.encoding() != 0) {
    _internal_set_encoding(from._internal_encoding());
  }
}

void PointCloud::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bosdyn.api.PointCloud)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PointCloud::CopyFrom(const PointCloud& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bosdyn.api.PointCloud)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PointCloud::IsInitialized() const {
  return true;
}

void PointCloud::InternalSwap(PointCloud* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  data_.Swap(&other->data_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PointCloud, encoding_)
      + sizeof(PointCloud::encoding_)
      - PROTOBUF_FIELD_OFFSET(PointCloud, source_)>(
          reinterpret_cast<char*>(&source_),
          reinterpret_cast<char*>(&other->source_));
}

::PROTOBUF_NAMESPACE_ID::Metadata PointCloud::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GetPointCloudRequest::InitAsDefaultInstance() {
  ::bosdyn::api::_GetPointCloudRequest_default_instance_._instance.get_mutable()->header_ = const_cast< ::bosdyn::api::RequestHeader*>(
      ::bosdyn::api::RequestHeader::internal_default_instance());
}
class GetPointCloudRequest::_Internal {
 public:
  static const ::bosdyn::api::RequestHeader& header(const GetPointCloudRequest* msg);
};

const ::bosdyn::api::RequestHeader&
GetPointCloudRequest::_Internal::header(const GetPointCloudRequest* msg) {
  return *msg->header_;
}
void GetPointCloudRequest::clear_header() {
  if (GetArena() == nullptr && header_ != nullptr) {
    delete header_;
  }
  header_ = nullptr;
}
GetPointCloudRequest::GetPointCloudRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:bosdyn.api.GetPointCloudRequest)
}
GetPointCloudRequest::GetPointCloudRequest(const GetPointCloudRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_header()) {
    header_ = new ::bosdyn::api::RequestHeader(*from.header_);
  } else {
    header_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:bosdyn.api.GetPointCloudRequest)
}

void GetPointCloudRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GetPointCloudRequest_bosdyn_2fapi_2fpoint_5fcloud_2eproto.base);
  header_ = nullptr;
}

GetPointCloudRequest::~GetPointCloudRequest() {
  // @@protoc_insertion_point(destructor:bosdyn.api.GetPointCloudRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetPointCloudRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete header_;
}

void GetPointCloudRequest::ArenaDtor(void* object) {
  GetPointCloudRequest* _this = reinterpret_cast< GetPointCloudRequest* >(object);
  (void)_this;
}
void GetPointCloudRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetPointCloudRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetPointCloudRequest& GetPointCloudRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetPointCloudRequest_bosdyn_2fapi_2fpoint_5fcloud_2eproto.base);
  return *internal_default_instance();
}


void GetPointCloudRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:bosdyn.api.GetPointCloudRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && header_ != nullptr) {
    delete header_;
  }
  header_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetPointCloudRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .bosdyn.api.RequestHeader header = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_header(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetPointCloudRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:bosdyn.api.GetPointCloudRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .bosdyn.api.RequestHeader header = 1;
  if (this->has_header()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::header(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:bosdyn.api.GetPointCloudRequest)
  return target;
}

size_t GetPointCloudRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bosdyn.api.GetPointCloudRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .bosdyn.api.RequestHeader header = 1;
  if (this->has_header()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *header_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetPointCloudRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bosdyn.api.GetPointCloudRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetPointCloudRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetPointCloudRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bosdyn.api.GetPointCloudRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bosdyn.api.GetPointCloudRequest)
    MergeFrom(*source);
  }
}

void GetPointCloudRequest::MergeFrom(const GetPointCloudRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bosdyn.api.GetPointCloudRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_header()) {
    _internal_mutable_header()->::bosdyn::api::RequestHeader::MergeFrom(from._internal_header());
  }
}

void GetPointCloudRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bosdyn.api.GetPointCloudRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetPointCloudRequest::CopyFrom(const GetPointCloudRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bosdyn.api.GetPointCloudRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetPointCloudRequest::IsInitialized() const {
  return true;
}

void GetPointCloudRequest::InternalSwap(GetPointCloudRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(header_, other->header_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetPointCloudRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GetPointCloudResponse::InitAsDefaultInstance() {
  ::bosdyn::api::_GetPointCloudResponse_default_instance_._instance.get_mutable()->header_ = const_cast< ::bosdyn::api::ResponseHeader*>(
      ::bosdyn::api::ResponseHeader::internal_default_instance());
  ::bosdyn::api::_GetPointCloudResponse_default_instance_._instance.get_mutable()->point_cloud_ = const_cast< ::bosdyn::api::PointCloud*>(
      ::bosdyn::api::PointCloud::internal_default_instance());
}
class GetPointCloudResponse::_Internal {
 public:
  static const ::bosdyn::api::ResponseHeader& header(const GetPointCloudResponse* msg);
  static const ::bosdyn::api::PointCloud& point_cloud(const GetPointCloudResponse* msg);
};

const ::bosdyn::api::ResponseHeader&
GetPointCloudResponse::_Internal::header(const GetPointCloudResponse* msg) {
  return *msg->header_;
}
const ::bosdyn::api::PointCloud&
GetPointCloudResponse::_Internal::point_cloud(const GetPointCloudResponse* msg) {
  return *msg->point_cloud_;
}
void GetPointCloudResponse::clear_header() {
  if (GetArena() == nullptr && header_ != nullptr) {
    delete header_;
  }
  header_ = nullptr;
}
GetPointCloudResponse::GetPointCloudResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:bosdyn.api.GetPointCloudResponse)
}
GetPointCloudResponse::GetPointCloudResponse(const GetPointCloudResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_header()) {
    header_ = new ::bosdyn::api::ResponseHeader(*from.header_);
  } else {
    header_ = nullptr;
  }
  if (from._internal_has_point_cloud()) {
    point_cloud_ = new ::bosdyn::api::PointCloud(*from.point_cloud_);
  } else {
    point_cloud_ = nullptr;
  }
  status_ = from.status_;
  // @@protoc_insertion_point(copy_constructor:bosdyn.api.GetPointCloudResponse)
}

void GetPointCloudResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GetPointCloudResponse_bosdyn_2fapi_2fpoint_5fcloud_2eproto.base);
  ::memset(&header_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&status_) -
      reinterpret_cast<char*>(&header_)) + sizeof(status_));
}

GetPointCloudResponse::~GetPointCloudResponse() {
  // @@protoc_insertion_point(destructor:bosdyn.api.GetPointCloudResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetPointCloudResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete header_;
  if (this != internal_default_instance()) delete point_cloud_;
}

void GetPointCloudResponse::ArenaDtor(void* object) {
  GetPointCloudResponse* _this = reinterpret_cast< GetPointCloudResponse* >(object);
  (void)_this;
}
void GetPointCloudResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetPointCloudResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetPointCloudResponse& GetPointCloudResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetPointCloudResponse_bosdyn_2fapi_2fpoint_5fcloud_2eproto.base);
  return *internal_default_instance();
}


void GetPointCloudResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:bosdyn.api.GetPointCloudResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && header_ != nullptr) {
    delete header_;
  }
  header_ = nullptr;
  if (GetArena() == nullptr && point_cloud_ != nullptr) {
    delete point_cloud_;
  }
  point_cloud_ = nullptr;
  status_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetPointCloudResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .bosdyn.api.ResponseHeader header = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_header(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .bosdyn.api.GetPointCloudResponse.Status status = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_status(static_cast<::bosdyn::api::GetPointCloudResponse_Status>(val));
        } else goto handle_unusual;
        continue;
      // .bosdyn.api.PointCloud point_cloud = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_point_cloud(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetPointCloudResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:bosdyn.api.GetPointCloudResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .bosdyn.api.ResponseHeader header = 1;
  if (this->has_header()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::header(this), target, stream);
  }

  // .bosdyn.api.GetPointCloudResponse.Status status = 2;
  if (this->status() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      2, this->_internal_status(), target);
  }

  // .bosdyn.api.PointCloud point_cloud = 3;
  if (this->has_point_cloud()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::point_cloud(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:bosdyn.api.GetPointCloudResponse)
  return target;
}

size_t GetPointCloudResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bosdyn.api.GetPointCloudResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .bosdyn.api.ResponseHeader header = 1;
  if (this->has_header()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *header_);
  }

  // .bosdyn.api.PointCloud point_cloud = 3;
  if (this->has_point_cloud()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *point_cloud_);
  }

  // .bosdyn.api.GetPointCloudResponse.Status status = 2;
  if (this->status() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_status());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetPointCloudResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bosdyn.api.GetPointCloudResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const GetPointCloudResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetPointCloudResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bosdyn.api.GetPointCloudResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bosdyn.api.GetPointCloudResponse)
    MergeFrom(*source);
  }
}

void GetPointCloudResponse::MergeFrom(const GetPointCloudResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bosdyn.api.GetPointCloudResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_header()) {
    _internal_mutable_header()->::bosdyn::api::ResponseHeader::MergeFrom(from._internal_header());
  }
  if (from.has_point_cloud()) {
    _internal_mutable_point_cloud()->::bosdyn::api::PointCloud::MergeFrom(from._internal_point_cloud());
  }
  if (from.status() != 0) {
    _internal_set_status(from._internal_status());
  }
}

void GetPointCloudResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bosdyn.api.GetPointCloudResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetPointCloudResponse::CopyFrom(const GetPointCloudResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bosdyn.api.GetPointCloudResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetPointCloudResponse::IsInitialized() const {
  return true;
}

void GetPointCloudResponse::InternalSwap(GetPointCloudResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GetPointCloudResponse, status_)
      + sizeof(GetPointCloudResponse::status_)
      - PROTOBUF_FIELD_OFFSET(GetPointCloudResponse, header_)>(
          reinterpret_cast<char*>(&header_),
          reinterpret_cast<char*>(&other->header_));
}

::PROTOBUF_NAMESPACE_ID::Metadata GetPointCloudResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace api
}  // namespace bosdyn
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::bosdyn::api::PointCloudSource* Arena::CreateMaybeMessage< ::bosdyn::api::PointCloudSource >(Arena* arena) {
  return Arena::CreateMessageInternal< ::bosdyn::api::PointCloudSource >(arena);
}
template<> PROTOBUF_NOINLINE ::bosdyn::api::PointCloud_EncodingParameters* Arena::CreateMaybeMessage< ::bosdyn::api::PointCloud_EncodingParameters >(Arena* arena) {
  return Arena::CreateMessageInternal< ::bosdyn::api::PointCloud_EncodingParameters >(arena);
}
template<> PROTOBUF_NOINLINE ::bosdyn::api::PointCloud* Arena::CreateMaybeMessage< ::bosdyn::api::PointCloud >(Arena* arena) {
  return Arena::CreateMessageInternal< ::bosdyn::api::PointCloud >(arena);
}
template<> PROTOBUF_NOINLINE ::bosdyn::api::GetPointCloudRequest* Arena::CreateMaybeMessage< ::bosdyn::api::GetPointCloudRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::bosdyn::api::GetPointCloudRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::bosdyn::api::GetPointCloudResponse* Arena::CreateMaybeMessage< ::bosdyn::api::GetPointCloudResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::bosdyn::api::GetPointCloudResponse >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
