// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: bosdyn/api/basic_command.proto

#include "bosdyn/api/basic_command.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_bosdyn_2fapi_2ftrajectory_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_SE2Trajectory_bosdyn_2fapi_2ftrajectory_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_bosdyn_2fapi_2fgeometry_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_SE2Velocity_bosdyn_2fapi_2fgeometry_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2fprotobuf_2ftimestamp_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Timestamp_google_2fprotobuf_2ftimestamp_2eproto;
namespace bosdyn {
namespace api {
class SelfRightCommand_RequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SelfRightCommand_Request> _instance;
} _SelfRightCommand_Request_default_instance_;
class SelfRightCommand_FeedbackDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SelfRightCommand_Feedback> _instance;
} _SelfRightCommand_Feedback_default_instance_;
class SelfRightCommandDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SelfRightCommand> _instance;
} _SelfRightCommand_default_instance_;
class StopCommand_RequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<StopCommand_Request> _instance;
} _StopCommand_Request_default_instance_;
class StopCommand_FeedbackDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<StopCommand_Feedback> _instance;
} _StopCommand_Feedback_default_instance_;
class StopCommandDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<StopCommand> _instance;
} _StopCommand_default_instance_;
class FreezeCommand_RequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<FreezeCommand_Request> _instance;
} _FreezeCommand_Request_default_instance_;
class FreezeCommand_FeedbackDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<FreezeCommand_Feedback> _instance;
} _FreezeCommand_Feedback_default_instance_;
class FreezeCommandDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<FreezeCommand> _instance;
} _FreezeCommand_default_instance_;
class SafePowerOffCommand_RequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SafePowerOffCommand_Request> _instance;
} _SafePowerOffCommand_Request_default_instance_;
class SafePowerOffCommand_FeedbackDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SafePowerOffCommand_Feedback> _instance;
} _SafePowerOffCommand_Feedback_default_instance_;
class SafePowerOffCommandDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SafePowerOffCommand> _instance;
} _SafePowerOffCommand_default_instance_;
class SE2TrajectoryCommand_RequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SE2TrajectoryCommand_Request> _instance;
} _SE2TrajectoryCommand_Request_default_instance_;
class SE2TrajectoryCommand_FeedbackDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SE2TrajectoryCommand_Feedback> _instance;
} _SE2TrajectoryCommand_Feedback_default_instance_;
class SE2TrajectoryCommandDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SE2TrajectoryCommand> _instance;
} _SE2TrajectoryCommand_default_instance_;
class SE2VelocityCommand_RequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SE2VelocityCommand_Request> _instance;
} _SE2VelocityCommand_Request_default_instance_;
class SE2VelocityCommand_FeedbackDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SE2VelocityCommand_Feedback> _instance;
} _SE2VelocityCommand_Feedback_default_instance_;
class SE2VelocityCommandDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SE2VelocityCommand> _instance;
} _SE2VelocityCommand_default_instance_;
class SitCommand_RequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SitCommand_Request> _instance;
} _SitCommand_Request_default_instance_;
class SitCommand_FeedbackDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SitCommand_Feedback> _instance;
} _SitCommand_Feedback_default_instance_;
class SitCommandDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SitCommand> _instance;
} _SitCommand_default_instance_;
class StandCommand_RequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<StandCommand_Request> _instance;
} _StandCommand_Request_default_instance_;
class StandCommand_FeedbackDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<StandCommand_Feedback> _instance;
} _StandCommand_Feedback_default_instance_;
class StandCommandDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<StandCommand> _instance;
} _StandCommand_default_instance_;
}  // namespace api
}  // namespace bosdyn
static void InitDefaultsscc_info_FreezeCommand_bosdyn_2fapi_2fbasic_5fcommand_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::bosdyn::api::_FreezeCommand_default_instance_;
    new (ptr) ::bosdyn::api::FreezeCommand();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::bosdyn::api::FreezeCommand::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_FreezeCommand_bosdyn_2fapi_2fbasic_5fcommand_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_FreezeCommand_bosdyn_2fapi_2fbasic_5fcommand_2eproto}, {}};

static void InitDefaultsscc_info_FreezeCommand_Feedback_bosdyn_2fapi_2fbasic_5fcommand_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::bosdyn::api::_FreezeCommand_Feedback_default_instance_;
    new (ptr) ::bosdyn::api::FreezeCommand_Feedback();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::bosdyn::api::FreezeCommand_Feedback::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_FreezeCommand_Feedback_bosdyn_2fapi_2fbasic_5fcommand_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_FreezeCommand_Feedback_bosdyn_2fapi_2fbasic_5fcommand_2eproto}, {}};

static void InitDefaultsscc_info_FreezeCommand_Request_bosdyn_2fapi_2fbasic_5fcommand_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::bosdyn::api::_FreezeCommand_Request_default_instance_;
    new (ptr) ::bosdyn::api::FreezeCommand_Request();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::bosdyn::api::FreezeCommand_Request::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_FreezeCommand_Request_bosdyn_2fapi_2fbasic_5fcommand_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_FreezeCommand_Request_bosdyn_2fapi_2fbasic_5fcommand_2eproto}, {}};

static void InitDefaultsscc_info_SE2TrajectoryCommand_bosdyn_2fapi_2fbasic_5fcommand_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::bosdyn::api::_SE2TrajectoryCommand_default_instance_;
    new (ptr) ::bosdyn::api::SE2TrajectoryCommand();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::bosdyn::api::SE2TrajectoryCommand::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_SE2TrajectoryCommand_bosdyn_2fapi_2fbasic_5fcommand_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_SE2TrajectoryCommand_bosdyn_2fapi_2fbasic_5fcommand_2eproto}, {}};

static void InitDefaultsscc_info_SE2TrajectoryCommand_Feedback_bosdyn_2fapi_2fbasic_5fcommand_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::bosdyn::api::_SE2TrajectoryCommand_Feedback_default_instance_;
    new (ptr) ::bosdyn::api::SE2TrajectoryCommand_Feedback();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::bosdyn::api::SE2TrajectoryCommand_Feedback::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_SE2TrajectoryCommand_Feedback_bosdyn_2fapi_2fbasic_5fcommand_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_SE2TrajectoryCommand_Feedback_bosdyn_2fapi_2fbasic_5fcommand_2eproto}, {}};

static void InitDefaultsscc_info_SE2TrajectoryCommand_Request_bosdyn_2fapi_2fbasic_5fcommand_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::bosdyn::api::_SE2TrajectoryCommand_Request_default_instance_;
    new (ptr) ::bosdyn::api::SE2TrajectoryCommand_Request();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::bosdyn::api::SE2TrajectoryCommand_Request::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_SE2TrajectoryCommand_Request_bosdyn_2fapi_2fbasic_5fcommand_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, 0, InitDefaultsscc_info_SE2TrajectoryCommand_Request_bosdyn_2fapi_2fbasic_5fcommand_2eproto}, {
      &scc_info_Timestamp_google_2fprotobuf_2ftimestamp_2eproto.base,
      &scc_info_SE2Trajectory_bosdyn_2fapi_2ftrajectory_2eproto.base,}};

static void InitDefaultsscc_info_SE2VelocityCommand_bosdyn_2fapi_2fbasic_5fcommand_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::bosdyn::api::_SE2VelocityCommand_default_instance_;
    new (ptr) ::bosdyn::api::SE2VelocityCommand();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::bosdyn::api::SE2VelocityCommand::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_SE2VelocityCommand_bosdyn_2fapi_2fbasic_5fcommand_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_SE2VelocityCommand_bosdyn_2fapi_2fbasic_5fcommand_2eproto}, {}};

static void InitDefaultsscc_info_SE2VelocityCommand_Feedback_bosdyn_2fapi_2fbasic_5fcommand_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::bosdyn::api::_SE2VelocityCommand_Feedback_default_instance_;
    new (ptr) ::bosdyn::api::SE2VelocityCommand_Feedback();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::bosdyn::api::SE2VelocityCommand_Feedback::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_SE2VelocityCommand_Feedback_bosdyn_2fapi_2fbasic_5fcommand_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_SE2VelocityCommand_Feedback_bosdyn_2fapi_2fbasic_5fcommand_2eproto}, {}};

static void InitDefaultsscc_info_SE2VelocityCommand_Request_bosdyn_2fapi_2fbasic_5fcommand_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::bosdyn::api::_SE2VelocityCommand_Request_default_instance_;
    new (ptr) ::bosdyn::api::SE2VelocityCommand_Request();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::bosdyn::api::SE2VelocityCommand_Request::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_SE2VelocityCommand_Request_bosdyn_2fapi_2fbasic_5fcommand_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, 0, InitDefaultsscc_info_SE2VelocityCommand_Request_bosdyn_2fapi_2fbasic_5fcommand_2eproto}, {
      &scc_info_Timestamp_google_2fprotobuf_2ftimestamp_2eproto.base,
      &scc_info_SE2Velocity_bosdyn_2fapi_2fgeometry_2eproto.base,}};

static void InitDefaultsscc_info_SafePowerOffCommand_bosdyn_2fapi_2fbasic_5fcommand_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::bosdyn::api::_SafePowerOffCommand_default_instance_;
    new (ptr) ::bosdyn::api::SafePowerOffCommand();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::bosdyn::api::SafePowerOffCommand::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_SafePowerOffCommand_bosdyn_2fapi_2fbasic_5fcommand_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_SafePowerOffCommand_bosdyn_2fapi_2fbasic_5fcommand_2eproto}, {}};

static void InitDefaultsscc_info_SafePowerOffCommand_Feedback_bosdyn_2fapi_2fbasic_5fcommand_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::bosdyn::api::_SafePowerOffCommand_Feedback_default_instance_;
    new (ptr) ::bosdyn::api::SafePowerOffCommand_Feedback();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::bosdyn::api::SafePowerOffCommand_Feedback::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_SafePowerOffCommand_Feedback_bosdyn_2fapi_2fbasic_5fcommand_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_SafePowerOffCommand_Feedback_bosdyn_2fapi_2fbasic_5fcommand_2eproto}, {}};

static void InitDefaultsscc_info_SafePowerOffCommand_Request_bosdyn_2fapi_2fbasic_5fcommand_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::bosdyn::api::_SafePowerOffCommand_Request_default_instance_;
    new (ptr) ::bosdyn::api::SafePowerOffCommand_Request();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::bosdyn::api::SafePowerOffCommand_Request::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_SafePowerOffCommand_Request_bosdyn_2fapi_2fbasic_5fcommand_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_SafePowerOffCommand_Request_bosdyn_2fapi_2fbasic_5fcommand_2eproto}, {}};

static void InitDefaultsscc_info_SelfRightCommand_bosdyn_2fapi_2fbasic_5fcommand_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::bosdyn::api::_SelfRightCommand_default_instance_;
    new (ptr) ::bosdyn::api::SelfRightCommand();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::bosdyn::api::SelfRightCommand::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_SelfRightCommand_bosdyn_2fapi_2fbasic_5fcommand_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_SelfRightCommand_bosdyn_2fapi_2fbasic_5fcommand_2eproto}, {}};

static void InitDefaultsscc_info_SelfRightCommand_Feedback_bosdyn_2fapi_2fbasic_5fcommand_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::bosdyn::api::_SelfRightCommand_Feedback_default_instance_;
    new (ptr) ::bosdyn::api::SelfRightCommand_Feedback();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::bosdyn::api::SelfRightCommand_Feedback::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_SelfRightCommand_Feedback_bosdyn_2fapi_2fbasic_5fcommand_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_SelfRightCommand_Feedback_bosdyn_2fapi_2fbasic_5fcommand_2eproto}, {}};

static void InitDefaultsscc_info_SelfRightCommand_Request_bosdyn_2fapi_2fbasic_5fcommand_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::bosdyn::api::_SelfRightCommand_Request_default_instance_;
    new (ptr) ::bosdyn::api::SelfRightCommand_Request();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::bosdyn::api::SelfRightCommand_Request::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_SelfRightCommand_Request_bosdyn_2fapi_2fbasic_5fcommand_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_SelfRightCommand_Request_bosdyn_2fapi_2fbasic_5fcommand_2eproto}, {}};

static void InitDefaultsscc_info_SitCommand_bosdyn_2fapi_2fbasic_5fcommand_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::bosdyn::api::_SitCommand_default_instance_;
    new (ptr) ::bosdyn::api::SitCommand();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::bosdyn::api::SitCommand::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_SitCommand_bosdyn_2fapi_2fbasic_5fcommand_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_SitCommand_bosdyn_2fapi_2fbasic_5fcommand_2eproto}, {}};

static void InitDefaultsscc_info_SitCommand_Feedback_bosdyn_2fapi_2fbasic_5fcommand_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::bosdyn::api::_SitCommand_Feedback_default_instance_;
    new (ptr) ::bosdyn::api::SitCommand_Feedback();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::bosdyn::api::SitCommand_Feedback::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_SitCommand_Feedback_bosdyn_2fapi_2fbasic_5fcommand_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_SitCommand_Feedback_bosdyn_2fapi_2fbasic_5fcommand_2eproto}, {}};

static void InitDefaultsscc_info_SitCommand_Request_bosdyn_2fapi_2fbasic_5fcommand_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::bosdyn::api::_SitCommand_Request_default_instance_;
    new (ptr) ::bosdyn::api::SitCommand_Request();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::bosdyn::api::SitCommand_Request::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_SitCommand_Request_bosdyn_2fapi_2fbasic_5fcommand_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_SitCommand_Request_bosdyn_2fapi_2fbasic_5fcommand_2eproto}, {}};

static void InitDefaultsscc_info_StandCommand_bosdyn_2fapi_2fbasic_5fcommand_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::bosdyn::api::_StandCommand_default_instance_;
    new (ptr) ::bosdyn::api::StandCommand();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::bosdyn::api::StandCommand::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_StandCommand_bosdyn_2fapi_2fbasic_5fcommand_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_StandCommand_bosdyn_2fapi_2fbasic_5fcommand_2eproto}, {}};

static void InitDefaultsscc_info_StandCommand_Feedback_bosdyn_2fapi_2fbasic_5fcommand_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::bosdyn::api::_StandCommand_Feedback_default_instance_;
    new (ptr) ::bosdyn::api::StandCommand_Feedback();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::bosdyn::api::StandCommand_Feedback::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_StandCommand_Feedback_bosdyn_2fapi_2fbasic_5fcommand_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_StandCommand_Feedback_bosdyn_2fapi_2fbasic_5fcommand_2eproto}, {}};

static void InitDefaultsscc_info_StandCommand_Request_bosdyn_2fapi_2fbasic_5fcommand_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::bosdyn::api::_StandCommand_Request_default_instance_;
    new (ptr) ::bosdyn::api::StandCommand_Request();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::bosdyn::api::StandCommand_Request::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_StandCommand_Request_bosdyn_2fapi_2fbasic_5fcommand_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_StandCommand_Request_bosdyn_2fapi_2fbasic_5fcommand_2eproto}, {}};

static void InitDefaultsscc_info_StopCommand_bosdyn_2fapi_2fbasic_5fcommand_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::bosdyn::api::_StopCommand_default_instance_;
    new (ptr) ::bosdyn::api::StopCommand();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::bosdyn::api::StopCommand::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_StopCommand_bosdyn_2fapi_2fbasic_5fcommand_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_StopCommand_bosdyn_2fapi_2fbasic_5fcommand_2eproto}, {}};

static void InitDefaultsscc_info_StopCommand_Feedback_bosdyn_2fapi_2fbasic_5fcommand_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::bosdyn::api::_StopCommand_Feedback_default_instance_;
    new (ptr) ::bosdyn::api::StopCommand_Feedback();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::bosdyn::api::StopCommand_Feedback::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_StopCommand_Feedback_bosdyn_2fapi_2fbasic_5fcommand_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_StopCommand_Feedback_bosdyn_2fapi_2fbasic_5fcommand_2eproto}, {}};

static void InitDefaultsscc_info_StopCommand_Request_bosdyn_2fapi_2fbasic_5fcommand_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::bosdyn::api::_StopCommand_Request_default_instance_;
    new (ptr) ::bosdyn::api::StopCommand_Request();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::bosdyn::api::StopCommand_Request::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_StopCommand_Request_bosdyn_2fapi_2fbasic_5fcommand_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_StopCommand_Request_bosdyn_2fapi_2fbasic_5fcommand_2eproto}, {}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_bosdyn_2fapi_2fbasic_5fcommand_2eproto[24];
static const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* file_level_enum_descriptors_bosdyn_2fapi_2fbasic_5fcommand_2eproto[4];
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_bosdyn_2fapi_2fbasic_5fcommand_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_bosdyn_2fapi_2fbasic_5fcommand_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::bosdyn::api::SelfRightCommand_Request, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::bosdyn::api::SelfRightCommand_Feedback, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::bosdyn::api::SelfRightCommand, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::bosdyn::api::StopCommand_Request, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::bosdyn::api::StopCommand_Feedback, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::bosdyn::api::StopCommand, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::bosdyn::api::FreezeCommand_Request, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::bosdyn::api::FreezeCommand_Feedback, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::bosdyn::api::FreezeCommand, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::bosdyn::api::SafePowerOffCommand_Request, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::bosdyn::api::SafePowerOffCommand_Feedback, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::bosdyn::api::SafePowerOffCommand_Feedback, status_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::bosdyn::api::SafePowerOffCommand, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::bosdyn::api::SE2TrajectoryCommand_Request, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::bosdyn::api::SE2TrajectoryCommand_Request, end_time_),
  PROTOBUF_FIELD_OFFSET(::bosdyn::api::SE2TrajectoryCommand_Request, se2_frame_name_),
  PROTOBUF_FIELD_OFFSET(::bosdyn::api::SE2TrajectoryCommand_Request, trajectory_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::bosdyn::api::SE2TrajectoryCommand_Feedback, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::bosdyn::api::SE2TrajectoryCommand_Feedback, status_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::bosdyn::api::SE2TrajectoryCommand, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::bosdyn::api::SE2VelocityCommand_Request, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::bosdyn::api::SE2VelocityCommand_Request, end_time_),
  PROTOBUF_FIELD_OFFSET(::bosdyn::api::SE2VelocityCommand_Request, se2_frame_name_),
  PROTOBUF_FIELD_OFFSET(::bosdyn::api::SE2VelocityCommand_Request, velocity_),
  PROTOBUF_FIELD_OFFSET(::bosdyn::api::SE2VelocityCommand_Request, slew_rate_limit_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::bosdyn::api::SE2VelocityCommand_Feedback, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::bosdyn::api::SE2VelocityCommand, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::bosdyn::api::SitCommand_Request, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::bosdyn::api::SitCommand_Feedback, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::bosdyn::api::SitCommand_Feedback, status_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::bosdyn::api::SitCommand, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::bosdyn::api::StandCommand_Request, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::bosdyn::api::StandCommand_Feedback, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::bosdyn::api::StandCommand_Feedback, status_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::bosdyn::api::StandCommand, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::bosdyn::api::SelfRightCommand_Request)},
  { 5, -1, sizeof(::bosdyn::api::SelfRightCommand_Feedback)},
  { 10, -1, sizeof(::bosdyn::api::SelfRightCommand)},
  { 15, -1, sizeof(::bosdyn::api::StopCommand_Request)},
  { 20, -1, sizeof(::bosdyn::api::StopCommand_Feedback)},
  { 25, -1, sizeof(::bosdyn::api::StopCommand)},
  { 30, -1, sizeof(::bosdyn::api::FreezeCommand_Request)},
  { 35, -1, sizeof(::bosdyn::api::FreezeCommand_Feedback)},
  { 40, -1, sizeof(::bosdyn::api::FreezeCommand)},
  { 45, -1, sizeof(::bosdyn::api::SafePowerOffCommand_Request)},
  { 50, -1, sizeof(::bosdyn::api::SafePowerOffCommand_Feedback)},
  { 56, -1, sizeof(::bosdyn::api::SafePowerOffCommand)},
  { 61, -1, sizeof(::bosdyn::api::SE2TrajectoryCommand_Request)},
  { 69, -1, sizeof(::bosdyn::api::SE2TrajectoryCommand_Feedback)},
  { 75, -1, sizeof(::bosdyn::api::SE2TrajectoryCommand)},
  { 80, -1, sizeof(::bosdyn::api::SE2VelocityCommand_Request)},
  { 89, -1, sizeof(::bosdyn::api::SE2VelocityCommand_Feedback)},
  { 94, -1, sizeof(::bosdyn::api::SE2VelocityCommand)},
  { 99, -1, sizeof(::bosdyn::api::SitCommand_Request)},
  { 104, -1, sizeof(::bosdyn::api::SitCommand_Feedback)},
  { 110, -1, sizeof(::bosdyn::api::SitCommand)},
  { 115, -1, sizeof(::bosdyn::api::StandCommand_Request)},
  { 120, -1, sizeof(::bosdyn::api::StandCommand_Feedback)},
  { 126, -1, sizeof(::bosdyn::api::StandCommand)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::bosdyn::api::_SelfRightCommand_Request_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::bosdyn::api::_SelfRightCommand_Feedback_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::bosdyn::api::_SelfRightCommand_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::bosdyn::api::_StopCommand_Request_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::bosdyn::api::_StopCommand_Feedback_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::bosdyn::api::_StopCommand_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::bosdyn::api::_FreezeCommand_Request_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::bosdyn::api::_FreezeCommand_Feedback_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::bosdyn::api::_FreezeCommand_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::bosdyn::api::_SafePowerOffCommand_Request_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::bosdyn::api::_SafePowerOffCommand_Feedback_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::bosdyn::api::_SafePowerOffCommand_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::bosdyn::api::_SE2TrajectoryCommand_Request_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::bosdyn::api::_SE2TrajectoryCommand_Feedback_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::bosdyn::api::_SE2TrajectoryCommand_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::bosdyn::api::_SE2VelocityCommand_Request_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::bosdyn::api::_SE2VelocityCommand_Feedback_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::bosdyn::api::_SE2VelocityCommand_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::bosdyn::api::_SitCommand_Request_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::bosdyn::api::_SitCommand_Feedback_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::bosdyn::api::_SitCommand_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::bosdyn::api::_StandCommand_Request_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::bosdyn::api::_StandCommand_Feedback_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::bosdyn::api::_StandCommand_default_instance_),
};

const char descriptor_table_protodef_bosdyn_2fapi_2fbasic_5fcommand_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\036bosdyn/api/basic_command.proto\022\nbosdyn"
  ".api\032\031bosdyn/api/geometry.proto\032\033bosdyn/"
  "api/trajectory.proto\032\037google/protobuf/ti"
  "mestamp.proto\")\n\020SelfRightCommand\032\t\n\007Req"
  "uest\032\n\n\010Feedback\"$\n\013StopCommand\032\t\n\007Reque"
  "st\032\n\n\010Feedback\"&\n\rFreezeCommand\032\t\n\007Reque"
  "st\032\n\n\010Feedback\"\274\001\n\023SafePowerOffCommand\032\t"
  "\n\007Request\032\231\001\n\010Feedback\022\?\n\006status\030\001 \001(\0162/"
  ".bosdyn.api.SafePowerOffCommand.Feedback"
  ".Status\"L\n\006Status\022\022\n\016STATUS_UNKNOWN\020\000\022\026\n"
  "\022STATUS_POWERED_OFF\020\001\022\026\n\022STATUS_IN_PROGR"
  "ESS\020\002\"\261\002\n\024SE2TrajectoryCommand\032~\n\007Reques"
  "t\022,\n\010end_time\030\001 \001(\0132\032.google.protobuf.Ti"
  "mestamp\022\026\n\016se2_frame_name\030\003 \001(\t\022-\n\ntraje"
  "ctory\030\002 \001(\0132\031.bosdyn.api.SE2Trajectory\032\230"
  "\001\n\010Feedback\022@\n\006status\030\001 \001(\01620.bosdyn.api"
  ".SE2TrajectoryCommand.Feedback.Status\"J\n"
  "\006Status\022\022\n\016STATUS_UNKNOWN\020\000\022\022\n\016STATUS_AT"
  "_GOAL\020\001\022\030\n\024STATUS_GOING_TO_GOAL\020\002\"\325\001\n\022SE"
  "2VelocityCommand\032\262\001\n\007Request\022,\n\010end_time"
  "\030\001 \001(\0132\032.google.protobuf.Timestamp\022\026\n\016se"
  "2_frame_name\030\005 \001(\t\022)\n\010velocity\030\002 \001(\0132\027.b"
  "osdyn.api.SE2Velocity\0220\n\017slew_rate_limit"
  "\030\004 \001(\0132\027.bosdyn.api.SE2VelocityJ\004\010\003\020\004\032\n\n"
  "\010Feedback\"\251\001\n\nSitCommand\032\t\n\007Request\032\217\001\n\010"
  "Feedback\0226\n\006status\030\002 \001(\0162&.bosdyn.api.Si"
  "tCommand.Feedback.Status\"K\n\006Status\022\022\n\016ST"
  "ATUS_UNKNOWN\020\000\022\025\n\021STATUS_IS_SITTING\020\001\022\026\n"
  "\022STATUS_IN_PROGRESS\020\002\"\256\001\n\014StandCommand\032\t"
  "\n\007Request\032\222\001\n\010Feedback\0228\n\006status\030\001 \001(\0162("
  ".bosdyn.api.StandCommand.Feedback.Status"
  "\"L\n\006Status\022\022\n\016STATUS_UNKNOWN\020\000\022\026\n\022STATUS"
  "_IS_STANDING\020\001\022\026\n\022STATUS_IN_PROGRESS\020\002B\023"
  "B\021BasicCommandProtob\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_bosdyn_2fapi_2fbasic_5fcommand_2eproto_deps[3] = {
  &::descriptor_table_bosdyn_2fapi_2fgeometry_2eproto,
  &::descriptor_table_bosdyn_2fapi_2ftrajectory_2eproto,
  &::descriptor_table_google_2fprotobuf_2ftimestamp_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_bosdyn_2fapi_2fbasic_5fcommand_2eproto_sccs[24] = {
  &scc_info_FreezeCommand_bosdyn_2fapi_2fbasic_5fcommand_2eproto.base,
  &scc_info_FreezeCommand_Feedback_bosdyn_2fapi_2fbasic_5fcommand_2eproto.base,
  &scc_info_FreezeCommand_Request_bosdyn_2fapi_2fbasic_5fcommand_2eproto.base,
  &scc_info_SE2TrajectoryCommand_bosdyn_2fapi_2fbasic_5fcommand_2eproto.base,
  &scc_info_SE2TrajectoryCommand_Feedback_bosdyn_2fapi_2fbasic_5fcommand_2eproto.base,
  &scc_info_SE2TrajectoryCommand_Request_bosdyn_2fapi_2fbasic_5fcommand_2eproto.base,
  &scc_info_SE2VelocityCommand_bosdyn_2fapi_2fbasic_5fcommand_2eproto.base,
  &scc_info_SE2VelocityCommand_Feedback_bosdyn_2fapi_2fbasic_5fcommand_2eproto.base,
  &scc_info_SE2VelocityCommand_Request_bosdyn_2fapi_2fbasic_5fcommand_2eproto.base,
  &scc_info_SafePowerOffCommand_bosdyn_2fapi_2fbasic_5fcommand_2eproto.base,
  &scc_info_SafePowerOffCommand_Feedback_bosdyn_2fapi_2fbasic_5fcommand_2eproto.base,
  &scc_info_SafePowerOffCommand_Request_bosdyn_2fapi_2fbasic_5fcommand_2eproto.base,
  &scc_info_SelfRightCommand_bosdyn_2fapi_2fbasic_5fcommand_2eproto.base,
  &scc_info_SelfRightCommand_Feedback_bosdyn_2fapi_2fbasic_5fcommand_2eproto.base,
  &scc_info_SelfRightCommand_Request_bosdyn_2fapi_2fbasic_5fcommand_2eproto.base,
  &scc_info_SitCommand_bosdyn_2fapi_2fbasic_5fcommand_2eproto.base,
  &scc_info_SitCommand_Feedback_bosdyn_2fapi_2fbasic_5fcommand_2eproto.base,
  &scc_info_SitCommand_Request_bosdyn_2fapi_2fbasic_5fcommand_2eproto.base,
  &scc_info_StandCommand_bosdyn_2fapi_2fbasic_5fcommand_2eproto.base,
  &scc_info_StandCommand_Feedback_bosdyn_2fapi_2fbasic_5fcommand_2eproto.base,
  &scc_info_StandCommand_Request_bosdyn_2fapi_2fbasic_5fcommand_2eproto.base,
  &scc_info_StopCommand_bosdyn_2fapi_2fbasic_5fcommand_2eproto.base,
  &scc_info_StopCommand_Feedback_bosdyn_2fapi_2fbasic_5fcommand_2eproto.base,
  &scc_info_StopCommand_Request_bosdyn_2fapi_2fbasic_5fcommand_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_bosdyn_2fapi_2fbasic_5fcommand_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_bosdyn_2fapi_2fbasic_5fcommand_2eproto = {
  false, false, descriptor_table_protodef_bosdyn_2fapi_2fbasic_5fcommand_2eproto, "bosdyn/api/basic_command.proto", 1347,
  &descriptor_table_bosdyn_2fapi_2fbasic_5fcommand_2eproto_once, descriptor_table_bosdyn_2fapi_2fbasic_5fcommand_2eproto_sccs, descriptor_table_bosdyn_2fapi_2fbasic_5fcommand_2eproto_deps, 24, 3,
  schemas, file_default_instances, TableStruct_bosdyn_2fapi_2fbasic_5fcommand_2eproto::offsets,
  file_level_metadata_bosdyn_2fapi_2fbasic_5fcommand_2eproto, 24, file_level_enum_descriptors_bosdyn_2fapi_2fbasic_5fcommand_2eproto, file_level_service_descriptors_bosdyn_2fapi_2fbasic_5fcommand_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_bosdyn_2fapi_2fbasic_5fcommand_2eproto = (static_cast<void>(::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_bosdyn_2fapi_2fbasic_5fcommand_2eproto)), true);
namespace bosdyn {
namespace api {
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* SafePowerOffCommand_Feedback_Status_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_bosdyn_2fapi_2fbasic_5fcommand_2eproto);
  return file_level_enum_descriptors_bosdyn_2fapi_2fbasic_5fcommand_2eproto[0];
}
bool SafePowerOffCommand_Feedback_Status_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr SafePowerOffCommand_Feedback_Status SafePowerOffCommand_Feedback::STATUS_UNKNOWN;
constexpr SafePowerOffCommand_Feedback_Status SafePowerOffCommand_Feedback::STATUS_POWERED_OFF;
constexpr SafePowerOffCommand_Feedback_Status SafePowerOffCommand_Feedback::STATUS_IN_PROGRESS;
constexpr SafePowerOffCommand_Feedback_Status SafePowerOffCommand_Feedback::Status_MIN;
constexpr SafePowerOffCommand_Feedback_Status SafePowerOffCommand_Feedback::Status_MAX;
constexpr int SafePowerOffCommand_Feedback::Status_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* SE2TrajectoryCommand_Feedback_Status_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_bosdyn_2fapi_2fbasic_5fcommand_2eproto);
  return file_level_enum_descriptors_bosdyn_2fapi_2fbasic_5fcommand_2eproto[1];
}
bool SE2TrajectoryCommand_Feedback_Status_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr SE2TrajectoryCommand_Feedback_Status SE2TrajectoryCommand_Feedback::STATUS_UNKNOWN;
constexpr SE2TrajectoryCommand_Feedback_Status SE2TrajectoryCommand_Feedback::STATUS_AT_GOAL;
constexpr SE2TrajectoryCommand_Feedback_Status SE2TrajectoryCommand_Feedback::STATUS_GOING_TO_GOAL;
constexpr SE2TrajectoryCommand_Feedback_Status SE2TrajectoryCommand_Feedback::Status_MIN;
constexpr SE2TrajectoryCommand_Feedback_Status SE2TrajectoryCommand_Feedback::Status_MAX;
constexpr int SE2TrajectoryCommand_Feedback::Status_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* SitCommand_Feedback_Status_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_bosdyn_2fapi_2fbasic_5fcommand_2eproto);
  return file_level_enum_descriptors_bosdyn_2fapi_2fbasic_5fcommand_2eproto[2];
}
bool SitCommand_Feedback_Status_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr SitCommand_Feedback_Status SitCommand_Feedback::STATUS_UNKNOWN;
constexpr SitCommand_Feedback_Status SitCommand_Feedback::STATUS_IS_SITTING;
constexpr SitCommand_Feedback_Status SitCommand_Feedback::STATUS_IN_PROGRESS;
constexpr SitCommand_Feedback_Status SitCommand_Feedback::Status_MIN;
constexpr SitCommand_Feedback_Status SitCommand_Feedback::Status_MAX;
constexpr int SitCommand_Feedback::Status_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* StandCommand_Feedback_Status_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_bosdyn_2fapi_2fbasic_5fcommand_2eproto);
  return file_level_enum_descriptors_bosdyn_2fapi_2fbasic_5fcommand_2eproto[3];
}
bool StandCommand_Feedback_Status_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr StandCommand_Feedback_Status StandCommand_Feedback::STATUS_UNKNOWN;
constexpr StandCommand_Feedback_Status StandCommand_Feedback::STATUS_IS_STANDING;
constexpr StandCommand_Feedback_Status StandCommand_Feedback::STATUS_IN_PROGRESS;
constexpr StandCommand_Feedback_Status StandCommand_Feedback::Status_MIN;
constexpr StandCommand_Feedback_Status StandCommand_Feedback::Status_MAX;
constexpr int StandCommand_Feedback::Status_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)

// ===================================================================

void SelfRightCommand_Request::InitAsDefaultInstance() {
}
class SelfRightCommand_Request::_Internal {
 public:
};

SelfRightCommand_Request::SelfRightCommand_Request(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:bosdyn.api.SelfRightCommand.Request)
}
SelfRightCommand_Request::SelfRightCommand_Request(const SelfRightCommand_Request& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:bosdyn.api.SelfRightCommand.Request)
}

void SelfRightCommand_Request::SharedCtor() {
}

SelfRightCommand_Request::~SelfRightCommand_Request() {
  // @@protoc_insertion_point(destructor:bosdyn.api.SelfRightCommand.Request)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void SelfRightCommand_Request::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void SelfRightCommand_Request::ArenaDtor(void* object) {
  SelfRightCommand_Request* _this = reinterpret_cast< SelfRightCommand_Request* >(object);
  (void)_this;
}
void SelfRightCommand_Request::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SelfRightCommand_Request::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SelfRightCommand_Request& SelfRightCommand_Request::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_SelfRightCommand_Request_bosdyn_2fapi_2fbasic_5fcommand_2eproto.base);
  return *internal_default_instance();
}


void SelfRightCommand_Request::Clear() {
// @@protoc_insertion_point(message_clear_start:bosdyn.api.SelfRightCommand.Request)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SelfRightCommand_Request::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SelfRightCommand_Request::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:bosdyn.api.SelfRightCommand.Request)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:bosdyn.api.SelfRightCommand.Request)
  return target;
}

size_t SelfRightCommand_Request::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bosdyn.api.SelfRightCommand.Request)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SelfRightCommand_Request::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bosdyn.api.SelfRightCommand.Request)
  GOOGLE_DCHECK_NE(&from, this);
  const SelfRightCommand_Request* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SelfRightCommand_Request>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bosdyn.api.SelfRightCommand.Request)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bosdyn.api.SelfRightCommand.Request)
    MergeFrom(*source);
  }
}

void SelfRightCommand_Request::MergeFrom(const SelfRightCommand_Request& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bosdyn.api.SelfRightCommand.Request)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void SelfRightCommand_Request::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bosdyn.api.SelfRightCommand.Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SelfRightCommand_Request::CopyFrom(const SelfRightCommand_Request& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bosdyn.api.SelfRightCommand.Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SelfRightCommand_Request::IsInitialized() const {
  return true;
}

void SelfRightCommand_Request::InternalSwap(SelfRightCommand_Request* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SelfRightCommand_Request::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void SelfRightCommand_Feedback::InitAsDefaultInstance() {
}
class SelfRightCommand_Feedback::_Internal {
 public:
};

SelfRightCommand_Feedback::SelfRightCommand_Feedback(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:bosdyn.api.SelfRightCommand.Feedback)
}
SelfRightCommand_Feedback::SelfRightCommand_Feedback(const SelfRightCommand_Feedback& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:bosdyn.api.SelfRightCommand.Feedback)
}

void SelfRightCommand_Feedback::SharedCtor() {
}

SelfRightCommand_Feedback::~SelfRightCommand_Feedback() {
  // @@protoc_insertion_point(destructor:bosdyn.api.SelfRightCommand.Feedback)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void SelfRightCommand_Feedback::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void SelfRightCommand_Feedback::ArenaDtor(void* object) {
  SelfRightCommand_Feedback* _this = reinterpret_cast< SelfRightCommand_Feedback* >(object);
  (void)_this;
}
void SelfRightCommand_Feedback::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SelfRightCommand_Feedback::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SelfRightCommand_Feedback& SelfRightCommand_Feedback::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_SelfRightCommand_Feedback_bosdyn_2fapi_2fbasic_5fcommand_2eproto.base);
  return *internal_default_instance();
}


void SelfRightCommand_Feedback::Clear() {
// @@protoc_insertion_point(message_clear_start:bosdyn.api.SelfRightCommand.Feedback)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SelfRightCommand_Feedback::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SelfRightCommand_Feedback::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:bosdyn.api.SelfRightCommand.Feedback)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:bosdyn.api.SelfRightCommand.Feedback)
  return target;
}

size_t SelfRightCommand_Feedback::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bosdyn.api.SelfRightCommand.Feedback)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SelfRightCommand_Feedback::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bosdyn.api.SelfRightCommand.Feedback)
  GOOGLE_DCHECK_NE(&from, this);
  const SelfRightCommand_Feedback* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SelfRightCommand_Feedback>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bosdyn.api.SelfRightCommand.Feedback)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bosdyn.api.SelfRightCommand.Feedback)
    MergeFrom(*source);
  }
}

void SelfRightCommand_Feedback::MergeFrom(const SelfRightCommand_Feedback& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bosdyn.api.SelfRightCommand.Feedback)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void SelfRightCommand_Feedback::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bosdyn.api.SelfRightCommand.Feedback)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SelfRightCommand_Feedback::CopyFrom(const SelfRightCommand_Feedback& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bosdyn.api.SelfRightCommand.Feedback)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SelfRightCommand_Feedback::IsInitialized() const {
  return true;
}

void SelfRightCommand_Feedback::InternalSwap(SelfRightCommand_Feedback* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SelfRightCommand_Feedback::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void SelfRightCommand::InitAsDefaultInstance() {
}
class SelfRightCommand::_Internal {
 public:
};

SelfRightCommand::SelfRightCommand(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:bosdyn.api.SelfRightCommand)
}
SelfRightCommand::SelfRightCommand(const SelfRightCommand& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:bosdyn.api.SelfRightCommand)
}

void SelfRightCommand::SharedCtor() {
}

SelfRightCommand::~SelfRightCommand() {
  // @@protoc_insertion_point(destructor:bosdyn.api.SelfRightCommand)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void SelfRightCommand::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void SelfRightCommand::ArenaDtor(void* object) {
  SelfRightCommand* _this = reinterpret_cast< SelfRightCommand* >(object);
  (void)_this;
}
void SelfRightCommand::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SelfRightCommand::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SelfRightCommand& SelfRightCommand::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_SelfRightCommand_bosdyn_2fapi_2fbasic_5fcommand_2eproto.base);
  return *internal_default_instance();
}


void SelfRightCommand::Clear() {
// @@protoc_insertion_point(message_clear_start:bosdyn.api.SelfRightCommand)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SelfRightCommand::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SelfRightCommand::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:bosdyn.api.SelfRightCommand)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:bosdyn.api.SelfRightCommand)
  return target;
}

size_t SelfRightCommand::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bosdyn.api.SelfRightCommand)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SelfRightCommand::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bosdyn.api.SelfRightCommand)
  GOOGLE_DCHECK_NE(&from, this);
  const SelfRightCommand* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SelfRightCommand>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bosdyn.api.SelfRightCommand)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bosdyn.api.SelfRightCommand)
    MergeFrom(*source);
  }
}

void SelfRightCommand::MergeFrom(const SelfRightCommand& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bosdyn.api.SelfRightCommand)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void SelfRightCommand::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bosdyn.api.SelfRightCommand)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SelfRightCommand::CopyFrom(const SelfRightCommand& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bosdyn.api.SelfRightCommand)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SelfRightCommand::IsInitialized() const {
  return true;
}

void SelfRightCommand::InternalSwap(SelfRightCommand* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SelfRightCommand::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void StopCommand_Request::InitAsDefaultInstance() {
}
class StopCommand_Request::_Internal {
 public:
};

StopCommand_Request::StopCommand_Request(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:bosdyn.api.StopCommand.Request)
}
StopCommand_Request::StopCommand_Request(const StopCommand_Request& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:bosdyn.api.StopCommand.Request)
}

void StopCommand_Request::SharedCtor() {
}

StopCommand_Request::~StopCommand_Request() {
  // @@protoc_insertion_point(destructor:bosdyn.api.StopCommand.Request)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void StopCommand_Request::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void StopCommand_Request::ArenaDtor(void* object) {
  StopCommand_Request* _this = reinterpret_cast< StopCommand_Request* >(object);
  (void)_this;
}
void StopCommand_Request::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void StopCommand_Request::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const StopCommand_Request& StopCommand_Request::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_StopCommand_Request_bosdyn_2fapi_2fbasic_5fcommand_2eproto.base);
  return *internal_default_instance();
}


void StopCommand_Request::Clear() {
// @@protoc_insertion_point(message_clear_start:bosdyn.api.StopCommand.Request)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* StopCommand_Request::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* StopCommand_Request::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:bosdyn.api.StopCommand.Request)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:bosdyn.api.StopCommand.Request)
  return target;
}

size_t StopCommand_Request::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bosdyn.api.StopCommand.Request)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void StopCommand_Request::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bosdyn.api.StopCommand.Request)
  GOOGLE_DCHECK_NE(&from, this);
  const StopCommand_Request* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<StopCommand_Request>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bosdyn.api.StopCommand.Request)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bosdyn.api.StopCommand.Request)
    MergeFrom(*source);
  }
}

void StopCommand_Request::MergeFrom(const StopCommand_Request& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bosdyn.api.StopCommand.Request)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void StopCommand_Request::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bosdyn.api.StopCommand.Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StopCommand_Request::CopyFrom(const StopCommand_Request& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bosdyn.api.StopCommand.Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StopCommand_Request::IsInitialized() const {
  return true;
}

void StopCommand_Request::InternalSwap(StopCommand_Request* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata StopCommand_Request::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void StopCommand_Feedback::InitAsDefaultInstance() {
}
class StopCommand_Feedback::_Internal {
 public:
};

StopCommand_Feedback::StopCommand_Feedback(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:bosdyn.api.StopCommand.Feedback)
}
StopCommand_Feedback::StopCommand_Feedback(const StopCommand_Feedback& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:bosdyn.api.StopCommand.Feedback)
}

void StopCommand_Feedback::SharedCtor() {
}

StopCommand_Feedback::~StopCommand_Feedback() {
  // @@protoc_insertion_point(destructor:bosdyn.api.StopCommand.Feedback)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void StopCommand_Feedback::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void StopCommand_Feedback::ArenaDtor(void* object) {
  StopCommand_Feedback* _this = reinterpret_cast< StopCommand_Feedback* >(object);
  (void)_this;
}
void StopCommand_Feedback::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void StopCommand_Feedback::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const StopCommand_Feedback& StopCommand_Feedback::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_StopCommand_Feedback_bosdyn_2fapi_2fbasic_5fcommand_2eproto.base);
  return *internal_default_instance();
}


void StopCommand_Feedback::Clear() {
// @@protoc_insertion_point(message_clear_start:bosdyn.api.StopCommand.Feedback)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* StopCommand_Feedback::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* StopCommand_Feedback::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:bosdyn.api.StopCommand.Feedback)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:bosdyn.api.StopCommand.Feedback)
  return target;
}

size_t StopCommand_Feedback::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bosdyn.api.StopCommand.Feedback)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void StopCommand_Feedback::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bosdyn.api.StopCommand.Feedback)
  GOOGLE_DCHECK_NE(&from, this);
  const StopCommand_Feedback* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<StopCommand_Feedback>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bosdyn.api.StopCommand.Feedback)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bosdyn.api.StopCommand.Feedback)
    MergeFrom(*source);
  }
}

void StopCommand_Feedback::MergeFrom(const StopCommand_Feedback& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bosdyn.api.StopCommand.Feedback)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void StopCommand_Feedback::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bosdyn.api.StopCommand.Feedback)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StopCommand_Feedback::CopyFrom(const StopCommand_Feedback& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bosdyn.api.StopCommand.Feedback)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StopCommand_Feedback::IsInitialized() const {
  return true;
}

void StopCommand_Feedback::InternalSwap(StopCommand_Feedback* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata StopCommand_Feedback::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void StopCommand::InitAsDefaultInstance() {
}
class StopCommand::_Internal {
 public:
};

StopCommand::StopCommand(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:bosdyn.api.StopCommand)
}
StopCommand::StopCommand(const StopCommand& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:bosdyn.api.StopCommand)
}

void StopCommand::SharedCtor() {
}

StopCommand::~StopCommand() {
  // @@protoc_insertion_point(destructor:bosdyn.api.StopCommand)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void StopCommand::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void StopCommand::ArenaDtor(void* object) {
  StopCommand* _this = reinterpret_cast< StopCommand* >(object);
  (void)_this;
}
void StopCommand::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void StopCommand::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const StopCommand& StopCommand::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_StopCommand_bosdyn_2fapi_2fbasic_5fcommand_2eproto.base);
  return *internal_default_instance();
}


void StopCommand::Clear() {
// @@protoc_insertion_point(message_clear_start:bosdyn.api.StopCommand)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* StopCommand::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* StopCommand::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:bosdyn.api.StopCommand)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:bosdyn.api.StopCommand)
  return target;
}

size_t StopCommand::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bosdyn.api.StopCommand)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void StopCommand::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bosdyn.api.StopCommand)
  GOOGLE_DCHECK_NE(&from, this);
  const StopCommand* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<StopCommand>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bosdyn.api.StopCommand)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bosdyn.api.StopCommand)
    MergeFrom(*source);
  }
}

void StopCommand::MergeFrom(const StopCommand& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bosdyn.api.StopCommand)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void StopCommand::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bosdyn.api.StopCommand)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StopCommand::CopyFrom(const StopCommand& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bosdyn.api.StopCommand)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StopCommand::IsInitialized() const {
  return true;
}

void StopCommand::InternalSwap(StopCommand* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata StopCommand::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void FreezeCommand_Request::InitAsDefaultInstance() {
}
class FreezeCommand_Request::_Internal {
 public:
};

FreezeCommand_Request::FreezeCommand_Request(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:bosdyn.api.FreezeCommand.Request)
}
FreezeCommand_Request::FreezeCommand_Request(const FreezeCommand_Request& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:bosdyn.api.FreezeCommand.Request)
}

void FreezeCommand_Request::SharedCtor() {
}

FreezeCommand_Request::~FreezeCommand_Request() {
  // @@protoc_insertion_point(destructor:bosdyn.api.FreezeCommand.Request)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void FreezeCommand_Request::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void FreezeCommand_Request::ArenaDtor(void* object) {
  FreezeCommand_Request* _this = reinterpret_cast< FreezeCommand_Request* >(object);
  (void)_this;
}
void FreezeCommand_Request::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void FreezeCommand_Request::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const FreezeCommand_Request& FreezeCommand_Request::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_FreezeCommand_Request_bosdyn_2fapi_2fbasic_5fcommand_2eproto.base);
  return *internal_default_instance();
}


void FreezeCommand_Request::Clear() {
// @@protoc_insertion_point(message_clear_start:bosdyn.api.FreezeCommand.Request)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* FreezeCommand_Request::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* FreezeCommand_Request::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:bosdyn.api.FreezeCommand.Request)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:bosdyn.api.FreezeCommand.Request)
  return target;
}

size_t FreezeCommand_Request::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bosdyn.api.FreezeCommand.Request)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void FreezeCommand_Request::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bosdyn.api.FreezeCommand.Request)
  GOOGLE_DCHECK_NE(&from, this);
  const FreezeCommand_Request* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<FreezeCommand_Request>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bosdyn.api.FreezeCommand.Request)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bosdyn.api.FreezeCommand.Request)
    MergeFrom(*source);
  }
}

void FreezeCommand_Request::MergeFrom(const FreezeCommand_Request& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bosdyn.api.FreezeCommand.Request)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void FreezeCommand_Request::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bosdyn.api.FreezeCommand.Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FreezeCommand_Request::CopyFrom(const FreezeCommand_Request& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bosdyn.api.FreezeCommand.Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FreezeCommand_Request::IsInitialized() const {
  return true;
}

void FreezeCommand_Request::InternalSwap(FreezeCommand_Request* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata FreezeCommand_Request::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void FreezeCommand_Feedback::InitAsDefaultInstance() {
}
class FreezeCommand_Feedback::_Internal {
 public:
};

FreezeCommand_Feedback::FreezeCommand_Feedback(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:bosdyn.api.FreezeCommand.Feedback)
}
FreezeCommand_Feedback::FreezeCommand_Feedback(const FreezeCommand_Feedback& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:bosdyn.api.FreezeCommand.Feedback)
}

void FreezeCommand_Feedback::SharedCtor() {
}

FreezeCommand_Feedback::~FreezeCommand_Feedback() {
  // @@protoc_insertion_point(destructor:bosdyn.api.FreezeCommand.Feedback)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void FreezeCommand_Feedback::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void FreezeCommand_Feedback::ArenaDtor(void* object) {
  FreezeCommand_Feedback* _this = reinterpret_cast< FreezeCommand_Feedback* >(object);
  (void)_this;
}
void FreezeCommand_Feedback::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void FreezeCommand_Feedback::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const FreezeCommand_Feedback& FreezeCommand_Feedback::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_FreezeCommand_Feedback_bosdyn_2fapi_2fbasic_5fcommand_2eproto.base);
  return *internal_default_instance();
}


void FreezeCommand_Feedback::Clear() {
// @@protoc_insertion_point(message_clear_start:bosdyn.api.FreezeCommand.Feedback)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* FreezeCommand_Feedback::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* FreezeCommand_Feedback::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:bosdyn.api.FreezeCommand.Feedback)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:bosdyn.api.FreezeCommand.Feedback)
  return target;
}

size_t FreezeCommand_Feedback::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bosdyn.api.FreezeCommand.Feedback)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void FreezeCommand_Feedback::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bosdyn.api.FreezeCommand.Feedback)
  GOOGLE_DCHECK_NE(&from, this);
  const FreezeCommand_Feedback* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<FreezeCommand_Feedback>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bosdyn.api.FreezeCommand.Feedback)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bosdyn.api.FreezeCommand.Feedback)
    MergeFrom(*source);
  }
}

void FreezeCommand_Feedback::MergeFrom(const FreezeCommand_Feedback& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bosdyn.api.FreezeCommand.Feedback)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void FreezeCommand_Feedback::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bosdyn.api.FreezeCommand.Feedback)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FreezeCommand_Feedback::CopyFrom(const FreezeCommand_Feedback& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bosdyn.api.FreezeCommand.Feedback)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FreezeCommand_Feedback::IsInitialized() const {
  return true;
}

void FreezeCommand_Feedback::InternalSwap(FreezeCommand_Feedback* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata FreezeCommand_Feedback::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void FreezeCommand::InitAsDefaultInstance() {
}
class FreezeCommand::_Internal {
 public:
};

FreezeCommand::FreezeCommand(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:bosdyn.api.FreezeCommand)
}
FreezeCommand::FreezeCommand(const FreezeCommand& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:bosdyn.api.FreezeCommand)
}

void FreezeCommand::SharedCtor() {
}

FreezeCommand::~FreezeCommand() {
  // @@protoc_insertion_point(destructor:bosdyn.api.FreezeCommand)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void FreezeCommand::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void FreezeCommand::ArenaDtor(void* object) {
  FreezeCommand* _this = reinterpret_cast< FreezeCommand* >(object);
  (void)_this;
}
void FreezeCommand::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void FreezeCommand::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const FreezeCommand& FreezeCommand::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_FreezeCommand_bosdyn_2fapi_2fbasic_5fcommand_2eproto.base);
  return *internal_default_instance();
}


void FreezeCommand::Clear() {
// @@protoc_insertion_point(message_clear_start:bosdyn.api.FreezeCommand)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* FreezeCommand::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* FreezeCommand::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:bosdyn.api.FreezeCommand)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:bosdyn.api.FreezeCommand)
  return target;
}

size_t FreezeCommand::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bosdyn.api.FreezeCommand)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void FreezeCommand::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bosdyn.api.FreezeCommand)
  GOOGLE_DCHECK_NE(&from, this);
  const FreezeCommand* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<FreezeCommand>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bosdyn.api.FreezeCommand)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bosdyn.api.FreezeCommand)
    MergeFrom(*source);
  }
}

void FreezeCommand::MergeFrom(const FreezeCommand& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bosdyn.api.FreezeCommand)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void FreezeCommand::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bosdyn.api.FreezeCommand)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FreezeCommand::CopyFrom(const FreezeCommand& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bosdyn.api.FreezeCommand)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FreezeCommand::IsInitialized() const {
  return true;
}

void FreezeCommand::InternalSwap(FreezeCommand* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata FreezeCommand::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void SafePowerOffCommand_Request::InitAsDefaultInstance() {
}
class SafePowerOffCommand_Request::_Internal {
 public:
};

SafePowerOffCommand_Request::SafePowerOffCommand_Request(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:bosdyn.api.SafePowerOffCommand.Request)
}
SafePowerOffCommand_Request::SafePowerOffCommand_Request(const SafePowerOffCommand_Request& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:bosdyn.api.SafePowerOffCommand.Request)
}

void SafePowerOffCommand_Request::SharedCtor() {
}

SafePowerOffCommand_Request::~SafePowerOffCommand_Request() {
  // @@protoc_insertion_point(destructor:bosdyn.api.SafePowerOffCommand.Request)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void SafePowerOffCommand_Request::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void SafePowerOffCommand_Request::ArenaDtor(void* object) {
  SafePowerOffCommand_Request* _this = reinterpret_cast< SafePowerOffCommand_Request* >(object);
  (void)_this;
}
void SafePowerOffCommand_Request::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SafePowerOffCommand_Request::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SafePowerOffCommand_Request& SafePowerOffCommand_Request::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_SafePowerOffCommand_Request_bosdyn_2fapi_2fbasic_5fcommand_2eproto.base);
  return *internal_default_instance();
}


void SafePowerOffCommand_Request::Clear() {
// @@protoc_insertion_point(message_clear_start:bosdyn.api.SafePowerOffCommand.Request)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SafePowerOffCommand_Request::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SafePowerOffCommand_Request::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:bosdyn.api.SafePowerOffCommand.Request)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:bosdyn.api.SafePowerOffCommand.Request)
  return target;
}

size_t SafePowerOffCommand_Request::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bosdyn.api.SafePowerOffCommand.Request)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SafePowerOffCommand_Request::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bosdyn.api.SafePowerOffCommand.Request)
  GOOGLE_DCHECK_NE(&from, this);
  const SafePowerOffCommand_Request* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SafePowerOffCommand_Request>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bosdyn.api.SafePowerOffCommand.Request)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bosdyn.api.SafePowerOffCommand.Request)
    MergeFrom(*source);
  }
}

void SafePowerOffCommand_Request::MergeFrom(const SafePowerOffCommand_Request& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bosdyn.api.SafePowerOffCommand.Request)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void SafePowerOffCommand_Request::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bosdyn.api.SafePowerOffCommand.Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SafePowerOffCommand_Request::CopyFrom(const SafePowerOffCommand_Request& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bosdyn.api.SafePowerOffCommand.Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SafePowerOffCommand_Request::IsInitialized() const {
  return true;
}

void SafePowerOffCommand_Request::InternalSwap(SafePowerOffCommand_Request* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SafePowerOffCommand_Request::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void SafePowerOffCommand_Feedback::InitAsDefaultInstance() {
}
class SafePowerOffCommand_Feedback::_Internal {
 public:
};

SafePowerOffCommand_Feedback::SafePowerOffCommand_Feedback(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:bosdyn.api.SafePowerOffCommand.Feedback)
}
SafePowerOffCommand_Feedback::SafePowerOffCommand_Feedback(const SafePowerOffCommand_Feedback& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  status_ = from.status_;
  // @@protoc_insertion_point(copy_constructor:bosdyn.api.SafePowerOffCommand.Feedback)
}

void SafePowerOffCommand_Feedback::SharedCtor() {
  status_ = 0;
}

SafePowerOffCommand_Feedback::~SafePowerOffCommand_Feedback() {
  // @@protoc_insertion_point(destructor:bosdyn.api.SafePowerOffCommand.Feedback)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void SafePowerOffCommand_Feedback::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void SafePowerOffCommand_Feedback::ArenaDtor(void* object) {
  SafePowerOffCommand_Feedback* _this = reinterpret_cast< SafePowerOffCommand_Feedback* >(object);
  (void)_this;
}
void SafePowerOffCommand_Feedback::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SafePowerOffCommand_Feedback::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SafePowerOffCommand_Feedback& SafePowerOffCommand_Feedback::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_SafePowerOffCommand_Feedback_bosdyn_2fapi_2fbasic_5fcommand_2eproto.base);
  return *internal_default_instance();
}


void SafePowerOffCommand_Feedback::Clear() {
// @@protoc_insertion_point(message_clear_start:bosdyn.api.SafePowerOffCommand.Feedback)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  status_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SafePowerOffCommand_Feedback::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .bosdyn.api.SafePowerOffCommand.Feedback.Status status = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_status(static_cast<::bosdyn::api::SafePowerOffCommand_Feedback_Status>(val));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SafePowerOffCommand_Feedback::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:bosdyn.api.SafePowerOffCommand.Feedback)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .bosdyn.api.SafePowerOffCommand.Feedback.Status status = 1;
  if (this->status() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->_internal_status(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:bosdyn.api.SafePowerOffCommand.Feedback)
  return target;
}

size_t SafePowerOffCommand_Feedback::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bosdyn.api.SafePowerOffCommand.Feedback)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .bosdyn.api.SafePowerOffCommand.Feedback.Status status = 1;
  if (this->status() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_status());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SafePowerOffCommand_Feedback::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bosdyn.api.SafePowerOffCommand.Feedback)
  GOOGLE_DCHECK_NE(&from, this);
  const SafePowerOffCommand_Feedback* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SafePowerOffCommand_Feedback>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bosdyn.api.SafePowerOffCommand.Feedback)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bosdyn.api.SafePowerOffCommand.Feedback)
    MergeFrom(*source);
  }
}

void SafePowerOffCommand_Feedback::MergeFrom(const SafePowerOffCommand_Feedback& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bosdyn.api.SafePowerOffCommand.Feedback)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.status() != 0) {
    _internal_set_status(from._internal_status());
  }
}

void SafePowerOffCommand_Feedback::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bosdyn.api.SafePowerOffCommand.Feedback)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SafePowerOffCommand_Feedback::CopyFrom(const SafePowerOffCommand_Feedback& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bosdyn.api.SafePowerOffCommand.Feedback)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SafePowerOffCommand_Feedback::IsInitialized() const {
  return true;
}

void SafePowerOffCommand_Feedback::InternalSwap(SafePowerOffCommand_Feedback* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(status_, other->status_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SafePowerOffCommand_Feedback::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void SafePowerOffCommand::InitAsDefaultInstance() {
}
class SafePowerOffCommand::_Internal {
 public:
};

SafePowerOffCommand::SafePowerOffCommand(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:bosdyn.api.SafePowerOffCommand)
}
SafePowerOffCommand::SafePowerOffCommand(const SafePowerOffCommand& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:bosdyn.api.SafePowerOffCommand)
}

void SafePowerOffCommand::SharedCtor() {
}

SafePowerOffCommand::~SafePowerOffCommand() {
  // @@protoc_insertion_point(destructor:bosdyn.api.SafePowerOffCommand)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void SafePowerOffCommand::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void SafePowerOffCommand::ArenaDtor(void* object) {
  SafePowerOffCommand* _this = reinterpret_cast< SafePowerOffCommand* >(object);
  (void)_this;
}
void SafePowerOffCommand::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SafePowerOffCommand::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SafePowerOffCommand& SafePowerOffCommand::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_SafePowerOffCommand_bosdyn_2fapi_2fbasic_5fcommand_2eproto.base);
  return *internal_default_instance();
}


void SafePowerOffCommand::Clear() {
// @@protoc_insertion_point(message_clear_start:bosdyn.api.SafePowerOffCommand)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SafePowerOffCommand::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SafePowerOffCommand::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:bosdyn.api.SafePowerOffCommand)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:bosdyn.api.SafePowerOffCommand)
  return target;
}

size_t SafePowerOffCommand::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bosdyn.api.SafePowerOffCommand)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SafePowerOffCommand::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bosdyn.api.SafePowerOffCommand)
  GOOGLE_DCHECK_NE(&from, this);
  const SafePowerOffCommand* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SafePowerOffCommand>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bosdyn.api.SafePowerOffCommand)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bosdyn.api.SafePowerOffCommand)
    MergeFrom(*source);
  }
}

void SafePowerOffCommand::MergeFrom(const SafePowerOffCommand& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bosdyn.api.SafePowerOffCommand)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void SafePowerOffCommand::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bosdyn.api.SafePowerOffCommand)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SafePowerOffCommand::CopyFrom(const SafePowerOffCommand& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bosdyn.api.SafePowerOffCommand)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SafePowerOffCommand::IsInitialized() const {
  return true;
}

void SafePowerOffCommand::InternalSwap(SafePowerOffCommand* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SafePowerOffCommand::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void SE2TrajectoryCommand_Request::InitAsDefaultInstance() {
  ::bosdyn::api::_SE2TrajectoryCommand_Request_default_instance_._instance.get_mutable()->end_time_ = const_cast< PROTOBUF_NAMESPACE_ID::Timestamp*>(
      PROTOBUF_NAMESPACE_ID::Timestamp::internal_default_instance());
  ::bosdyn::api::_SE2TrajectoryCommand_Request_default_instance_._instance.get_mutable()->trajectory_ = const_cast< ::bosdyn::api::SE2Trajectory*>(
      ::bosdyn::api::SE2Trajectory::internal_default_instance());
}
class SE2TrajectoryCommand_Request::_Internal {
 public:
  static const PROTOBUF_NAMESPACE_ID::Timestamp& end_time(const SE2TrajectoryCommand_Request* msg);
  static const ::bosdyn::api::SE2Trajectory& trajectory(const SE2TrajectoryCommand_Request* msg);
};

const PROTOBUF_NAMESPACE_ID::Timestamp&
SE2TrajectoryCommand_Request::_Internal::end_time(const SE2TrajectoryCommand_Request* msg) {
  return *msg->end_time_;
}
const ::bosdyn::api::SE2Trajectory&
SE2TrajectoryCommand_Request::_Internal::trajectory(const SE2TrajectoryCommand_Request* msg) {
  return *msg->trajectory_;
}
void SE2TrajectoryCommand_Request::clear_end_time() {
  if (GetArena() == nullptr && end_time_ != nullptr) {
    delete end_time_;
  }
  end_time_ = nullptr;
}
void SE2TrajectoryCommand_Request::clear_trajectory() {
  if (GetArena() == nullptr && trajectory_ != nullptr) {
    delete trajectory_;
  }
  trajectory_ = nullptr;
}
SE2TrajectoryCommand_Request::SE2TrajectoryCommand_Request(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:bosdyn.api.SE2TrajectoryCommand.Request)
}
SE2TrajectoryCommand_Request::SE2TrajectoryCommand_Request(const SE2TrajectoryCommand_Request& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  se2_frame_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_se2_frame_name().empty()) {
    se2_frame_name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_se2_frame_name(),
      GetArena());
  }
  if (from._internal_has_end_time()) {
    end_time_ = new PROTOBUF_NAMESPACE_ID::Timestamp(*from.end_time_);
  } else {
    end_time_ = nullptr;
  }
  if (from._internal_has_trajectory()) {
    trajectory_ = new ::bosdyn::api::SE2Trajectory(*from.trajectory_);
  } else {
    trajectory_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:bosdyn.api.SE2TrajectoryCommand.Request)
}

void SE2TrajectoryCommand_Request::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_SE2TrajectoryCommand_Request_bosdyn_2fapi_2fbasic_5fcommand_2eproto.base);
  se2_frame_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&end_time_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&trajectory_) -
      reinterpret_cast<char*>(&end_time_)) + sizeof(trajectory_));
}

SE2TrajectoryCommand_Request::~SE2TrajectoryCommand_Request() {
  // @@protoc_insertion_point(destructor:bosdyn.api.SE2TrajectoryCommand.Request)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void SE2TrajectoryCommand_Request::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  se2_frame_name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete end_time_;
  if (this != internal_default_instance()) delete trajectory_;
}

void SE2TrajectoryCommand_Request::ArenaDtor(void* object) {
  SE2TrajectoryCommand_Request* _this = reinterpret_cast< SE2TrajectoryCommand_Request* >(object);
  (void)_this;
}
void SE2TrajectoryCommand_Request::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SE2TrajectoryCommand_Request::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SE2TrajectoryCommand_Request& SE2TrajectoryCommand_Request::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_SE2TrajectoryCommand_Request_bosdyn_2fapi_2fbasic_5fcommand_2eproto.base);
  return *internal_default_instance();
}


void SE2TrajectoryCommand_Request::Clear() {
// @@protoc_insertion_point(message_clear_start:bosdyn.api.SE2TrajectoryCommand.Request)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  se2_frame_name_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  if (GetArena() == nullptr && end_time_ != nullptr) {
    delete end_time_;
  }
  end_time_ = nullptr;
  if (GetArena() == nullptr && trajectory_ != nullptr) {
    delete trajectory_;
  }
  trajectory_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SE2TrajectoryCommand_Request::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .google.protobuf.Timestamp end_time = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_end_time(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .bosdyn.api.SE2Trajectory trajectory = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_trajectory(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string se2_frame_name = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_se2_frame_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "bosdyn.api.SE2TrajectoryCommand.Request.se2_frame_name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SE2TrajectoryCommand_Request::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:bosdyn.api.SE2TrajectoryCommand.Request)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.protobuf.Timestamp end_time = 1;
  if (this->has_end_time()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::end_time(this), target, stream);
  }

  // .bosdyn.api.SE2Trajectory trajectory = 2;
  if (this->has_trajectory()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::trajectory(this), target, stream);
  }

  // string se2_frame_name = 3;
  if (this->se2_frame_name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_se2_frame_name().data(), static_cast<int>(this->_internal_se2_frame_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "bosdyn.api.SE2TrajectoryCommand.Request.se2_frame_name");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_se2_frame_name(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:bosdyn.api.SE2TrajectoryCommand.Request)
  return target;
}

size_t SE2TrajectoryCommand_Request::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bosdyn.api.SE2TrajectoryCommand.Request)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string se2_frame_name = 3;
  if (this->se2_frame_name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_se2_frame_name());
  }

  // .google.protobuf.Timestamp end_time = 1;
  if (this->has_end_time()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *end_time_);
  }

  // .bosdyn.api.SE2Trajectory trajectory = 2;
  if (this->has_trajectory()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *trajectory_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SE2TrajectoryCommand_Request::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bosdyn.api.SE2TrajectoryCommand.Request)
  GOOGLE_DCHECK_NE(&from, this);
  const SE2TrajectoryCommand_Request* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SE2TrajectoryCommand_Request>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bosdyn.api.SE2TrajectoryCommand.Request)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bosdyn.api.SE2TrajectoryCommand.Request)
    MergeFrom(*source);
  }
}

void SE2TrajectoryCommand_Request::MergeFrom(const SE2TrajectoryCommand_Request& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bosdyn.api.SE2TrajectoryCommand.Request)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.se2_frame_name().size() > 0) {
    _internal_set_se2_frame_name(from._internal_se2_frame_name());
  }
  if (from.has_end_time()) {
    _internal_mutable_end_time()->PROTOBUF_NAMESPACE_ID::Timestamp::MergeFrom(from._internal_end_time());
  }
  if (from.has_trajectory()) {
    _internal_mutable_trajectory()->::bosdyn::api::SE2Trajectory::MergeFrom(from._internal_trajectory());
  }
}

void SE2TrajectoryCommand_Request::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bosdyn.api.SE2TrajectoryCommand.Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SE2TrajectoryCommand_Request::CopyFrom(const SE2TrajectoryCommand_Request& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bosdyn.api.SE2TrajectoryCommand.Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SE2TrajectoryCommand_Request::IsInitialized() const {
  return true;
}

void SE2TrajectoryCommand_Request::InternalSwap(SE2TrajectoryCommand_Request* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  se2_frame_name_.Swap(&other->se2_frame_name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SE2TrajectoryCommand_Request, trajectory_)
      + sizeof(SE2TrajectoryCommand_Request::trajectory_)
      - PROTOBUF_FIELD_OFFSET(SE2TrajectoryCommand_Request, end_time_)>(
          reinterpret_cast<char*>(&end_time_),
          reinterpret_cast<char*>(&other->end_time_));
}

::PROTOBUF_NAMESPACE_ID::Metadata SE2TrajectoryCommand_Request::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void SE2TrajectoryCommand_Feedback::InitAsDefaultInstance() {
}
class SE2TrajectoryCommand_Feedback::_Internal {
 public:
};

SE2TrajectoryCommand_Feedback::SE2TrajectoryCommand_Feedback(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:bosdyn.api.SE2TrajectoryCommand.Feedback)
}
SE2TrajectoryCommand_Feedback::SE2TrajectoryCommand_Feedback(const SE2TrajectoryCommand_Feedback& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  status_ = from.status_;
  // @@protoc_insertion_point(copy_constructor:bosdyn.api.SE2TrajectoryCommand.Feedback)
}

void SE2TrajectoryCommand_Feedback::SharedCtor() {
  status_ = 0;
}

SE2TrajectoryCommand_Feedback::~SE2TrajectoryCommand_Feedback() {
  // @@protoc_insertion_point(destructor:bosdyn.api.SE2TrajectoryCommand.Feedback)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void SE2TrajectoryCommand_Feedback::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void SE2TrajectoryCommand_Feedback::ArenaDtor(void* object) {
  SE2TrajectoryCommand_Feedback* _this = reinterpret_cast< SE2TrajectoryCommand_Feedback* >(object);
  (void)_this;
}
void SE2TrajectoryCommand_Feedback::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SE2TrajectoryCommand_Feedback::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SE2TrajectoryCommand_Feedback& SE2TrajectoryCommand_Feedback::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_SE2TrajectoryCommand_Feedback_bosdyn_2fapi_2fbasic_5fcommand_2eproto.base);
  return *internal_default_instance();
}


void SE2TrajectoryCommand_Feedback::Clear() {
// @@protoc_insertion_point(message_clear_start:bosdyn.api.SE2TrajectoryCommand.Feedback)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  status_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SE2TrajectoryCommand_Feedback::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .bosdyn.api.SE2TrajectoryCommand.Feedback.Status status = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_status(static_cast<::bosdyn::api::SE2TrajectoryCommand_Feedback_Status>(val));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SE2TrajectoryCommand_Feedback::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:bosdyn.api.SE2TrajectoryCommand.Feedback)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .bosdyn.api.SE2TrajectoryCommand.Feedback.Status status = 1;
  if (this->status() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->_internal_status(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:bosdyn.api.SE2TrajectoryCommand.Feedback)
  return target;
}

size_t SE2TrajectoryCommand_Feedback::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bosdyn.api.SE2TrajectoryCommand.Feedback)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .bosdyn.api.SE2TrajectoryCommand.Feedback.Status status = 1;
  if (this->status() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_status());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SE2TrajectoryCommand_Feedback::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bosdyn.api.SE2TrajectoryCommand.Feedback)
  GOOGLE_DCHECK_NE(&from, this);
  const SE2TrajectoryCommand_Feedback* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SE2TrajectoryCommand_Feedback>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bosdyn.api.SE2TrajectoryCommand.Feedback)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bosdyn.api.SE2TrajectoryCommand.Feedback)
    MergeFrom(*source);
  }
}

void SE2TrajectoryCommand_Feedback::MergeFrom(const SE2TrajectoryCommand_Feedback& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bosdyn.api.SE2TrajectoryCommand.Feedback)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.status() != 0) {
    _internal_set_status(from._internal_status());
  }
}

void SE2TrajectoryCommand_Feedback::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bosdyn.api.SE2TrajectoryCommand.Feedback)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SE2TrajectoryCommand_Feedback::CopyFrom(const SE2TrajectoryCommand_Feedback& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bosdyn.api.SE2TrajectoryCommand.Feedback)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SE2TrajectoryCommand_Feedback::IsInitialized() const {
  return true;
}

void SE2TrajectoryCommand_Feedback::InternalSwap(SE2TrajectoryCommand_Feedback* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(status_, other->status_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SE2TrajectoryCommand_Feedback::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void SE2TrajectoryCommand::InitAsDefaultInstance() {
}
class SE2TrajectoryCommand::_Internal {
 public:
};

SE2TrajectoryCommand::SE2TrajectoryCommand(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:bosdyn.api.SE2TrajectoryCommand)
}
SE2TrajectoryCommand::SE2TrajectoryCommand(const SE2TrajectoryCommand& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:bosdyn.api.SE2TrajectoryCommand)
}

void SE2TrajectoryCommand::SharedCtor() {
}

SE2TrajectoryCommand::~SE2TrajectoryCommand() {
  // @@protoc_insertion_point(destructor:bosdyn.api.SE2TrajectoryCommand)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void SE2TrajectoryCommand::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void SE2TrajectoryCommand::ArenaDtor(void* object) {
  SE2TrajectoryCommand* _this = reinterpret_cast< SE2TrajectoryCommand* >(object);
  (void)_this;
}
void SE2TrajectoryCommand::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SE2TrajectoryCommand::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SE2TrajectoryCommand& SE2TrajectoryCommand::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_SE2TrajectoryCommand_bosdyn_2fapi_2fbasic_5fcommand_2eproto.base);
  return *internal_default_instance();
}


void SE2TrajectoryCommand::Clear() {
// @@protoc_insertion_point(message_clear_start:bosdyn.api.SE2TrajectoryCommand)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SE2TrajectoryCommand::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SE2TrajectoryCommand::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:bosdyn.api.SE2TrajectoryCommand)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:bosdyn.api.SE2TrajectoryCommand)
  return target;
}

size_t SE2TrajectoryCommand::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bosdyn.api.SE2TrajectoryCommand)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SE2TrajectoryCommand::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bosdyn.api.SE2TrajectoryCommand)
  GOOGLE_DCHECK_NE(&from, this);
  const SE2TrajectoryCommand* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SE2TrajectoryCommand>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bosdyn.api.SE2TrajectoryCommand)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bosdyn.api.SE2TrajectoryCommand)
    MergeFrom(*source);
  }
}

void SE2TrajectoryCommand::MergeFrom(const SE2TrajectoryCommand& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bosdyn.api.SE2TrajectoryCommand)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void SE2TrajectoryCommand::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bosdyn.api.SE2TrajectoryCommand)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SE2TrajectoryCommand::CopyFrom(const SE2TrajectoryCommand& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bosdyn.api.SE2TrajectoryCommand)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SE2TrajectoryCommand::IsInitialized() const {
  return true;
}

void SE2TrajectoryCommand::InternalSwap(SE2TrajectoryCommand* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SE2TrajectoryCommand::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void SE2VelocityCommand_Request::InitAsDefaultInstance() {
  ::bosdyn::api::_SE2VelocityCommand_Request_default_instance_._instance.get_mutable()->end_time_ = const_cast< PROTOBUF_NAMESPACE_ID::Timestamp*>(
      PROTOBUF_NAMESPACE_ID::Timestamp::internal_default_instance());
  ::bosdyn::api::_SE2VelocityCommand_Request_default_instance_._instance.get_mutable()->velocity_ = const_cast< ::bosdyn::api::SE2Velocity*>(
      ::bosdyn::api::SE2Velocity::internal_default_instance());
  ::bosdyn::api::_SE2VelocityCommand_Request_default_instance_._instance.get_mutable()->slew_rate_limit_ = const_cast< ::bosdyn::api::SE2Velocity*>(
      ::bosdyn::api::SE2Velocity::internal_default_instance());
}
class SE2VelocityCommand_Request::_Internal {
 public:
  static const PROTOBUF_NAMESPACE_ID::Timestamp& end_time(const SE2VelocityCommand_Request* msg);
  static const ::bosdyn::api::SE2Velocity& velocity(const SE2VelocityCommand_Request* msg);
  static const ::bosdyn::api::SE2Velocity& slew_rate_limit(const SE2VelocityCommand_Request* msg);
};

const PROTOBUF_NAMESPACE_ID::Timestamp&
SE2VelocityCommand_Request::_Internal::end_time(const SE2VelocityCommand_Request* msg) {
  return *msg->end_time_;
}
const ::bosdyn::api::SE2Velocity&
SE2VelocityCommand_Request::_Internal::velocity(const SE2VelocityCommand_Request* msg) {
  return *msg->velocity_;
}
const ::bosdyn::api::SE2Velocity&
SE2VelocityCommand_Request::_Internal::slew_rate_limit(const SE2VelocityCommand_Request* msg) {
  return *msg->slew_rate_limit_;
}
void SE2VelocityCommand_Request::clear_end_time() {
  if (GetArena() == nullptr && end_time_ != nullptr) {
    delete end_time_;
  }
  end_time_ = nullptr;
}
void SE2VelocityCommand_Request::clear_velocity() {
  if (GetArena() == nullptr && velocity_ != nullptr) {
    delete velocity_;
  }
  velocity_ = nullptr;
}
void SE2VelocityCommand_Request::clear_slew_rate_limit() {
  if (GetArena() == nullptr && slew_rate_limit_ != nullptr) {
    delete slew_rate_limit_;
  }
  slew_rate_limit_ = nullptr;
}
SE2VelocityCommand_Request::SE2VelocityCommand_Request(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:bosdyn.api.SE2VelocityCommand.Request)
}
SE2VelocityCommand_Request::SE2VelocityCommand_Request(const SE2VelocityCommand_Request& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  se2_frame_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_se2_frame_name().empty()) {
    se2_frame_name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_se2_frame_name(),
      GetArena());
  }
  if (from._internal_has_end_time()) {
    end_time_ = new PROTOBUF_NAMESPACE_ID::Timestamp(*from.end_time_);
  } else {
    end_time_ = nullptr;
  }
  if (from._internal_has_velocity()) {
    velocity_ = new ::bosdyn::api::SE2Velocity(*from.velocity_);
  } else {
    velocity_ = nullptr;
  }
  if (from._internal_has_slew_rate_limit()) {
    slew_rate_limit_ = new ::bosdyn::api::SE2Velocity(*from.slew_rate_limit_);
  } else {
    slew_rate_limit_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:bosdyn.api.SE2VelocityCommand.Request)
}

void SE2VelocityCommand_Request::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_SE2VelocityCommand_Request_bosdyn_2fapi_2fbasic_5fcommand_2eproto.base);
  se2_frame_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&end_time_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&slew_rate_limit_) -
      reinterpret_cast<char*>(&end_time_)) + sizeof(slew_rate_limit_));
}

SE2VelocityCommand_Request::~SE2VelocityCommand_Request() {
  // @@protoc_insertion_point(destructor:bosdyn.api.SE2VelocityCommand.Request)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void SE2VelocityCommand_Request::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  se2_frame_name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete end_time_;
  if (this != internal_default_instance()) delete velocity_;
  if (this != internal_default_instance()) delete slew_rate_limit_;
}

void SE2VelocityCommand_Request::ArenaDtor(void* object) {
  SE2VelocityCommand_Request* _this = reinterpret_cast< SE2VelocityCommand_Request* >(object);
  (void)_this;
}
void SE2VelocityCommand_Request::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SE2VelocityCommand_Request::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SE2VelocityCommand_Request& SE2VelocityCommand_Request::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_SE2VelocityCommand_Request_bosdyn_2fapi_2fbasic_5fcommand_2eproto.base);
  return *internal_default_instance();
}


void SE2VelocityCommand_Request::Clear() {
// @@protoc_insertion_point(message_clear_start:bosdyn.api.SE2VelocityCommand.Request)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  se2_frame_name_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  if (GetArena() == nullptr && end_time_ != nullptr) {
    delete end_time_;
  }
  end_time_ = nullptr;
  if (GetArena() == nullptr && velocity_ != nullptr) {
    delete velocity_;
  }
  velocity_ = nullptr;
  if (GetArena() == nullptr && slew_rate_limit_ != nullptr) {
    delete slew_rate_limit_;
  }
  slew_rate_limit_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SE2VelocityCommand_Request::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .google.protobuf.Timestamp end_time = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_end_time(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .bosdyn.api.SE2Velocity velocity = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_velocity(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .bosdyn.api.SE2Velocity slew_rate_limit = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_slew_rate_limit(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string se2_frame_name = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          auto str = _internal_mutable_se2_frame_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "bosdyn.api.SE2VelocityCommand.Request.se2_frame_name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SE2VelocityCommand_Request::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:bosdyn.api.SE2VelocityCommand.Request)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.protobuf.Timestamp end_time = 1;
  if (this->has_end_time()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::end_time(this), target, stream);
  }

  // .bosdyn.api.SE2Velocity velocity = 2;
  if (this->has_velocity()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::velocity(this), target, stream);
  }

  // .bosdyn.api.SE2Velocity slew_rate_limit = 4;
  if (this->has_slew_rate_limit()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        4, _Internal::slew_rate_limit(this), target, stream);
  }

  // string se2_frame_name = 5;
  if (this->se2_frame_name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_se2_frame_name().data(), static_cast<int>(this->_internal_se2_frame_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "bosdyn.api.SE2VelocityCommand.Request.se2_frame_name");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_se2_frame_name(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:bosdyn.api.SE2VelocityCommand.Request)
  return target;
}

size_t SE2VelocityCommand_Request::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bosdyn.api.SE2VelocityCommand.Request)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string se2_frame_name = 5;
  if (this->se2_frame_name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_se2_frame_name());
  }

  // .google.protobuf.Timestamp end_time = 1;
  if (this->has_end_time()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *end_time_);
  }

  // .bosdyn.api.SE2Velocity velocity = 2;
  if (this->has_velocity()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *velocity_);
  }

  // .bosdyn.api.SE2Velocity slew_rate_limit = 4;
  if (this->has_slew_rate_limit()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *slew_rate_limit_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SE2VelocityCommand_Request::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bosdyn.api.SE2VelocityCommand.Request)
  GOOGLE_DCHECK_NE(&from, this);
  const SE2VelocityCommand_Request* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SE2VelocityCommand_Request>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bosdyn.api.SE2VelocityCommand.Request)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bosdyn.api.SE2VelocityCommand.Request)
    MergeFrom(*source);
  }
}

void SE2VelocityCommand_Request::MergeFrom(const SE2VelocityCommand_Request& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bosdyn.api.SE2VelocityCommand.Request)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.se2_frame_name().size() > 0) {
    _internal_set_se2_frame_name(from._internal_se2_frame_name());
  }
  if (from.has_end_time()) {
    _internal_mutable_end_time()->PROTOBUF_NAMESPACE_ID::Timestamp::MergeFrom(from._internal_end_time());
  }
  if (from.has_velocity()) {
    _internal_mutable_velocity()->::bosdyn::api::SE2Velocity::MergeFrom(from._internal_velocity());
  }
  if (from.has_slew_rate_limit()) {
    _internal_mutable_slew_rate_limit()->::bosdyn::api::SE2Velocity::MergeFrom(from._internal_slew_rate_limit());
  }
}

void SE2VelocityCommand_Request::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bosdyn.api.SE2VelocityCommand.Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SE2VelocityCommand_Request::CopyFrom(const SE2VelocityCommand_Request& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bosdyn.api.SE2VelocityCommand.Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SE2VelocityCommand_Request::IsInitialized() const {
  return true;
}

void SE2VelocityCommand_Request::InternalSwap(SE2VelocityCommand_Request* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  se2_frame_name_.Swap(&other->se2_frame_name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SE2VelocityCommand_Request, slew_rate_limit_)
      + sizeof(SE2VelocityCommand_Request::slew_rate_limit_)
      - PROTOBUF_FIELD_OFFSET(SE2VelocityCommand_Request, end_time_)>(
          reinterpret_cast<char*>(&end_time_),
          reinterpret_cast<char*>(&other->end_time_));
}

::PROTOBUF_NAMESPACE_ID::Metadata SE2VelocityCommand_Request::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void SE2VelocityCommand_Feedback::InitAsDefaultInstance() {
}
class SE2VelocityCommand_Feedback::_Internal {
 public:
};

SE2VelocityCommand_Feedback::SE2VelocityCommand_Feedback(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:bosdyn.api.SE2VelocityCommand.Feedback)
}
SE2VelocityCommand_Feedback::SE2VelocityCommand_Feedback(const SE2VelocityCommand_Feedback& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:bosdyn.api.SE2VelocityCommand.Feedback)
}

void SE2VelocityCommand_Feedback::SharedCtor() {
}

SE2VelocityCommand_Feedback::~SE2VelocityCommand_Feedback() {
  // @@protoc_insertion_point(destructor:bosdyn.api.SE2VelocityCommand.Feedback)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void SE2VelocityCommand_Feedback::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void SE2VelocityCommand_Feedback::ArenaDtor(void* object) {
  SE2VelocityCommand_Feedback* _this = reinterpret_cast< SE2VelocityCommand_Feedback* >(object);
  (void)_this;
}
void SE2VelocityCommand_Feedback::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SE2VelocityCommand_Feedback::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SE2VelocityCommand_Feedback& SE2VelocityCommand_Feedback::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_SE2VelocityCommand_Feedback_bosdyn_2fapi_2fbasic_5fcommand_2eproto.base);
  return *internal_default_instance();
}


void SE2VelocityCommand_Feedback::Clear() {
// @@protoc_insertion_point(message_clear_start:bosdyn.api.SE2VelocityCommand.Feedback)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SE2VelocityCommand_Feedback::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SE2VelocityCommand_Feedback::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:bosdyn.api.SE2VelocityCommand.Feedback)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:bosdyn.api.SE2VelocityCommand.Feedback)
  return target;
}

size_t SE2VelocityCommand_Feedback::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bosdyn.api.SE2VelocityCommand.Feedback)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SE2VelocityCommand_Feedback::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bosdyn.api.SE2VelocityCommand.Feedback)
  GOOGLE_DCHECK_NE(&from, this);
  const SE2VelocityCommand_Feedback* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SE2VelocityCommand_Feedback>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bosdyn.api.SE2VelocityCommand.Feedback)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bosdyn.api.SE2VelocityCommand.Feedback)
    MergeFrom(*source);
  }
}

void SE2VelocityCommand_Feedback::MergeFrom(const SE2VelocityCommand_Feedback& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bosdyn.api.SE2VelocityCommand.Feedback)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void SE2VelocityCommand_Feedback::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bosdyn.api.SE2VelocityCommand.Feedback)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SE2VelocityCommand_Feedback::CopyFrom(const SE2VelocityCommand_Feedback& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bosdyn.api.SE2VelocityCommand.Feedback)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SE2VelocityCommand_Feedback::IsInitialized() const {
  return true;
}

void SE2VelocityCommand_Feedback::InternalSwap(SE2VelocityCommand_Feedback* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SE2VelocityCommand_Feedback::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void SE2VelocityCommand::InitAsDefaultInstance() {
}
class SE2VelocityCommand::_Internal {
 public:
};

SE2VelocityCommand::SE2VelocityCommand(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:bosdyn.api.SE2VelocityCommand)
}
SE2VelocityCommand::SE2VelocityCommand(const SE2VelocityCommand& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:bosdyn.api.SE2VelocityCommand)
}

void SE2VelocityCommand::SharedCtor() {
}

SE2VelocityCommand::~SE2VelocityCommand() {
  // @@protoc_insertion_point(destructor:bosdyn.api.SE2VelocityCommand)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void SE2VelocityCommand::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void SE2VelocityCommand::ArenaDtor(void* object) {
  SE2VelocityCommand* _this = reinterpret_cast< SE2VelocityCommand* >(object);
  (void)_this;
}
void SE2VelocityCommand::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SE2VelocityCommand::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SE2VelocityCommand& SE2VelocityCommand::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_SE2VelocityCommand_bosdyn_2fapi_2fbasic_5fcommand_2eproto.base);
  return *internal_default_instance();
}


void SE2VelocityCommand::Clear() {
// @@protoc_insertion_point(message_clear_start:bosdyn.api.SE2VelocityCommand)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SE2VelocityCommand::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SE2VelocityCommand::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:bosdyn.api.SE2VelocityCommand)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:bosdyn.api.SE2VelocityCommand)
  return target;
}

size_t SE2VelocityCommand::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bosdyn.api.SE2VelocityCommand)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SE2VelocityCommand::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bosdyn.api.SE2VelocityCommand)
  GOOGLE_DCHECK_NE(&from, this);
  const SE2VelocityCommand* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SE2VelocityCommand>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bosdyn.api.SE2VelocityCommand)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bosdyn.api.SE2VelocityCommand)
    MergeFrom(*source);
  }
}

void SE2VelocityCommand::MergeFrom(const SE2VelocityCommand& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bosdyn.api.SE2VelocityCommand)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void SE2VelocityCommand::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bosdyn.api.SE2VelocityCommand)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SE2VelocityCommand::CopyFrom(const SE2VelocityCommand& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bosdyn.api.SE2VelocityCommand)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SE2VelocityCommand::IsInitialized() const {
  return true;
}

void SE2VelocityCommand::InternalSwap(SE2VelocityCommand* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SE2VelocityCommand::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void SitCommand_Request::InitAsDefaultInstance() {
}
class SitCommand_Request::_Internal {
 public:
};

SitCommand_Request::SitCommand_Request(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:bosdyn.api.SitCommand.Request)
}
SitCommand_Request::SitCommand_Request(const SitCommand_Request& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:bosdyn.api.SitCommand.Request)
}

void SitCommand_Request::SharedCtor() {
}

SitCommand_Request::~SitCommand_Request() {
  // @@protoc_insertion_point(destructor:bosdyn.api.SitCommand.Request)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void SitCommand_Request::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void SitCommand_Request::ArenaDtor(void* object) {
  SitCommand_Request* _this = reinterpret_cast< SitCommand_Request* >(object);
  (void)_this;
}
void SitCommand_Request::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SitCommand_Request::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SitCommand_Request& SitCommand_Request::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_SitCommand_Request_bosdyn_2fapi_2fbasic_5fcommand_2eproto.base);
  return *internal_default_instance();
}


void SitCommand_Request::Clear() {
// @@protoc_insertion_point(message_clear_start:bosdyn.api.SitCommand.Request)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SitCommand_Request::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SitCommand_Request::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:bosdyn.api.SitCommand.Request)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:bosdyn.api.SitCommand.Request)
  return target;
}

size_t SitCommand_Request::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bosdyn.api.SitCommand.Request)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SitCommand_Request::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bosdyn.api.SitCommand.Request)
  GOOGLE_DCHECK_NE(&from, this);
  const SitCommand_Request* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SitCommand_Request>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bosdyn.api.SitCommand.Request)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bosdyn.api.SitCommand.Request)
    MergeFrom(*source);
  }
}

void SitCommand_Request::MergeFrom(const SitCommand_Request& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bosdyn.api.SitCommand.Request)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void SitCommand_Request::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bosdyn.api.SitCommand.Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SitCommand_Request::CopyFrom(const SitCommand_Request& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bosdyn.api.SitCommand.Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SitCommand_Request::IsInitialized() const {
  return true;
}

void SitCommand_Request::InternalSwap(SitCommand_Request* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SitCommand_Request::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void SitCommand_Feedback::InitAsDefaultInstance() {
}
class SitCommand_Feedback::_Internal {
 public:
};

SitCommand_Feedback::SitCommand_Feedback(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:bosdyn.api.SitCommand.Feedback)
}
SitCommand_Feedback::SitCommand_Feedback(const SitCommand_Feedback& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  status_ = from.status_;
  // @@protoc_insertion_point(copy_constructor:bosdyn.api.SitCommand.Feedback)
}

void SitCommand_Feedback::SharedCtor() {
  status_ = 0;
}

SitCommand_Feedback::~SitCommand_Feedback() {
  // @@protoc_insertion_point(destructor:bosdyn.api.SitCommand.Feedback)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void SitCommand_Feedback::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void SitCommand_Feedback::ArenaDtor(void* object) {
  SitCommand_Feedback* _this = reinterpret_cast< SitCommand_Feedback* >(object);
  (void)_this;
}
void SitCommand_Feedback::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SitCommand_Feedback::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SitCommand_Feedback& SitCommand_Feedback::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_SitCommand_Feedback_bosdyn_2fapi_2fbasic_5fcommand_2eproto.base);
  return *internal_default_instance();
}


void SitCommand_Feedback::Clear() {
// @@protoc_insertion_point(message_clear_start:bosdyn.api.SitCommand.Feedback)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  status_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SitCommand_Feedback::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .bosdyn.api.SitCommand.Feedback.Status status = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_status(static_cast<::bosdyn::api::SitCommand_Feedback_Status>(val));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SitCommand_Feedback::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:bosdyn.api.SitCommand.Feedback)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .bosdyn.api.SitCommand.Feedback.Status status = 2;
  if (this->status() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      2, this->_internal_status(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:bosdyn.api.SitCommand.Feedback)
  return target;
}

size_t SitCommand_Feedback::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bosdyn.api.SitCommand.Feedback)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .bosdyn.api.SitCommand.Feedback.Status status = 2;
  if (this->status() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_status());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SitCommand_Feedback::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bosdyn.api.SitCommand.Feedback)
  GOOGLE_DCHECK_NE(&from, this);
  const SitCommand_Feedback* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SitCommand_Feedback>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bosdyn.api.SitCommand.Feedback)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bosdyn.api.SitCommand.Feedback)
    MergeFrom(*source);
  }
}

void SitCommand_Feedback::MergeFrom(const SitCommand_Feedback& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bosdyn.api.SitCommand.Feedback)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.status() != 0) {
    _internal_set_status(from._internal_status());
  }
}

void SitCommand_Feedback::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bosdyn.api.SitCommand.Feedback)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SitCommand_Feedback::CopyFrom(const SitCommand_Feedback& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bosdyn.api.SitCommand.Feedback)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SitCommand_Feedback::IsInitialized() const {
  return true;
}

void SitCommand_Feedback::InternalSwap(SitCommand_Feedback* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(status_, other->status_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SitCommand_Feedback::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void SitCommand::InitAsDefaultInstance() {
}
class SitCommand::_Internal {
 public:
};

SitCommand::SitCommand(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:bosdyn.api.SitCommand)
}
SitCommand::SitCommand(const SitCommand& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:bosdyn.api.SitCommand)
}

void SitCommand::SharedCtor() {
}

SitCommand::~SitCommand() {
  // @@protoc_insertion_point(destructor:bosdyn.api.SitCommand)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void SitCommand::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void SitCommand::ArenaDtor(void* object) {
  SitCommand* _this = reinterpret_cast< SitCommand* >(object);
  (void)_this;
}
void SitCommand::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SitCommand::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SitCommand& SitCommand::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_SitCommand_bosdyn_2fapi_2fbasic_5fcommand_2eproto.base);
  return *internal_default_instance();
}


void SitCommand::Clear() {
// @@protoc_insertion_point(message_clear_start:bosdyn.api.SitCommand)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SitCommand::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SitCommand::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:bosdyn.api.SitCommand)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:bosdyn.api.SitCommand)
  return target;
}

size_t SitCommand::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bosdyn.api.SitCommand)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SitCommand::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bosdyn.api.SitCommand)
  GOOGLE_DCHECK_NE(&from, this);
  const SitCommand* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SitCommand>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bosdyn.api.SitCommand)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bosdyn.api.SitCommand)
    MergeFrom(*source);
  }
}

void SitCommand::MergeFrom(const SitCommand& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bosdyn.api.SitCommand)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void SitCommand::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bosdyn.api.SitCommand)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SitCommand::CopyFrom(const SitCommand& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bosdyn.api.SitCommand)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SitCommand::IsInitialized() const {
  return true;
}

void SitCommand::InternalSwap(SitCommand* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SitCommand::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void StandCommand_Request::InitAsDefaultInstance() {
}
class StandCommand_Request::_Internal {
 public:
};

StandCommand_Request::StandCommand_Request(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:bosdyn.api.StandCommand.Request)
}
StandCommand_Request::StandCommand_Request(const StandCommand_Request& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:bosdyn.api.StandCommand.Request)
}

void StandCommand_Request::SharedCtor() {
}

StandCommand_Request::~StandCommand_Request() {
  // @@protoc_insertion_point(destructor:bosdyn.api.StandCommand.Request)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void StandCommand_Request::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void StandCommand_Request::ArenaDtor(void* object) {
  StandCommand_Request* _this = reinterpret_cast< StandCommand_Request* >(object);
  (void)_this;
}
void StandCommand_Request::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void StandCommand_Request::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const StandCommand_Request& StandCommand_Request::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_StandCommand_Request_bosdyn_2fapi_2fbasic_5fcommand_2eproto.base);
  return *internal_default_instance();
}


void StandCommand_Request::Clear() {
// @@protoc_insertion_point(message_clear_start:bosdyn.api.StandCommand.Request)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* StandCommand_Request::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* StandCommand_Request::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:bosdyn.api.StandCommand.Request)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:bosdyn.api.StandCommand.Request)
  return target;
}

size_t StandCommand_Request::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bosdyn.api.StandCommand.Request)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void StandCommand_Request::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bosdyn.api.StandCommand.Request)
  GOOGLE_DCHECK_NE(&from, this);
  const StandCommand_Request* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<StandCommand_Request>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bosdyn.api.StandCommand.Request)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bosdyn.api.StandCommand.Request)
    MergeFrom(*source);
  }
}

void StandCommand_Request::MergeFrom(const StandCommand_Request& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bosdyn.api.StandCommand.Request)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void StandCommand_Request::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bosdyn.api.StandCommand.Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StandCommand_Request::CopyFrom(const StandCommand_Request& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bosdyn.api.StandCommand.Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StandCommand_Request::IsInitialized() const {
  return true;
}

void StandCommand_Request::InternalSwap(StandCommand_Request* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata StandCommand_Request::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void StandCommand_Feedback::InitAsDefaultInstance() {
}
class StandCommand_Feedback::_Internal {
 public:
};

StandCommand_Feedback::StandCommand_Feedback(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:bosdyn.api.StandCommand.Feedback)
}
StandCommand_Feedback::StandCommand_Feedback(const StandCommand_Feedback& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  status_ = from.status_;
  // @@protoc_insertion_point(copy_constructor:bosdyn.api.StandCommand.Feedback)
}

void StandCommand_Feedback::SharedCtor() {
  status_ = 0;
}

StandCommand_Feedback::~StandCommand_Feedback() {
  // @@protoc_insertion_point(destructor:bosdyn.api.StandCommand.Feedback)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void StandCommand_Feedback::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void StandCommand_Feedback::ArenaDtor(void* object) {
  StandCommand_Feedback* _this = reinterpret_cast< StandCommand_Feedback* >(object);
  (void)_this;
}
void StandCommand_Feedback::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void StandCommand_Feedback::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const StandCommand_Feedback& StandCommand_Feedback::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_StandCommand_Feedback_bosdyn_2fapi_2fbasic_5fcommand_2eproto.base);
  return *internal_default_instance();
}


void StandCommand_Feedback::Clear() {
// @@protoc_insertion_point(message_clear_start:bosdyn.api.StandCommand.Feedback)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  status_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* StandCommand_Feedback::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .bosdyn.api.StandCommand.Feedback.Status status = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_status(static_cast<::bosdyn::api::StandCommand_Feedback_Status>(val));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* StandCommand_Feedback::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:bosdyn.api.StandCommand.Feedback)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .bosdyn.api.StandCommand.Feedback.Status status = 1;
  if (this->status() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->_internal_status(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:bosdyn.api.StandCommand.Feedback)
  return target;
}

size_t StandCommand_Feedback::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bosdyn.api.StandCommand.Feedback)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .bosdyn.api.StandCommand.Feedback.Status status = 1;
  if (this->status() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_status());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void StandCommand_Feedback::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bosdyn.api.StandCommand.Feedback)
  GOOGLE_DCHECK_NE(&from, this);
  const StandCommand_Feedback* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<StandCommand_Feedback>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bosdyn.api.StandCommand.Feedback)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bosdyn.api.StandCommand.Feedback)
    MergeFrom(*source);
  }
}

void StandCommand_Feedback::MergeFrom(const StandCommand_Feedback& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bosdyn.api.StandCommand.Feedback)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.status() != 0) {
    _internal_set_status(from._internal_status());
  }
}

void StandCommand_Feedback::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bosdyn.api.StandCommand.Feedback)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StandCommand_Feedback::CopyFrom(const StandCommand_Feedback& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bosdyn.api.StandCommand.Feedback)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StandCommand_Feedback::IsInitialized() const {
  return true;
}

void StandCommand_Feedback::InternalSwap(StandCommand_Feedback* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(status_, other->status_);
}

::PROTOBUF_NAMESPACE_ID::Metadata StandCommand_Feedback::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void StandCommand::InitAsDefaultInstance() {
}
class StandCommand::_Internal {
 public:
};

StandCommand::StandCommand(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:bosdyn.api.StandCommand)
}
StandCommand::StandCommand(const StandCommand& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:bosdyn.api.StandCommand)
}

void StandCommand::SharedCtor() {
}

StandCommand::~StandCommand() {
  // @@protoc_insertion_point(destructor:bosdyn.api.StandCommand)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void StandCommand::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void StandCommand::ArenaDtor(void* object) {
  StandCommand* _this = reinterpret_cast< StandCommand* >(object);
  (void)_this;
}
void StandCommand::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void StandCommand::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const StandCommand& StandCommand::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_StandCommand_bosdyn_2fapi_2fbasic_5fcommand_2eproto.base);
  return *internal_default_instance();
}


void StandCommand::Clear() {
// @@protoc_insertion_point(message_clear_start:bosdyn.api.StandCommand)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* StandCommand::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* StandCommand::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:bosdyn.api.StandCommand)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:bosdyn.api.StandCommand)
  return target;
}

size_t StandCommand::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bosdyn.api.StandCommand)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void StandCommand::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bosdyn.api.StandCommand)
  GOOGLE_DCHECK_NE(&from, this);
  const StandCommand* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<StandCommand>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bosdyn.api.StandCommand)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bosdyn.api.StandCommand)
    MergeFrom(*source);
  }
}

void StandCommand::MergeFrom(const StandCommand& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bosdyn.api.StandCommand)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void StandCommand::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bosdyn.api.StandCommand)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StandCommand::CopyFrom(const StandCommand& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bosdyn.api.StandCommand)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StandCommand::IsInitialized() const {
  return true;
}

void StandCommand::InternalSwap(StandCommand* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata StandCommand::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace api
}  // namespace bosdyn
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::bosdyn::api::SelfRightCommand_Request* Arena::CreateMaybeMessage< ::bosdyn::api::SelfRightCommand_Request >(Arena* arena) {
  return Arena::CreateMessageInternal< ::bosdyn::api::SelfRightCommand_Request >(arena);
}
template<> PROTOBUF_NOINLINE ::bosdyn::api::SelfRightCommand_Feedback* Arena::CreateMaybeMessage< ::bosdyn::api::SelfRightCommand_Feedback >(Arena* arena) {
  return Arena::CreateMessageInternal< ::bosdyn::api::SelfRightCommand_Feedback >(arena);
}
template<> PROTOBUF_NOINLINE ::bosdyn::api::SelfRightCommand* Arena::CreateMaybeMessage< ::bosdyn::api::SelfRightCommand >(Arena* arena) {
  return Arena::CreateMessageInternal< ::bosdyn::api::SelfRightCommand >(arena);
}
template<> PROTOBUF_NOINLINE ::bosdyn::api::StopCommand_Request* Arena::CreateMaybeMessage< ::bosdyn::api::StopCommand_Request >(Arena* arena) {
  return Arena::CreateMessageInternal< ::bosdyn::api::StopCommand_Request >(arena);
}
template<> PROTOBUF_NOINLINE ::bosdyn::api::StopCommand_Feedback* Arena::CreateMaybeMessage< ::bosdyn::api::StopCommand_Feedback >(Arena* arena) {
  return Arena::CreateMessageInternal< ::bosdyn::api::StopCommand_Feedback >(arena);
}
template<> PROTOBUF_NOINLINE ::bosdyn::api::StopCommand* Arena::CreateMaybeMessage< ::bosdyn::api::StopCommand >(Arena* arena) {
  return Arena::CreateMessageInternal< ::bosdyn::api::StopCommand >(arena);
}
template<> PROTOBUF_NOINLINE ::bosdyn::api::FreezeCommand_Request* Arena::CreateMaybeMessage< ::bosdyn::api::FreezeCommand_Request >(Arena* arena) {
  return Arena::CreateMessageInternal< ::bosdyn::api::FreezeCommand_Request >(arena);
}
template<> PROTOBUF_NOINLINE ::bosdyn::api::FreezeCommand_Feedback* Arena::CreateMaybeMessage< ::bosdyn::api::FreezeCommand_Feedback >(Arena* arena) {
  return Arena::CreateMessageInternal< ::bosdyn::api::FreezeCommand_Feedback >(arena);
}
template<> PROTOBUF_NOINLINE ::bosdyn::api::FreezeCommand* Arena::CreateMaybeMessage< ::bosdyn::api::FreezeCommand >(Arena* arena) {
  return Arena::CreateMessageInternal< ::bosdyn::api::FreezeCommand >(arena);
}
template<> PROTOBUF_NOINLINE ::bosdyn::api::SafePowerOffCommand_Request* Arena::CreateMaybeMessage< ::bosdyn::api::SafePowerOffCommand_Request >(Arena* arena) {
  return Arena::CreateMessageInternal< ::bosdyn::api::SafePowerOffCommand_Request >(arena);
}
template<> PROTOBUF_NOINLINE ::bosdyn::api::SafePowerOffCommand_Feedback* Arena::CreateMaybeMessage< ::bosdyn::api::SafePowerOffCommand_Feedback >(Arena* arena) {
  return Arena::CreateMessageInternal< ::bosdyn::api::SafePowerOffCommand_Feedback >(arena);
}
template<> PROTOBUF_NOINLINE ::bosdyn::api::SafePowerOffCommand* Arena::CreateMaybeMessage< ::bosdyn::api::SafePowerOffCommand >(Arena* arena) {
  return Arena::CreateMessageInternal< ::bosdyn::api::SafePowerOffCommand >(arena);
}
template<> PROTOBUF_NOINLINE ::bosdyn::api::SE2TrajectoryCommand_Request* Arena::CreateMaybeMessage< ::bosdyn::api::SE2TrajectoryCommand_Request >(Arena* arena) {
  return Arena::CreateMessageInternal< ::bosdyn::api::SE2TrajectoryCommand_Request >(arena);
}
template<> PROTOBUF_NOINLINE ::bosdyn::api::SE2TrajectoryCommand_Feedback* Arena::CreateMaybeMessage< ::bosdyn::api::SE2TrajectoryCommand_Feedback >(Arena* arena) {
  return Arena::CreateMessageInternal< ::bosdyn::api::SE2TrajectoryCommand_Feedback >(arena);
}
template<> PROTOBUF_NOINLINE ::bosdyn::api::SE2TrajectoryCommand* Arena::CreateMaybeMessage< ::bosdyn::api::SE2TrajectoryCommand >(Arena* arena) {
  return Arena::CreateMessageInternal< ::bosdyn::api::SE2TrajectoryCommand >(arena);
}
template<> PROTOBUF_NOINLINE ::bosdyn::api::SE2VelocityCommand_Request* Arena::CreateMaybeMessage< ::bosdyn::api::SE2VelocityCommand_Request >(Arena* arena) {
  return Arena::CreateMessageInternal< ::bosdyn::api::SE2VelocityCommand_Request >(arena);
}
template<> PROTOBUF_NOINLINE ::bosdyn::api::SE2VelocityCommand_Feedback* Arena::CreateMaybeMessage< ::bosdyn::api::SE2VelocityCommand_Feedback >(Arena* arena) {
  return Arena::CreateMessageInternal< ::bosdyn::api::SE2VelocityCommand_Feedback >(arena);
}
template<> PROTOBUF_NOINLINE ::bosdyn::api::SE2VelocityCommand* Arena::CreateMaybeMessage< ::bosdyn::api::SE2VelocityCommand >(Arena* arena) {
  return Arena::CreateMessageInternal< ::bosdyn::api::SE2VelocityCommand >(arena);
}
template<> PROTOBUF_NOINLINE ::bosdyn::api::SitCommand_Request* Arena::CreateMaybeMessage< ::bosdyn::api::SitCommand_Request >(Arena* arena) {
  return Arena::CreateMessageInternal< ::bosdyn::api::SitCommand_Request >(arena);
}
template<> PROTOBUF_NOINLINE ::bosdyn::api::SitCommand_Feedback* Arena::CreateMaybeMessage< ::bosdyn::api::SitCommand_Feedback >(Arena* arena) {
  return Arena::CreateMessageInternal< ::bosdyn::api::SitCommand_Feedback >(arena);
}
template<> PROTOBUF_NOINLINE ::bosdyn::api::SitCommand* Arena::CreateMaybeMessage< ::bosdyn::api::SitCommand >(Arena* arena) {
  return Arena::CreateMessageInternal< ::bosdyn::api::SitCommand >(arena);
}
template<> PROTOBUF_NOINLINE ::bosdyn::api::StandCommand_Request* Arena::CreateMaybeMessage< ::bosdyn::api::StandCommand_Request >(Arena* arena) {
  return Arena::CreateMessageInternal< ::bosdyn::api::StandCommand_Request >(arena);
}
template<> PROTOBUF_NOINLINE ::bosdyn::api::StandCommand_Feedback* Arena::CreateMaybeMessage< ::bosdyn::api::StandCommand_Feedback >(Arena* arena) {
  return Arena::CreateMessageInternal< ::bosdyn::api::StandCommand_Feedback >(arena);
}
template<> PROTOBUF_NOINLINE ::bosdyn::api::StandCommand* Arena::CreateMaybeMessage< ::bosdyn::api::StandCommand >(Arena* arena) {
  return Arena::CreateMessageInternal< ::bosdyn::api::StandCommand >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
