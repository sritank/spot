// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: bosdyn/api/graph_nav/map.proto

#include "bosdyn/api/graph_nav/map.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_bosdyn_2fapi_2frobot_5fstate_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_FootState_bosdyn_2fapi_2frobot_5fstate_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_bosdyn_2fapi_2fimage_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_ImageResponse_bosdyn_2fapi_2fimage_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_bosdyn_2fapi_2flocal_5fgrid_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<3> scc_info_LocalGrid_bosdyn_2fapi_2flocal_5fgrid_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_bosdyn_2fapi_2fpoint_5fcloud_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_PointCloud_bosdyn_2fapi_2fpoint_5fcloud_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_bosdyn_2fapi_2frobot_5fstate_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<8> scc_info_RobotState_bosdyn_2fapi_2frobot_5fstate_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_bosdyn_2fapi_2fgeometry_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_SE2VelocityLimit_bosdyn_2fapi_2fgeometry_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_bosdyn_2fapi_2fgeometry_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_SE3Covariance_bosdyn_2fapi_2fgeometry_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_bosdyn_2fapi_2fgeometry_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_SE3Pose_bosdyn_2fapi_2fgeometry_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_bosdyn_2fapi_2fworld_5fobject_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<6> scc_info_WorldObject_bosdyn_2fapi_2fworld_5fobject_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_bosdyn_2fapi_2fgraph_5fnav_2fmap_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<3> scc_info_Edge_bosdyn_2fapi_2fgraph_5fnav_2fmap_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_bosdyn_2fapi_2fgraph_5fnav_2fmap_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<4> scc_info_Edge_Annotations_bosdyn_2fapi_2fgraph_5fnav_2fmap_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_bosdyn_2fapi_2fgraph_5fnav_2fmap_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_Edge_Annotations_StairData_bosdyn_2fapi_2fgraph_5fnav_2fmap_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_bosdyn_2fapi_2fgraph_5fnav_2fmap_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_Edge_Annotations_StairData_StraightStaircase_bosdyn_2fapi_2fgraph_5fnav_2fmap_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_bosdyn_2fapi_2fgraph_5fnav_2fmap_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Edge_Annotations_StairData_StraightStaircase_Stair_bosdyn_2fapi_2fgraph_5fnav_2fmap_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_bosdyn_2fapi_2fgraph_5fnav_2fmap_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Edge_Id_bosdyn_2fapi_2fgraph_5fnav_2fmap_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_bosdyn_2fapi_2fgraph_5fnav_2fmap_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<3> scc_info_EdgeSnapshot_Stance_bosdyn_2fapi_2fgraph_5fnav_2fmap_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_bosdyn_2fapi_2fgraph_5fnav_2fmap_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_Waypoint_bosdyn_2fapi_2fgraph_5fnav_2fmap_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_bosdyn_2fapi_2fgraph_5fnav_2fmap_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_Waypoint_Annotations_bosdyn_2fapi_2fgraph_5fnav_2fmap_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_bosdyn_2fapi_2fgraph_5fnav_2fmap_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<3> scc_info_Waypoint_Annotations_LocalizeRegion_bosdyn_2fapi_2fgraph_5fnav_2fmap_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_bosdyn_2fapi_2fgraph_5fnav_2fmap_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Waypoint_Annotations_LocalizeRegion_Circle2D_bosdyn_2fapi_2fgraph_5fnav_2fmap_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_bosdyn_2fapi_2fgraph_5fnav_2fmap_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Waypoint_Annotations_LocalizeRegion_Default_bosdyn_2fapi_2fgraph_5fnav_2fmap_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_bosdyn_2fapi_2fgraph_5fnav_2fmap_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Waypoint_Annotations_LocalizeRegion_Empty_bosdyn_2fapi_2fgraph_5fnav_2fmap_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2fprotobuf_2fwrappers_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_BoolValue_google_2fprotobuf_2fwrappers_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2fprotobuf_2fwrappers_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_DoubleValue_google_2fprotobuf_2fwrappers_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2fprotobuf_2ftimestamp_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Timestamp_google_2fprotobuf_2ftimestamp_2eproto;
namespace bosdyn {
namespace api {
namespace graph_nav {
class Waypoint_Annotations_LocalizeRegion_DefaultDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Waypoint_Annotations_LocalizeRegion_Default> _instance;
} _Waypoint_Annotations_LocalizeRegion_Default_default_instance_;
class Waypoint_Annotations_LocalizeRegion_EmptyDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Waypoint_Annotations_LocalizeRegion_Empty> _instance;
} _Waypoint_Annotations_LocalizeRegion_Empty_default_instance_;
class Waypoint_Annotations_LocalizeRegion_Circle2DDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Waypoint_Annotations_LocalizeRegion_Circle2D> _instance;
} _Waypoint_Annotations_LocalizeRegion_Circle2D_default_instance_;
class Waypoint_Annotations_LocalizeRegionDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Waypoint_Annotations_LocalizeRegion> _instance;
  const ::bosdyn::api::graph_nav::Waypoint_Annotations_LocalizeRegion_Default* default_region_;
  const ::bosdyn::api::graph_nav::Waypoint_Annotations_LocalizeRegion_Empty* empty_;
  const ::bosdyn::api::graph_nav::Waypoint_Annotations_LocalizeRegion_Circle2D* circle_;
} _Waypoint_Annotations_LocalizeRegion_default_instance_;
class Waypoint_AnnotationsDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Waypoint_Annotations> _instance;
} _Waypoint_Annotations_default_instance_;
class WaypointDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Waypoint> _instance;
} _Waypoint_default_instance_;
class WaypointSnapshotDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<WaypointSnapshot> _instance;
} _WaypointSnapshot_default_instance_;
class Edge_IdDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Edge_Id> _instance;
} _Edge_Id_default_instance_;
class Edge_Annotations_StairData_StraightStaircase_StairDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Edge_Annotations_StairData_StraightStaircase_Stair> _instance;
} _Edge_Annotations_StairData_StraightStaircase_Stair_default_instance_;
class Edge_Annotations_StairData_StraightStaircaseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Edge_Annotations_StairData_StraightStaircase> _instance;
} _Edge_Annotations_StairData_StraightStaircase_default_instance_;
class Edge_Annotations_StairDataDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Edge_Annotations_StairData> _instance;
} _Edge_Annotations_StairData_default_instance_;
class Edge_AnnotationsDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Edge_Annotations> _instance;
} _Edge_Annotations_default_instance_;
class EdgeDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Edge> _instance;
} _Edge_default_instance_;
class EdgeSnapshot_StanceDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<EdgeSnapshot_Stance> _instance;
} _EdgeSnapshot_Stance_default_instance_;
class EdgeSnapshotDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<EdgeSnapshot> _instance;
} _EdgeSnapshot_default_instance_;
class GraphDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Graph> _instance;
} _Graph_default_instance_;
}  // namespace graph_nav
}  // namespace api
}  // namespace bosdyn
static void InitDefaultsscc_info_Edge_bosdyn_2fapi_2fgraph_5fnav_2fmap_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::bosdyn::api::graph_nav::_Edge_default_instance_;
    new (ptr) ::bosdyn::api::graph_nav::Edge();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::bosdyn::api::graph_nav::Edge::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<3> scc_info_Edge_bosdyn_2fapi_2fgraph_5fnav_2fmap_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 3, 0, InitDefaultsscc_info_Edge_bosdyn_2fapi_2fgraph_5fnav_2fmap_2eproto}, {
      &scc_info_Edge_Id_bosdyn_2fapi_2fgraph_5fnav_2fmap_2eproto.base,
      &scc_info_SE3Pose_bosdyn_2fapi_2fgeometry_2eproto.base,
      &scc_info_Edge_Annotations_bosdyn_2fapi_2fgraph_5fnav_2fmap_2eproto.base,}};

static void InitDefaultsscc_info_Edge_Annotations_bosdyn_2fapi_2fgraph_5fnav_2fmap_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::bosdyn::api::graph_nav::_Edge_Annotations_default_instance_;
    new (ptr) ::bosdyn::api::graph_nav::Edge_Annotations();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::bosdyn::api::graph_nav::Edge_Annotations::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<4> scc_info_Edge_Annotations_bosdyn_2fapi_2fgraph_5fnav_2fmap_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 4, 0, InitDefaultsscc_info_Edge_Annotations_bosdyn_2fapi_2fgraph_5fnav_2fmap_2eproto}, {
      &scc_info_SE2VelocityLimit_bosdyn_2fapi_2fgeometry_2eproto.base,
      &scc_info_Edge_Annotations_StairData_bosdyn_2fapi_2fgraph_5fnav_2fmap_2eproto.base,
      &scc_info_BoolValue_google_2fprotobuf_2fwrappers_2eproto.base,
      &scc_info_DoubleValue_google_2fprotobuf_2fwrappers_2eproto.base,}};

static void InitDefaultsscc_info_Edge_Annotations_StairData_bosdyn_2fapi_2fgraph_5fnav_2fmap_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::bosdyn::api::graph_nav::_Edge_Annotations_StairData_default_instance_;
    new (ptr) ::bosdyn::api::graph_nav::Edge_Annotations_StairData();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::bosdyn::api::graph_nav::Edge_Annotations_StairData::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_Edge_Annotations_StairData_bosdyn_2fapi_2fgraph_5fnav_2fmap_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_Edge_Annotations_StairData_bosdyn_2fapi_2fgraph_5fnav_2fmap_2eproto}, {
      &scc_info_Edge_Annotations_StairData_StraightStaircase_bosdyn_2fapi_2fgraph_5fnav_2fmap_2eproto.base,}};

static void InitDefaultsscc_info_Edge_Annotations_StairData_StraightStaircase_bosdyn_2fapi_2fgraph_5fnav_2fmap_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::bosdyn::api::graph_nav::_Edge_Annotations_StairData_StraightStaircase_default_instance_;
    new (ptr) ::bosdyn::api::graph_nav::Edge_Annotations_StairData_StraightStaircase();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::bosdyn::api::graph_nav::Edge_Annotations_StairData_StraightStaircase::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_Edge_Annotations_StairData_StraightStaircase_bosdyn_2fapi_2fgraph_5fnav_2fmap_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, 0, InitDefaultsscc_info_Edge_Annotations_StairData_StraightStaircase_bosdyn_2fapi_2fgraph_5fnav_2fmap_2eproto}, {
      &scc_info_SE3Pose_bosdyn_2fapi_2fgeometry_2eproto.base,
      &scc_info_Edge_Annotations_StairData_StraightStaircase_Stair_bosdyn_2fapi_2fgraph_5fnav_2fmap_2eproto.base,}};

static void InitDefaultsscc_info_Edge_Annotations_StairData_StraightStaircase_Stair_bosdyn_2fapi_2fgraph_5fnav_2fmap_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::bosdyn::api::graph_nav::_Edge_Annotations_StairData_StraightStaircase_Stair_default_instance_;
    new (ptr) ::bosdyn::api::graph_nav::Edge_Annotations_StairData_StraightStaircase_Stair();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::bosdyn::api::graph_nav::Edge_Annotations_StairData_StraightStaircase_Stair::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Edge_Annotations_StairData_StraightStaircase_Stair_bosdyn_2fapi_2fgraph_5fnav_2fmap_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Edge_Annotations_StairData_StraightStaircase_Stair_bosdyn_2fapi_2fgraph_5fnav_2fmap_2eproto}, {}};

static void InitDefaultsscc_info_Edge_Id_bosdyn_2fapi_2fgraph_5fnav_2fmap_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::bosdyn::api::graph_nav::_Edge_Id_default_instance_;
    new (ptr) ::bosdyn::api::graph_nav::Edge_Id();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::bosdyn::api::graph_nav::Edge_Id::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Edge_Id_bosdyn_2fapi_2fgraph_5fnav_2fmap_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Edge_Id_bosdyn_2fapi_2fgraph_5fnav_2fmap_2eproto}, {}};

static void InitDefaultsscc_info_EdgeSnapshot_bosdyn_2fapi_2fgraph_5fnav_2fmap_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::bosdyn::api::graph_nav::_EdgeSnapshot_default_instance_;
    new (ptr) ::bosdyn::api::graph_nav::EdgeSnapshot();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::bosdyn::api::graph_nav::EdgeSnapshot::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_EdgeSnapshot_bosdyn_2fapi_2fgraph_5fnav_2fmap_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_EdgeSnapshot_bosdyn_2fapi_2fgraph_5fnav_2fmap_2eproto}, {
      &scc_info_EdgeSnapshot_Stance_bosdyn_2fapi_2fgraph_5fnav_2fmap_2eproto.base,}};

static void InitDefaultsscc_info_EdgeSnapshot_Stance_bosdyn_2fapi_2fgraph_5fnav_2fmap_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::bosdyn::api::graph_nav::_EdgeSnapshot_Stance_default_instance_;
    new (ptr) ::bosdyn::api::graph_nav::EdgeSnapshot_Stance();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::bosdyn::api::graph_nav::EdgeSnapshot_Stance::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<3> scc_info_EdgeSnapshot_Stance_bosdyn_2fapi_2fgraph_5fnav_2fmap_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 3, 0, InitDefaultsscc_info_EdgeSnapshot_Stance_bosdyn_2fapi_2fgraph_5fnav_2fmap_2eproto}, {
      &scc_info_Timestamp_google_2fprotobuf_2ftimestamp_2eproto.base,
      &scc_info_FootState_bosdyn_2fapi_2frobot_5fstate_2eproto.base,
      &scc_info_SE3Pose_bosdyn_2fapi_2fgeometry_2eproto.base,}};

static void InitDefaultsscc_info_Graph_bosdyn_2fapi_2fgraph_5fnav_2fmap_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::bosdyn::api::graph_nav::_Graph_default_instance_;
    new (ptr) ::bosdyn::api::graph_nav::Graph();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::bosdyn::api::graph_nav::Graph::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_Graph_bosdyn_2fapi_2fgraph_5fnav_2fmap_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, 0, InitDefaultsscc_info_Graph_bosdyn_2fapi_2fgraph_5fnav_2fmap_2eproto}, {
      &scc_info_Waypoint_bosdyn_2fapi_2fgraph_5fnav_2fmap_2eproto.base,
      &scc_info_Edge_bosdyn_2fapi_2fgraph_5fnav_2fmap_2eproto.base,}};

static void InitDefaultsscc_info_Waypoint_bosdyn_2fapi_2fgraph_5fnav_2fmap_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::bosdyn::api::graph_nav::_Waypoint_default_instance_;
    new (ptr) ::bosdyn::api::graph_nav::Waypoint();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::bosdyn::api::graph_nav::Waypoint::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_Waypoint_bosdyn_2fapi_2fgraph_5fnav_2fmap_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, 0, InitDefaultsscc_info_Waypoint_bosdyn_2fapi_2fgraph_5fnav_2fmap_2eproto}, {
      &scc_info_SE3Pose_bosdyn_2fapi_2fgeometry_2eproto.base,
      &scc_info_Waypoint_Annotations_bosdyn_2fapi_2fgraph_5fnav_2fmap_2eproto.base,}};

static void InitDefaultsscc_info_Waypoint_Annotations_bosdyn_2fapi_2fgraph_5fnav_2fmap_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::bosdyn::api::graph_nav::_Waypoint_Annotations_default_instance_;
    new (ptr) ::bosdyn::api::graph_nav::Waypoint_Annotations();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::bosdyn::api::graph_nav::Waypoint_Annotations::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_Waypoint_Annotations_bosdyn_2fapi_2fgraph_5fnav_2fmap_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, 0, InitDefaultsscc_info_Waypoint_Annotations_bosdyn_2fapi_2fgraph_5fnav_2fmap_2eproto}, {
      &scc_info_SE3Covariance_bosdyn_2fapi_2fgeometry_2eproto.base,
      &scc_info_Waypoint_Annotations_LocalizeRegion_bosdyn_2fapi_2fgraph_5fnav_2fmap_2eproto.base,}};

static void InitDefaultsscc_info_Waypoint_Annotations_LocalizeRegion_bosdyn_2fapi_2fgraph_5fnav_2fmap_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::bosdyn::api::graph_nav::_Waypoint_Annotations_LocalizeRegion_default_instance_;
    new (ptr) ::bosdyn::api::graph_nav::Waypoint_Annotations_LocalizeRegion();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::bosdyn::api::graph_nav::Waypoint_Annotations_LocalizeRegion::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<3> scc_info_Waypoint_Annotations_LocalizeRegion_bosdyn_2fapi_2fgraph_5fnav_2fmap_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 3, 0, InitDefaultsscc_info_Waypoint_Annotations_LocalizeRegion_bosdyn_2fapi_2fgraph_5fnav_2fmap_2eproto}, {
      &scc_info_Waypoint_Annotations_LocalizeRegion_Default_bosdyn_2fapi_2fgraph_5fnav_2fmap_2eproto.base,
      &scc_info_Waypoint_Annotations_LocalizeRegion_Empty_bosdyn_2fapi_2fgraph_5fnav_2fmap_2eproto.base,
      &scc_info_Waypoint_Annotations_LocalizeRegion_Circle2D_bosdyn_2fapi_2fgraph_5fnav_2fmap_2eproto.base,}};

static void InitDefaultsscc_info_Waypoint_Annotations_LocalizeRegion_Circle2D_bosdyn_2fapi_2fgraph_5fnav_2fmap_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::bosdyn::api::graph_nav::_Waypoint_Annotations_LocalizeRegion_Circle2D_default_instance_;
    new (ptr) ::bosdyn::api::graph_nav::Waypoint_Annotations_LocalizeRegion_Circle2D();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::bosdyn::api::graph_nav::Waypoint_Annotations_LocalizeRegion_Circle2D::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Waypoint_Annotations_LocalizeRegion_Circle2D_bosdyn_2fapi_2fgraph_5fnav_2fmap_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Waypoint_Annotations_LocalizeRegion_Circle2D_bosdyn_2fapi_2fgraph_5fnav_2fmap_2eproto}, {}};

static void InitDefaultsscc_info_Waypoint_Annotations_LocalizeRegion_Default_bosdyn_2fapi_2fgraph_5fnav_2fmap_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::bosdyn::api::graph_nav::_Waypoint_Annotations_LocalizeRegion_Default_default_instance_;
    new (ptr) ::bosdyn::api::graph_nav::Waypoint_Annotations_LocalizeRegion_Default();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::bosdyn::api::graph_nav::Waypoint_Annotations_LocalizeRegion_Default::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Waypoint_Annotations_LocalizeRegion_Default_bosdyn_2fapi_2fgraph_5fnav_2fmap_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Waypoint_Annotations_LocalizeRegion_Default_bosdyn_2fapi_2fgraph_5fnav_2fmap_2eproto}, {}};

static void InitDefaultsscc_info_Waypoint_Annotations_LocalizeRegion_Empty_bosdyn_2fapi_2fgraph_5fnav_2fmap_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::bosdyn::api::graph_nav::_Waypoint_Annotations_LocalizeRegion_Empty_default_instance_;
    new (ptr) ::bosdyn::api::graph_nav::Waypoint_Annotations_LocalizeRegion_Empty();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::bosdyn::api::graph_nav::Waypoint_Annotations_LocalizeRegion_Empty::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Waypoint_Annotations_LocalizeRegion_Empty_bosdyn_2fapi_2fgraph_5fnav_2fmap_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Waypoint_Annotations_LocalizeRegion_Empty_bosdyn_2fapi_2fgraph_5fnav_2fmap_2eproto}, {}};

static void InitDefaultsscc_info_WaypointSnapshot_bosdyn_2fapi_2fgraph_5fnav_2fmap_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::bosdyn::api::graph_nav::_WaypointSnapshot_default_instance_;
    new (ptr) ::bosdyn::api::graph_nav::WaypointSnapshot();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::bosdyn::api::graph_nav::WaypointSnapshot::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<5> scc_info_WaypointSnapshot_bosdyn_2fapi_2fgraph_5fnav_2fmap_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 5, 0, InitDefaultsscc_info_WaypointSnapshot_bosdyn_2fapi_2fgraph_5fnav_2fmap_2eproto}, {
      &scc_info_ImageResponse_bosdyn_2fapi_2fimage_2eproto.base,
      &scc_info_PointCloud_bosdyn_2fapi_2fpoint_5fcloud_2eproto.base,
      &scc_info_WorldObject_bosdyn_2fapi_2fworld_5fobject_2eproto.base,
      &scc_info_RobotState_bosdyn_2fapi_2frobot_5fstate_2eproto.base,
      &scc_info_LocalGrid_bosdyn_2fapi_2flocal_5fgrid_2eproto.base,}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_bosdyn_2fapi_2fgraph_5fnav_2fmap_2eproto[16];
static const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* file_level_enum_descriptors_bosdyn_2fapi_2fgraph_5fnav_2fmap_2eproto[2];
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_bosdyn_2fapi_2fgraph_5fnav_2fmap_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_bosdyn_2fapi_2fgraph_5fnav_2fmap_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::bosdyn::api::graph_nav::Waypoint_Annotations_LocalizeRegion_Default, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::bosdyn::api::graph_nav::Waypoint_Annotations_LocalizeRegion_Empty, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::bosdyn::api::graph_nav::Waypoint_Annotations_LocalizeRegion_Circle2D, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::bosdyn::api::graph_nav::Waypoint_Annotations_LocalizeRegion_Circle2D, dist_2d_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::bosdyn::api::graph_nav::Waypoint_Annotations_LocalizeRegion, _internal_metadata_),
  ~0u,  // no _extensions_
  PROTOBUF_FIELD_OFFSET(::bosdyn::api::graph_nav::Waypoint_Annotations_LocalizeRegion, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::bosdyn::api::graph_nav::Waypoint_Annotations_LocalizeRegion, state_),
  offsetof(::bosdyn::api::graph_nav::Waypoint_Annotations_LocalizeRegionDefaultTypeInternal, default_region_),
  offsetof(::bosdyn::api::graph_nav::Waypoint_Annotations_LocalizeRegionDefaultTypeInternal, empty_),
  offsetof(::bosdyn::api::graph_nav::Waypoint_Annotations_LocalizeRegionDefaultTypeInternal, circle_),
  PROTOBUF_FIELD_OFFSET(::bosdyn::api::graph_nav::Waypoint_Annotations_LocalizeRegion, region_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::bosdyn::api::graph_nav::Waypoint_Annotations, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::bosdyn::api::graph_nav::Waypoint_Annotations, name_),
  PROTOBUF_FIELD_OFFSET(::bosdyn::api::graph_nav::Waypoint_Annotations, icp_variance_),
  PROTOBUF_FIELD_OFFSET(::bosdyn::api::graph_nav::Waypoint_Annotations, scan_match_region_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::bosdyn::api::graph_nav::Waypoint, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::bosdyn::api::graph_nav::Waypoint, id_),
  PROTOBUF_FIELD_OFFSET(::bosdyn::api::graph_nav::Waypoint, snapshot_id_),
  PROTOBUF_FIELD_OFFSET(::bosdyn::api::graph_nav::Waypoint, waypoint_tform_ko_),
  PROTOBUF_FIELD_OFFSET(::bosdyn::api::graph_nav::Waypoint, annotations_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::bosdyn::api::graph_nav::WaypointSnapshot, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::bosdyn::api::graph_nav::WaypointSnapshot, id_),
  PROTOBUF_FIELD_OFFSET(::bosdyn::api::graph_nav::WaypointSnapshot, images_),
  PROTOBUF_FIELD_OFFSET(::bosdyn::api::graph_nav::WaypointSnapshot, point_cloud_),
  PROTOBUF_FIELD_OFFSET(::bosdyn::api::graph_nav::WaypointSnapshot, objects_),
  PROTOBUF_FIELD_OFFSET(::bosdyn::api::graph_nav::WaypointSnapshot, robot_state_),
  PROTOBUF_FIELD_OFFSET(::bosdyn::api::graph_nav::WaypointSnapshot, robot_local_grids_),
  PROTOBUF_FIELD_OFFSET(::bosdyn::api::graph_nav::WaypointSnapshot, is_point_cloud_processed_),
  PROTOBUF_FIELD_OFFSET(::bosdyn::api::graph_nav::WaypointSnapshot, version_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::bosdyn::api::graph_nav::Edge_Id, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::bosdyn::api::graph_nav::Edge_Id, from_waypoint_),
  PROTOBUF_FIELD_OFFSET(::bosdyn::api::graph_nav::Edge_Id, to_waypoint_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::bosdyn::api::graph_nav::Edge_Annotations_StairData_StraightStaircase_Stair, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::bosdyn::api::graph_nav::Edge_Annotations_StairData_StraightStaircase_Stair, rise_),
  PROTOBUF_FIELD_OFFSET(::bosdyn::api::graph_nav::Edge_Annotations_StairData_StraightStaircase_Stair, run_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::bosdyn::api::graph_nav::Edge_Annotations_StairData_StraightStaircase, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::bosdyn::api::graph_nav::Edge_Annotations_StairData_StraightStaircase, from_ko_tform_stairs_),
  PROTOBUF_FIELD_OFFSET(::bosdyn::api::graph_nav::Edge_Annotations_StairData_StraightStaircase, stairs_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::bosdyn::api::graph_nav::Edge_Annotations_StairData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::bosdyn::api::graph_nav::Edge_Annotations_StairData, state_),
  PROTOBUF_FIELD_OFFSET(::bosdyn::api::graph_nav::Edge_Annotations_StairData, straight_staircase_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::bosdyn::api::graph_nav::Edge_Annotations, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::bosdyn::api::graph_nav::Edge_Annotations, vel_limit_),
  PROTOBUF_FIELD_OFFSET(::bosdyn::api::graph_nav::Edge_Annotations, stairs_),
  PROTOBUF_FIELD_OFFSET(::bosdyn::api::graph_nav::Edge_Annotations, direction_constraint_),
  PROTOBUF_FIELD_OFFSET(::bosdyn::api::graph_nav::Edge_Annotations, require_alignment_),
  PROTOBUF_FIELD_OFFSET(::bosdyn::api::graph_nav::Edge_Annotations, flat_ground_),
  PROTOBUF_FIELD_OFFSET(::bosdyn::api::graph_nav::Edge_Annotations, ground_mu_hint_),
  PROTOBUF_FIELD_OFFSET(::bosdyn::api::graph_nav::Edge_Annotations, grated_floor_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::bosdyn::api::graph_nav::Edge, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::bosdyn::api::graph_nav::Edge, id_),
  PROTOBUF_FIELD_OFFSET(::bosdyn::api::graph_nav::Edge, snapshot_id_),
  PROTOBUF_FIELD_OFFSET(::bosdyn::api::graph_nav::Edge, from_tform_to_),
  PROTOBUF_FIELD_OFFSET(::bosdyn::api::graph_nav::Edge, annotations_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::bosdyn::api::graph_nav::EdgeSnapshot_Stance, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::bosdyn::api::graph_nav::EdgeSnapshot_Stance, timestamp_),
  PROTOBUF_FIELD_OFFSET(::bosdyn::api::graph_nav::EdgeSnapshot_Stance, foot_states_),
  PROTOBUF_FIELD_OFFSET(::bosdyn::api::graph_nav::EdgeSnapshot_Stance, ko_tform_body_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::bosdyn::api::graph_nav::EdgeSnapshot, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::bosdyn::api::graph_nav::EdgeSnapshot, id_),
  PROTOBUF_FIELD_OFFSET(::bosdyn::api::graph_nav::EdgeSnapshot, stances_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::bosdyn::api::graph_nav::Graph, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::bosdyn::api::graph_nav::Graph, waypoints_),
  PROTOBUF_FIELD_OFFSET(::bosdyn::api::graph_nav::Graph, edges_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::bosdyn::api::graph_nav::Waypoint_Annotations_LocalizeRegion_Default)},
  { 5, -1, sizeof(::bosdyn::api::graph_nav::Waypoint_Annotations_LocalizeRegion_Empty)},
  { 10, -1, sizeof(::bosdyn::api::graph_nav::Waypoint_Annotations_LocalizeRegion_Circle2D)},
  { 16, -1, sizeof(::bosdyn::api::graph_nav::Waypoint_Annotations_LocalizeRegion)},
  { 26, -1, sizeof(::bosdyn::api::graph_nav::Waypoint_Annotations)},
  { 34, -1, sizeof(::bosdyn::api::graph_nav::Waypoint)},
  { 43, -1, sizeof(::bosdyn::api::graph_nav::WaypointSnapshot)},
  { 56, -1, sizeof(::bosdyn::api::graph_nav::Edge_Id)},
  { 63, -1, sizeof(::bosdyn::api::graph_nav::Edge_Annotations_StairData_StraightStaircase_Stair)},
  { 70, -1, sizeof(::bosdyn::api::graph_nav::Edge_Annotations_StairData_StraightStaircase)},
  { 77, -1, sizeof(::bosdyn::api::graph_nav::Edge_Annotations_StairData)},
  { 84, -1, sizeof(::bosdyn::api::graph_nav::Edge_Annotations)},
  { 96, -1, sizeof(::bosdyn::api::graph_nav::Edge)},
  { 105, -1, sizeof(::bosdyn::api::graph_nav::EdgeSnapshot_Stance)},
  { 113, -1, sizeof(::bosdyn::api::graph_nav::EdgeSnapshot)},
  { 120, -1, sizeof(::bosdyn::api::graph_nav::Graph)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::bosdyn::api::graph_nav::_Waypoint_Annotations_LocalizeRegion_Default_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::bosdyn::api::graph_nav::_Waypoint_Annotations_LocalizeRegion_Empty_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::bosdyn::api::graph_nav::_Waypoint_Annotations_LocalizeRegion_Circle2D_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::bosdyn::api::graph_nav::_Waypoint_Annotations_LocalizeRegion_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::bosdyn::api::graph_nav::_Waypoint_Annotations_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::bosdyn::api::graph_nav::_Waypoint_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::bosdyn::api::graph_nav::_WaypointSnapshot_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::bosdyn::api::graph_nav::_Edge_Id_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::bosdyn::api::graph_nav::_Edge_Annotations_StairData_StraightStaircase_Stair_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::bosdyn::api::graph_nav::_Edge_Annotations_StairData_StraightStaircase_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::bosdyn::api::graph_nav::_Edge_Annotations_StairData_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::bosdyn::api::graph_nav::_Edge_Annotations_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::bosdyn::api::graph_nav::_Edge_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::bosdyn::api::graph_nav::_EdgeSnapshot_Stance_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::bosdyn::api::graph_nav::_EdgeSnapshot_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::bosdyn::api::graph_nav::_Graph_default_instance_),
};

const char descriptor_table_protodef_bosdyn_2fapi_2fgraph_5fnav_2fmap_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\036bosdyn/api/graph_nav/map.proto\022\024bosdyn"
  ".api.graph_nav\032\031bosdyn/api/geometry.prot"
  "o\032\026bosdyn/api/image.proto\032\033bosdyn/api/lo"
  "cal_grid.proto\032\034bosdyn/api/point_cloud.p"
  "roto\032\034bosdyn/api/robot_state.proto\032\035bosd"
  "yn/api/world_object.proto\032\037google/protob"
  "uf/timestamp.proto\032\036google/protobuf/wrap"
  "pers.proto\"\312\005\n\010Waypoint\022\n\n\002id\030\001 \001(\t\022\023\n\013s"
  "napshot_id\030\002 \001(\t\022.\n\021waypoint_tform_ko\030\003 "
  "\001(\0132\023.bosdyn.api.SE3Pose\022\?\n\013annotations\030"
  "\004 \001(\0132*.bosdyn.api.graph_nav.Waypoint.An"
  "notations\032\253\004\n\013Annotations\022\014\n\004name\030\001 \001(\t\022"
  "/\n\014icp_variance\030\002 \001(\0132\031.bosdyn.api.SE3Co"
  "variance\022T\n\021scan_match_region\030\003 \001(\01329.bo"
  "sdyn.api.graph_nav.Waypoint.Annotations."
  "LocalizeRegion\032\206\003\n\016LocalizeRegion\0224\n\005sta"
  "te\030\001 \001(\0162%.bosdyn.api.graph_nav.Annotati"
  "onState\022[\n\016default_region\030\002 \001(\0132A.bosdyn"
  ".api.graph_nav.Waypoint.Annotations.Loca"
  "lizeRegion.DefaultH\000\022P\n\005empty\030\003 \001(\0132\?.bo"
  "sdyn.api.graph_nav.Waypoint.Annotations."
  "LocalizeRegion.EmptyH\000\022T\n\006circle\030\004 \001(\0132B"
  ".bosdyn.api.graph_nav.Waypoint.Annotatio"
  "ns.LocalizeRegion.Circle2DH\000\032\t\n\007Default\032"
  "\007\n\005Empty\032\033\n\010Circle2D\022\017\n\007dist_2d\030\001 \001(\001B\010\n"
  "\006region\"\265\002\n\020WaypointSnapshot\022\n\n\002id\030\001 \001(\t"
  "\022)\n\006images\030\002 \003(\0132\031.bosdyn.api.ImageRespo"
  "nse\022+\n\013point_cloud\030\003 \001(\0132\026.bosdyn.api.Po"
  "intCloud\022(\n\007objects\030\004 \003(\0132\027.bosdyn.api.W"
  "orldObject\022+\n\013robot_state\030\005 \001(\0132\026.bosdyn"
  ".api.RobotState\0220\n\021robot_local_grids\030\006 \003"
  "(\0132\025.bosdyn.api.LocalGrid\022 \n\030is_point_cl"
  "oud_processed\030\010 \001(\010\022\022\n\nversion_id\030\t \001(\t\""
  "\270\t\n\004Edge\022)\n\002id\030\001 \001(\0132\035.bosdyn.api.graph_"
  "nav.Edge.Id\022\023\n\013snapshot_id\030\002 \001(\t\022*\n\rfrom"
  "_tform_to\030\003 \001(\0132\023.bosdyn.api.SE3Pose\022;\n\013"
  "annotations\030\004 \001(\0132&.bosdyn.api.graph_nav"
  ".Edge.Annotations\0320\n\002Id\022\025\n\rfrom_waypoint"
  "\030\001 \001(\t\022\023\n\013to_waypoint\030\002 \001(\t\032\324\007\n\013Annotati"
  "ons\022/\n\tvel_limit\030\001 \001(\0132\034.bosdyn.api.SE2V"
  "elocityLimit\022@\n\006stairs\030\002 \001(\01320.bosdyn.ap"
  "i.graph_nav.Edge.Annotations.StairData\022X"
  "\n\024direction_constraint\030\004 \001(\0162:.bosdyn.ap"
  "i.graph_nav.Edge.Annotations.DirectionCo"
  "nstraint\0225\n\021require_alignment\030\005 \001(\0132\032.go"
  "ogle.protobuf.BoolValue\022/\n\013flat_ground\030\006"
  " \001(\0132\032.google.protobuf.BoolValue\0224\n\016grou"
  "nd_mu_hint\030\007 \001(\0132\034.google.protobuf.Doubl"
  "eValue\0220\n\014grated_floor\030\010 \001(\0132\032.google.pr"
  "otobuf.BoolValue\032\350\002\n\tStairData\0224\n\005state\030"
  "\001 \001(\0162%.bosdyn.api.graph_nav.AnnotationS"
  "tate\022^\n\022straight_staircase\030\002 \001(\0132B.bosdy"
  "n.api.graph_nav.Edge.Annotations.StairDa"
  "ta.StraightStaircase\032\304\001\n\021StraightStairca"
  "se\0221\n\024from_ko_tform_stairs\030\001 \001(\0132\023.bosdy"
  "n.api.SE3Pose\022X\n\006stairs\030\002 \003(\0132H.bosdyn.a"
  "pi.graph_nav.Edge.Annotations.StairData."
  "StraightStaircase.Stair\032\"\n\005Stair\022\014\n\004rise"
  "\030\001 \001(\002\022\013\n\003run\030\002 \001(\002\"\274\001\n\023DirectionConstra"
  "int\022 \n\034DIRECTION_CONSTRAINT_UNKNOWN\020\000\022 \n"
  "\034DIRECTION_CONSTRAINT_NO_TURN\020\001\022 \n\034DIREC"
  "TION_CONSTRAINT_FORWARD\020\002\022 \n\034DIRECTION_C"
  "ONSTRAINT_REVERSE\020\003\022\035\n\031DIRECTION_CONSTRA"
  "INT_NONE\020\004\"\350\001\n\014EdgeSnapshot\022\n\n\002id\030\001 \001(\t\022"
  ":\n\007stances\030\002 \003(\0132).bosdyn.api.graph_nav."
  "EdgeSnapshot.Stance\032\217\001\n\006Stance\022-\n\ttimest"
  "amp\030\001 \001(\0132\032.google.protobuf.Timestamp\022*\n"
  "\013foot_states\030\002 \003(\0132\025.bosdyn.api.FootStat"
  "e\022*\n\rko_tform_body\030\003 \001(\0132\023.bosdyn.api.SE"
  "3Pose\"e\n\005Graph\0221\n\twaypoints\030\001 \003(\0132\036.bosd"
  "yn.api.graph_nav.Waypoint\022)\n\005edges\030\002 \003(\013"
  "2\032.bosdyn.api.graph_nav.Edge*d\n\017Annotati"
  "onState\022\034\n\030ANNOTATION_STATE_UNKNOWN\020\000\022\030\n"
  "\024ANNOTATION_STATE_SET\020\001\022\031\n\025ANNOTATION_ST"
  "ATE_NONE\020\002B\nB\010MapProtob\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_bosdyn_2fapi_2fgraph_5fnav_2fmap_2eproto_deps[8] = {
  &::descriptor_table_bosdyn_2fapi_2fgeometry_2eproto,
  &::descriptor_table_bosdyn_2fapi_2fimage_2eproto,
  &::descriptor_table_bosdyn_2fapi_2flocal_5fgrid_2eproto,
  &::descriptor_table_bosdyn_2fapi_2fpoint_5fcloud_2eproto,
  &::descriptor_table_bosdyn_2fapi_2frobot_5fstate_2eproto,
  &::descriptor_table_bosdyn_2fapi_2fworld_5fobject_2eproto,
  &::descriptor_table_google_2fprotobuf_2ftimestamp_2eproto,
  &::descriptor_table_google_2fprotobuf_2fwrappers_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_bosdyn_2fapi_2fgraph_5fnav_2fmap_2eproto_sccs[16] = {
  &scc_info_Edge_bosdyn_2fapi_2fgraph_5fnav_2fmap_2eproto.base,
  &scc_info_Edge_Annotations_bosdyn_2fapi_2fgraph_5fnav_2fmap_2eproto.base,
  &scc_info_Edge_Annotations_StairData_bosdyn_2fapi_2fgraph_5fnav_2fmap_2eproto.base,
  &scc_info_Edge_Annotations_StairData_StraightStaircase_bosdyn_2fapi_2fgraph_5fnav_2fmap_2eproto.base,
  &scc_info_Edge_Annotations_StairData_StraightStaircase_Stair_bosdyn_2fapi_2fgraph_5fnav_2fmap_2eproto.base,
  &scc_info_Edge_Id_bosdyn_2fapi_2fgraph_5fnav_2fmap_2eproto.base,
  &scc_info_EdgeSnapshot_bosdyn_2fapi_2fgraph_5fnav_2fmap_2eproto.base,
  &scc_info_EdgeSnapshot_Stance_bosdyn_2fapi_2fgraph_5fnav_2fmap_2eproto.base,
  &scc_info_Graph_bosdyn_2fapi_2fgraph_5fnav_2fmap_2eproto.base,
  &scc_info_Waypoint_bosdyn_2fapi_2fgraph_5fnav_2fmap_2eproto.base,
  &scc_info_Waypoint_Annotations_bosdyn_2fapi_2fgraph_5fnav_2fmap_2eproto.base,
  &scc_info_Waypoint_Annotations_LocalizeRegion_bosdyn_2fapi_2fgraph_5fnav_2fmap_2eproto.base,
  &scc_info_Waypoint_Annotations_LocalizeRegion_Circle2D_bosdyn_2fapi_2fgraph_5fnav_2fmap_2eproto.base,
  &scc_info_Waypoint_Annotations_LocalizeRegion_Default_bosdyn_2fapi_2fgraph_5fnav_2fmap_2eproto.base,
  &scc_info_Waypoint_Annotations_LocalizeRegion_Empty_bosdyn_2fapi_2fgraph_5fnav_2fmap_2eproto.base,
  &scc_info_WaypointSnapshot_bosdyn_2fapi_2fgraph_5fnav_2fmap_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_bosdyn_2fapi_2fgraph_5fnav_2fmap_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_bosdyn_2fapi_2fgraph_5fnav_2fmap_2eproto = {
  false, false, descriptor_table_protodef_bosdyn_2fapi_2fgraph_5fnav_2fmap_2eproto, "bosdyn/api/graph_nav/map.proto", 2990,
  &descriptor_table_bosdyn_2fapi_2fgraph_5fnav_2fmap_2eproto_once, descriptor_table_bosdyn_2fapi_2fgraph_5fnav_2fmap_2eproto_sccs, descriptor_table_bosdyn_2fapi_2fgraph_5fnav_2fmap_2eproto_deps, 16, 8,
  schemas, file_default_instances, TableStruct_bosdyn_2fapi_2fgraph_5fnav_2fmap_2eproto::offsets,
  file_level_metadata_bosdyn_2fapi_2fgraph_5fnav_2fmap_2eproto, 16, file_level_enum_descriptors_bosdyn_2fapi_2fgraph_5fnav_2fmap_2eproto, file_level_service_descriptors_bosdyn_2fapi_2fgraph_5fnav_2fmap_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_bosdyn_2fapi_2fgraph_5fnav_2fmap_2eproto = (static_cast<void>(::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_bosdyn_2fapi_2fgraph_5fnav_2fmap_2eproto)), true);
namespace bosdyn {
namespace api {
namespace graph_nav {
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Edge_Annotations_DirectionConstraint_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_bosdyn_2fapi_2fgraph_5fnav_2fmap_2eproto);
  return file_level_enum_descriptors_bosdyn_2fapi_2fgraph_5fnav_2fmap_2eproto[0];
}
bool Edge_Annotations_DirectionConstraint_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr Edge_Annotations_DirectionConstraint Edge_Annotations::DIRECTION_CONSTRAINT_UNKNOWN;
constexpr Edge_Annotations_DirectionConstraint Edge_Annotations::DIRECTION_CONSTRAINT_NO_TURN;
constexpr Edge_Annotations_DirectionConstraint Edge_Annotations::DIRECTION_CONSTRAINT_FORWARD;
constexpr Edge_Annotations_DirectionConstraint Edge_Annotations::DIRECTION_CONSTRAINT_REVERSE;
constexpr Edge_Annotations_DirectionConstraint Edge_Annotations::DIRECTION_CONSTRAINT_NONE;
constexpr Edge_Annotations_DirectionConstraint Edge_Annotations::DirectionConstraint_MIN;
constexpr Edge_Annotations_DirectionConstraint Edge_Annotations::DirectionConstraint_MAX;
constexpr int Edge_Annotations::DirectionConstraint_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* AnnotationState_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_bosdyn_2fapi_2fgraph_5fnav_2fmap_2eproto);
  return file_level_enum_descriptors_bosdyn_2fapi_2fgraph_5fnav_2fmap_2eproto[1];
}
bool AnnotationState_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}


// ===================================================================

void Waypoint_Annotations_LocalizeRegion_Default::InitAsDefaultInstance() {
}
class Waypoint_Annotations_LocalizeRegion_Default::_Internal {
 public:
};

Waypoint_Annotations_LocalizeRegion_Default::Waypoint_Annotations_LocalizeRegion_Default(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:bosdyn.api.graph_nav.Waypoint.Annotations.LocalizeRegion.Default)
}
Waypoint_Annotations_LocalizeRegion_Default::Waypoint_Annotations_LocalizeRegion_Default(const Waypoint_Annotations_LocalizeRegion_Default& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:bosdyn.api.graph_nav.Waypoint.Annotations.LocalizeRegion.Default)
}

void Waypoint_Annotations_LocalizeRegion_Default::SharedCtor() {
}

Waypoint_Annotations_LocalizeRegion_Default::~Waypoint_Annotations_LocalizeRegion_Default() {
  // @@protoc_insertion_point(destructor:bosdyn.api.graph_nav.Waypoint.Annotations.LocalizeRegion.Default)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Waypoint_Annotations_LocalizeRegion_Default::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void Waypoint_Annotations_LocalizeRegion_Default::ArenaDtor(void* object) {
  Waypoint_Annotations_LocalizeRegion_Default* _this = reinterpret_cast< Waypoint_Annotations_LocalizeRegion_Default* >(object);
  (void)_this;
}
void Waypoint_Annotations_LocalizeRegion_Default::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Waypoint_Annotations_LocalizeRegion_Default::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Waypoint_Annotations_LocalizeRegion_Default& Waypoint_Annotations_LocalizeRegion_Default::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Waypoint_Annotations_LocalizeRegion_Default_bosdyn_2fapi_2fgraph_5fnav_2fmap_2eproto.base);
  return *internal_default_instance();
}


void Waypoint_Annotations_LocalizeRegion_Default::Clear() {
// @@protoc_insertion_point(message_clear_start:bosdyn.api.graph_nav.Waypoint.Annotations.LocalizeRegion.Default)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Waypoint_Annotations_LocalizeRegion_Default::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Waypoint_Annotations_LocalizeRegion_Default::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:bosdyn.api.graph_nav.Waypoint.Annotations.LocalizeRegion.Default)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:bosdyn.api.graph_nav.Waypoint.Annotations.LocalizeRegion.Default)
  return target;
}

size_t Waypoint_Annotations_LocalizeRegion_Default::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bosdyn.api.graph_nav.Waypoint.Annotations.LocalizeRegion.Default)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Waypoint_Annotations_LocalizeRegion_Default::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bosdyn.api.graph_nav.Waypoint.Annotations.LocalizeRegion.Default)
  GOOGLE_DCHECK_NE(&from, this);
  const Waypoint_Annotations_LocalizeRegion_Default* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Waypoint_Annotations_LocalizeRegion_Default>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bosdyn.api.graph_nav.Waypoint.Annotations.LocalizeRegion.Default)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bosdyn.api.graph_nav.Waypoint.Annotations.LocalizeRegion.Default)
    MergeFrom(*source);
  }
}

void Waypoint_Annotations_LocalizeRegion_Default::MergeFrom(const Waypoint_Annotations_LocalizeRegion_Default& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bosdyn.api.graph_nav.Waypoint.Annotations.LocalizeRegion.Default)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void Waypoint_Annotations_LocalizeRegion_Default::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bosdyn.api.graph_nav.Waypoint.Annotations.LocalizeRegion.Default)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Waypoint_Annotations_LocalizeRegion_Default::CopyFrom(const Waypoint_Annotations_LocalizeRegion_Default& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bosdyn.api.graph_nav.Waypoint.Annotations.LocalizeRegion.Default)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Waypoint_Annotations_LocalizeRegion_Default::IsInitialized() const {
  return true;
}

void Waypoint_Annotations_LocalizeRegion_Default::InternalSwap(Waypoint_Annotations_LocalizeRegion_Default* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Waypoint_Annotations_LocalizeRegion_Default::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void Waypoint_Annotations_LocalizeRegion_Empty::InitAsDefaultInstance() {
}
class Waypoint_Annotations_LocalizeRegion_Empty::_Internal {
 public:
};

Waypoint_Annotations_LocalizeRegion_Empty::Waypoint_Annotations_LocalizeRegion_Empty(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:bosdyn.api.graph_nav.Waypoint.Annotations.LocalizeRegion.Empty)
}
Waypoint_Annotations_LocalizeRegion_Empty::Waypoint_Annotations_LocalizeRegion_Empty(const Waypoint_Annotations_LocalizeRegion_Empty& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:bosdyn.api.graph_nav.Waypoint.Annotations.LocalizeRegion.Empty)
}

void Waypoint_Annotations_LocalizeRegion_Empty::SharedCtor() {
}

Waypoint_Annotations_LocalizeRegion_Empty::~Waypoint_Annotations_LocalizeRegion_Empty() {
  // @@protoc_insertion_point(destructor:bosdyn.api.graph_nav.Waypoint.Annotations.LocalizeRegion.Empty)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Waypoint_Annotations_LocalizeRegion_Empty::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void Waypoint_Annotations_LocalizeRegion_Empty::ArenaDtor(void* object) {
  Waypoint_Annotations_LocalizeRegion_Empty* _this = reinterpret_cast< Waypoint_Annotations_LocalizeRegion_Empty* >(object);
  (void)_this;
}
void Waypoint_Annotations_LocalizeRegion_Empty::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Waypoint_Annotations_LocalizeRegion_Empty::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Waypoint_Annotations_LocalizeRegion_Empty& Waypoint_Annotations_LocalizeRegion_Empty::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Waypoint_Annotations_LocalizeRegion_Empty_bosdyn_2fapi_2fgraph_5fnav_2fmap_2eproto.base);
  return *internal_default_instance();
}


void Waypoint_Annotations_LocalizeRegion_Empty::Clear() {
// @@protoc_insertion_point(message_clear_start:bosdyn.api.graph_nav.Waypoint.Annotations.LocalizeRegion.Empty)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Waypoint_Annotations_LocalizeRegion_Empty::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Waypoint_Annotations_LocalizeRegion_Empty::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:bosdyn.api.graph_nav.Waypoint.Annotations.LocalizeRegion.Empty)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:bosdyn.api.graph_nav.Waypoint.Annotations.LocalizeRegion.Empty)
  return target;
}

size_t Waypoint_Annotations_LocalizeRegion_Empty::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bosdyn.api.graph_nav.Waypoint.Annotations.LocalizeRegion.Empty)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Waypoint_Annotations_LocalizeRegion_Empty::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bosdyn.api.graph_nav.Waypoint.Annotations.LocalizeRegion.Empty)
  GOOGLE_DCHECK_NE(&from, this);
  const Waypoint_Annotations_LocalizeRegion_Empty* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Waypoint_Annotations_LocalizeRegion_Empty>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bosdyn.api.graph_nav.Waypoint.Annotations.LocalizeRegion.Empty)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bosdyn.api.graph_nav.Waypoint.Annotations.LocalizeRegion.Empty)
    MergeFrom(*source);
  }
}

void Waypoint_Annotations_LocalizeRegion_Empty::MergeFrom(const Waypoint_Annotations_LocalizeRegion_Empty& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bosdyn.api.graph_nav.Waypoint.Annotations.LocalizeRegion.Empty)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void Waypoint_Annotations_LocalizeRegion_Empty::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bosdyn.api.graph_nav.Waypoint.Annotations.LocalizeRegion.Empty)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Waypoint_Annotations_LocalizeRegion_Empty::CopyFrom(const Waypoint_Annotations_LocalizeRegion_Empty& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bosdyn.api.graph_nav.Waypoint.Annotations.LocalizeRegion.Empty)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Waypoint_Annotations_LocalizeRegion_Empty::IsInitialized() const {
  return true;
}

void Waypoint_Annotations_LocalizeRegion_Empty::InternalSwap(Waypoint_Annotations_LocalizeRegion_Empty* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Waypoint_Annotations_LocalizeRegion_Empty::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void Waypoint_Annotations_LocalizeRegion_Circle2D::InitAsDefaultInstance() {
}
class Waypoint_Annotations_LocalizeRegion_Circle2D::_Internal {
 public:
};

Waypoint_Annotations_LocalizeRegion_Circle2D::Waypoint_Annotations_LocalizeRegion_Circle2D(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:bosdyn.api.graph_nav.Waypoint.Annotations.LocalizeRegion.Circle2D)
}
Waypoint_Annotations_LocalizeRegion_Circle2D::Waypoint_Annotations_LocalizeRegion_Circle2D(const Waypoint_Annotations_LocalizeRegion_Circle2D& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  dist_2d_ = from.dist_2d_;
  // @@protoc_insertion_point(copy_constructor:bosdyn.api.graph_nav.Waypoint.Annotations.LocalizeRegion.Circle2D)
}

void Waypoint_Annotations_LocalizeRegion_Circle2D::SharedCtor() {
  dist_2d_ = 0;
}

Waypoint_Annotations_LocalizeRegion_Circle2D::~Waypoint_Annotations_LocalizeRegion_Circle2D() {
  // @@protoc_insertion_point(destructor:bosdyn.api.graph_nav.Waypoint.Annotations.LocalizeRegion.Circle2D)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Waypoint_Annotations_LocalizeRegion_Circle2D::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void Waypoint_Annotations_LocalizeRegion_Circle2D::ArenaDtor(void* object) {
  Waypoint_Annotations_LocalizeRegion_Circle2D* _this = reinterpret_cast< Waypoint_Annotations_LocalizeRegion_Circle2D* >(object);
  (void)_this;
}
void Waypoint_Annotations_LocalizeRegion_Circle2D::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Waypoint_Annotations_LocalizeRegion_Circle2D::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Waypoint_Annotations_LocalizeRegion_Circle2D& Waypoint_Annotations_LocalizeRegion_Circle2D::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Waypoint_Annotations_LocalizeRegion_Circle2D_bosdyn_2fapi_2fgraph_5fnav_2fmap_2eproto.base);
  return *internal_default_instance();
}


void Waypoint_Annotations_LocalizeRegion_Circle2D::Clear() {
// @@protoc_insertion_point(message_clear_start:bosdyn.api.graph_nav.Waypoint.Annotations.LocalizeRegion.Circle2D)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  dist_2d_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Waypoint_Annotations_LocalizeRegion_Circle2D::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // double dist_2d = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 9)) {
          dist_2d_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Waypoint_Annotations_LocalizeRegion_Circle2D::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:bosdyn.api.graph_nav.Waypoint.Annotations.LocalizeRegion.Circle2D)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double dist_2d = 1;
  if (!(this->dist_2d() <= 0 && this->dist_2d() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(1, this->_internal_dist_2d(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:bosdyn.api.graph_nav.Waypoint.Annotations.LocalizeRegion.Circle2D)
  return target;
}

size_t Waypoint_Annotations_LocalizeRegion_Circle2D::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bosdyn.api.graph_nav.Waypoint.Annotations.LocalizeRegion.Circle2D)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // double dist_2d = 1;
  if (!(this->dist_2d() <= 0 && this->dist_2d() >= 0)) {
    total_size += 1 + 8;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Waypoint_Annotations_LocalizeRegion_Circle2D::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bosdyn.api.graph_nav.Waypoint.Annotations.LocalizeRegion.Circle2D)
  GOOGLE_DCHECK_NE(&from, this);
  const Waypoint_Annotations_LocalizeRegion_Circle2D* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Waypoint_Annotations_LocalizeRegion_Circle2D>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bosdyn.api.graph_nav.Waypoint.Annotations.LocalizeRegion.Circle2D)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bosdyn.api.graph_nav.Waypoint.Annotations.LocalizeRegion.Circle2D)
    MergeFrom(*source);
  }
}

void Waypoint_Annotations_LocalizeRegion_Circle2D::MergeFrom(const Waypoint_Annotations_LocalizeRegion_Circle2D& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bosdyn.api.graph_nav.Waypoint.Annotations.LocalizeRegion.Circle2D)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (!(from.dist_2d() <= 0 && from.dist_2d() >= 0)) {
    _internal_set_dist_2d(from._internal_dist_2d());
  }
}

void Waypoint_Annotations_LocalizeRegion_Circle2D::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bosdyn.api.graph_nav.Waypoint.Annotations.LocalizeRegion.Circle2D)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Waypoint_Annotations_LocalizeRegion_Circle2D::CopyFrom(const Waypoint_Annotations_LocalizeRegion_Circle2D& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bosdyn.api.graph_nav.Waypoint.Annotations.LocalizeRegion.Circle2D)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Waypoint_Annotations_LocalizeRegion_Circle2D::IsInitialized() const {
  return true;
}

void Waypoint_Annotations_LocalizeRegion_Circle2D::InternalSwap(Waypoint_Annotations_LocalizeRegion_Circle2D* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(dist_2d_, other->dist_2d_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Waypoint_Annotations_LocalizeRegion_Circle2D::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void Waypoint_Annotations_LocalizeRegion::InitAsDefaultInstance() {
  ::bosdyn::api::graph_nav::_Waypoint_Annotations_LocalizeRegion_default_instance_.default_region_ = const_cast< ::bosdyn::api::graph_nav::Waypoint_Annotations_LocalizeRegion_Default*>(
      ::bosdyn::api::graph_nav::Waypoint_Annotations_LocalizeRegion_Default::internal_default_instance());
  ::bosdyn::api::graph_nav::_Waypoint_Annotations_LocalizeRegion_default_instance_.empty_ = const_cast< ::bosdyn::api::graph_nav::Waypoint_Annotations_LocalizeRegion_Empty*>(
      ::bosdyn::api::graph_nav::Waypoint_Annotations_LocalizeRegion_Empty::internal_default_instance());
  ::bosdyn::api::graph_nav::_Waypoint_Annotations_LocalizeRegion_default_instance_.circle_ = const_cast< ::bosdyn::api::graph_nav::Waypoint_Annotations_LocalizeRegion_Circle2D*>(
      ::bosdyn::api::graph_nav::Waypoint_Annotations_LocalizeRegion_Circle2D::internal_default_instance());
}
class Waypoint_Annotations_LocalizeRegion::_Internal {
 public:
  static const ::bosdyn::api::graph_nav::Waypoint_Annotations_LocalizeRegion_Default& default_region(const Waypoint_Annotations_LocalizeRegion* msg);
  static const ::bosdyn::api::graph_nav::Waypoint_Annotations_LocalizeRegion_Empty& empty(const Waypoint_Annotations_LocalizeRegion* msg);
  static const ::bosdyn::api::graph_nav::Waypoint_Annotations_LocalizeRegion_Circle2D& circle(const Waypoint_Annotations_LocalizeRegion* msg);
};

const ::bosdyn::api::graph_nav::Waypoint_Annotations_LocalizeRegion_Default&
Waypoint_Annotations_LocalizeRegion::_Internal::default_region(const Waypoint_Annotations_LocalizeRegion* msg) {
  return *msg->region_.default_region_;
}
const ::bosdyn::api::graph_nav::Waypoint_Annotations_LocalizeRegion_Empty&
Waypoint_Annotations_LocalizeRegion::_Internal::empty(const Waypoint_Annotations_LocalizeRegion* msg) {
  return *msg->region_.empty_;
}
const ::bosdyn::api::graph_nav::Waypoint_Annotations_LocalizeRegion_Circle2D&
Waypoint_Annotations_LocalizeRegion::_Internal::circle(const Waypoint_Annotations_LocalizeRegion* msg) {
  return *msg->region_.circle_;
}
void Waypoint_Annotations_LocalizeRegion::set_allocated_default_region(::bosdyn::api::graph_nav::Waypoint_Annotations_LocalizeRegion_Default* default_region) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  clear_region();
  if (default_region) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(default_region);
    if (message_arena != submessage_arena) {
      default_region = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, default_region, submessage_arena);
    }
    set_has_default_region();
    region_.default_region_ = default_region;
  }
  // @@protoc_insertion_point(field_set_allocated:bosdyn.api.graph_nav.Waypoint.Annotations.LocalizeRegion.default_region)
}
void Waypoint_Annotations_LocalizeRegion::set_allocated_empty(::bosdyn::api::graph_nav::Waypoint_Annotations_LocalizeRegion_Empty* empty) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  clear_region();
  if (empty) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(empty);
    if (message_arena != submessage_arena) {
      empty = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, empty, submessage_arena);
    }
    set_has_empty();
    region_.empty_ = empty;
  }
  // @@protoc_insertion_point(field_set_allocated:bosdyn.api.graph_nav.Waypoint.Annotations.LocalizeRegion.empty)
}
void Waypoint_Annotations_LocalizeRegion::set_allocated_circle(::bosdyn::api::graph_nav::Waypoint_Annotations_LocalizeRegion_Circle2D* circle) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  clear_region();
  if (circle) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(circle);
    if (message_arena != submessage_arena) {
      circle = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, circle, submessage_arena);
    }
    set_has_circle();
    region_.circle_ = circle;
  }
  // @@protoc_insertion_point(field_set_allocated:bosdyn.api.graph_nav.Waypoint.Annotations.LocalizeRegion.circle)
}
Waypoint_Annotations_LocalizeRegion::Waypoint_Annotations_LocalizeRegion(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:bosdyn.api.graph_nav.Waypoint.Annotations.LocalizeRegion)
}
Waypoint_Annotations_LocalizeRegion::Waypoint_Annotations_LocalizeRegion(const Waypoint_Annotations_LocalizeRegion& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  state_ = from.state_;
  clear_has_region();
  switch (from.region_case()) {
    case kDefaultRegion: {
      _internal_mutable_default_region()->::bosdyn::api::graph_nav::Waypoint_Annotations_LocalizeRegion_Default::MergeFrom(from._internal_default_region());
      break;
    }
    case kEmpty: {
      _internal_mutable_empty()->::bosdyn::api::graph_nav::Waypoint_Annotations_LocalizeRegion_Empty::MergeFrom(from._internal_empty());
      break;
    }
    case kCircle: {
      _internal_mutable_circle()->::bosdyn::api::graph_nav::Waypoint_Annotations_LocalizeRegion_Circle2D::MergeFrom(from._internal_circle());
      break;
    }
    case REGION_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:bosdyn.api.graph_nav.Waypoint.Annotations.LocalizeRegion)
}

void Waypoint_Annotations_LocalizeRegion::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Waypoint_Annotations_LocalizeRegion_bosdyn_2fapi_2fgraph_5fnav_2fmap_2eproto.base);
  state_ = 0;
  clear_has_region();
}

Waypoint_Annotations_LocalizeRegion::~Waypoint_Annotations_LocalizeRegion() {
  // @@protoc_insertion_point(destructor:bosdyn.api.graph_nav.Waypoint.Annotations.LocalizeRegion)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Waypoint_Annotations_LocalizeRegion::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (has_region()) {
    clear_region();
  }
}

void Waypoint_Annotations_LocalizeRegion::ArenaDtor(void* object) {
  Waypoint_Annotations_LocalizeRegion* _this = reinterpret_cast< Waypoint_Annotations_LocalizeRegion* >(object);
  (void)_this;
}
void Waypoint_Annotations_LocalizeRegion::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Waypoint_Annotations_LocalizeRegion::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Waypoint_Annotations_LocalizeRegion& Waypoint_Annotations_LocalizeRegion::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Waypoint_Annotations_LocalizeRegion_bosdyn_2fapi_2fgraph_5fnav_2fmap_2eproto.base);
  return *internal_default_instance();
}


void Waypoint_Annotations_LocalizeRegion::clear_region() {
// @@protoc_insertion_point(one_of_clear_start:bosdyn.api.graph_nav.Waypoint.Annotations.LocalizeRegion)
  switch (region_case()) {
    case kDefaultRegion: {
      if (GetArena() == nullptr) {
        delete region_.default_region_;
      }
      break;
    }
    case kEmpty: {
      if (GetArena() == nullptr) {
        delete region_.empty_;
      }
      break;
    }
    case kCircle: {
      if (GetArena() == nullptr) {
        delete region_.circle_;
      }
      break;
    }
    case REGION_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = REGION_NOT_SET;
}


void Waypoint_Annotations_LocalizeRegion::Clear() {
// @@protoc_insertion_point(message_clear_start:bosdyn.api.graph_nav.Waypoint.Annotations.LocalizeRegion)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  state_ = 0;
  clear_region();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Waypoint_Annotations_LocalizeRegion::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .bosdyn.api.graph_nav.AnnotationState state = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_state(static_cast<::bosdyn::api::graph_nav::AnnotationState>(val));
        } else goto handle_unusual;
        continue;
      // .bosdyn.api.graph_nav.Waypoint.Annotations.LocalizeRegion.Default default_region = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_default_region(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .bosdyn.api.graph_nav.Waypoint.Annotations.LocalizeRegion.Empty empty = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_empty(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .bosdyn.api.graph_nav.Waypoint.Annotations.LocalizeRegion.Circle2D circle = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_circle(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Waypoint_Annotations_LocalizeRegion::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:bosdyn.api.graph_nav.Waypoint.Annotations.LocalizeRegion)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .bosdyn.api.graph_nav.AnnotationState state = 1;
  if (this->state() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->_internal_state(), target);
  }

  // .bosdyn.api.graph_nav.Waypoint.Annotations.LocalizeRegion.Default default_region = 2;
  if (_internal_has_default_region()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::default_region(this), target, stream);
  }

  // .bosdyn.api.graph_nav.Waypoint.Annotations.LocalizeRegion.Empty empty = 3;
  if (_internal_has_empty()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::empty(this), target, stream);
  }

  // .bosdyn.api.graph_nav.Waypoint.Annotations.LocalizeRegion.Circle2D circle = 4;
  if (_internal_has_circle()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        4, _Internal::circle(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:bosdyn.api.graph_nav.Waypoint.Annotations.LocalizeRegion)
  return target;
}

size_t Waypoint_Annotations_LocalizeRegion::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bosdyn.api.graph_nav.Waypoint.Annotations.LocalizeRegion)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .bosdyn.api.graph_nav.AnnotationState state = 1;
  if (this->state() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_state());
  }

  switch (region_case()) {
    // .bosdyn.api.graph_nav.Waypoint.Annotations.LocalizeRegion.Default default_region = 2;
    case kDefaultRegion: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *region_.default_region_);
      break;
    }
    // .bosdyn.api.graph_nav.Waypoint.Annotations.LocalizeRegion.Empty empty = 3;
    case kEmpty: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *region_.empty_);
      break;
    }
    // .bosdyn.api.graph_nav.Waypoint.Annotations.LocalizeRegion.Circle2D circle = 4;
    case kCircle: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *region_.circle_);
      break;
    }
    case REGION_NOT_SET: {
      break;
    }
  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Waypoint_Annotations_LocalizeRegion::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bosdyn.api.graph_nav.Waypoint.Annotations.LocalizeRegion)
  GOOGLE_DCHECK_NE(&from, this);
  const Waypoint_Annotations_LocalizeRegion* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Waypoint_Annotations_LocalizeRegion>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bosdyn.api.graph_nav.Waypoint.Annotations.LocalizeRegion)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bosdyn.api.graph_nav.Waypoint.Annotations.LocalizeRegion)
    MergeFrom(*source);
  }
}

void Waypoint_Annotations_LocalizeRegion::MergeFrom(const Waypoint_Annotations_LocalizeRegion& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bosdyn.api.graph_nav.Waypoint.Annotations.LocalizeRegion)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.state() != 0) {
    _internal_set_state(from._internal_state());
  }
  switch (from.region_case()) {
    case kDefaultRegion: {
      _internal_mutable_default_region()->::bosdyn::api::graph_nav::Waypoint_Annotations_LocalizeRegion_Default::MergeFrom(from._internal_default_region());
      break;
    }
    case kEmpty: {
      _internal_mutable_empty()->::bosdyn::api::graph_nav::Waypoint_Annotations_LocalizeRegion_Empty::MergeFrom(from._internal_empty());
      break;
    }
    case kCircle: {
      _internal_mutable_circle()->::bosdyn::api::graph_nav::Waypoint_Annotations_LocalizeRegion_Circle2D::MergeFrom(from._internal_circle());
      break;
    }
    case REGION_NOT_SET: {
      break;
    }
  }
}

void Waypoint_Annotations_LocalizeRegion::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bosdyn.api.graph_nav.Waypoint.Annotations.LocalizeRegion)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Waypoint_Annotations_LocalizeRegion::CopyFrom(const Waypoint_Annotations_LocalizeRegion& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bosdyn.api.graph_nav.Waypoint.Annotations.LocalizeRegion)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Waypoint_Annotations_LocalizeRegion::IsInitialized() const {
  return true;
}

void Waypoint_Annotations_LocalizeRegion::InternalSwap(Waypoint_Annotations_LocalizeRegion* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(state_, other->state_);
  swap(region_, other->region_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
}

::PROTOBUF_NAMESPACE_ID::Metadata Waypoint_Annotations_LocalizeRegion::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void Waypoint_Annotations::InitAsDefaultInstance() {
  ::bosdyn::api::graph_nav::_Waypoint_Annotations_default_instance_._instance.get_mutable()->icp_variance_ = const_cast< ::bosdyn::api::SE3Covariance*>(
      ::bosdyn::api::SE3Covariance::internal_default_instance());
  ::bosdyn::api::graph_nav::_Waypoint_Annotations_default_instance_._instance.get_mutable()->scan_match_region_ = const_cast< ::bosdyn::api::graph_nav::Waypoint_Annotations_LocalizeRegion*>(
      ::bosdyn::api::graph_nav::Waypoint_Annotations_LocalizeRegion::internal_default_instance());
}
class Waypoint_Annotations::_Internal {
 public:
  static const ::bosdyn::api::SE3Covariance& icp_variance(const Waypoint_Annotations* msg);
  static const ::bosdyn::api::graph_nav::Waypoint_Annotations_LocalizeRegion& scan_match_region(const Waypoint_Annotations* msg);
};

const ::bosdyn::api::SE3Covariance&
Waypoint_Annotations::_Internal::icp_variance(const Waypoint_Annotations* msg) {
  return *msg->icp_variance_;
}
const ::bosdyn::api::graph_nav::Waypoint_Annotations_LocalizeRegion&
Waypoint_Annotations::_Internal::scan_match_region(const Waypoint_Annotations* msg) {
  return *msg->scan_match_region_;
}
void Waypoint_Annotations::clear_icp_variance() {
  if (GetArena() == nullptr && icp_variance_ != nullptr) {
    delete icp_variance_;
  }
  icp_variance_ = nullptr;
}
Waypoint_Annotations::Waypoint_Annotations(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:bosdyn.api.graph_nav.Waypoint.Annotations)
}
Waypoint_Annotations::Waypoint_Annotations(const Waypoint_Annotations& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_name().empty()) {
    name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_name(),
      GetArena());
  }
  if (from._internal_has_icp_variance()) {
    icp_variance_ = new ::bosdyn::api::SE3Covariance(*from.icp_variance_);
  } else {
    icp_variance_ = nullptr;
  }
  if (from._internal_has_scan_match_region()) {
    scan_match_region_ = new ::bosdyn::api::graph_nav::Waypoint_Annotations_LocalizeRegion(*from.scan_match_region_);
  } else {
    scan_match_region_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:bosdyn.api.graph_nav.Waypoint.Annotations)
}

void Waypoint_Annotations::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Waypoint_Annotations_bosdyn_2fapi_2fgraph_5fnav_2fmap_2eproto.base);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&icp_variance_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&scan_match_region_) -
      reinterpret_cast<char*>(&icp_variance_)) + sizeof(scan_match_region_));
}

Waypoint_Annotations::~Waypoint_Annotations() {
  // @@protoc_insertion_point(destructor:bosdyn.api.graph_nav.Waypoint.Annotations)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Waypoint_Annotations::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete icp_variance_;
  if (this != internal_default_instance()) delete scan_match_region_;
}

void Waypoint_Annotations::ArenaDtor(void* object) {
  Waypoint_Annotations* _this = reinterpret_cast< Waypoint_Annotations* >(object);
  (void)_this;
}
void Waypoint_Annotations::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Waypoint_Annotations::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Waypoint_Annotations& Waypoint_Annotations::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Waypoint_Annotations_bosdyn_2fapi_2fgraph_5fnav_2fmap_2eproto.base);
  return *internal_default_instance();
}


void Waypoint_Annotations::Clear() {
// @@protoc_insertion_point(message_clear_start:bosdyn.api.graph_nav.Waypoint.Annotations)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  if (GetArena() == nullptr && icp_variance_ != nullptr) {
    delete icp_variance_;
  }
  icp_variance_ = nullptr;
  if (GetArena() == nullptr && scan_match_region_ != nullptr) {
    delete scan_match_region_;
  }
  scan_match_region_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Waypoint_Annotations::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "bosdyn.api.graph_nav.Waypoint.Annotations.name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .bosdyn.api.SE3Covariance icp_variance = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_icp_variance(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .bosdyn.api.graph_nav.Waypoint.Annotations.LocalizeRegion scan_match_region = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_scan_match_region(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Waypoint_Annotations::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:bosdyn.api.graph_nav.Waypoint.Annotations)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "bosdyn.api.graph_nav.Waypoint.Annotations.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  // .bosdyn.api.SE3Covariance icp_variance = 2;
  if (this->has_icp_variance()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::icp_variance(this), target, stream);
  }

  // .bosdyn.api.graph_nav.Waypoint.Annotations.LocalizeRegion scan_match_region = 3;
  if (this->has_scan_match_region()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::scan_match_region(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:bosdyn.api.graph_nav.Waypoint.Annotations)
  return target;
}

size_t Waypoint_Annotations::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bosdyn.api.graph_nav.Waypoint.Annotations)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // .bosdyn.api.SE3Covariance icp_variance = 2;
  if (this->has_icp_variance()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *icp_variance_);
  }

  // .bosdyn.api.graph_nav.Waypoint.Annotations.LocalizeRegion scan_match_region = 3;
  if (this->has_scan_match_region()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *scan_match_region_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Waypoint_Annotations::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bosdyn.api.graph_nav.Waypoint.Annotations)
  GOOGLE_DCHECK_NE(&from, this);
  const Waypoint_Annotations* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Waypoint_Annotations>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bosdyn.api.graph_nav.Waypoint.Annotations)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bosdyn.api.graph_nav.Waypoint.Annotations)
    MergeFrom(*source);
  }
}

void Waypoint_Annotations::MergeFrom(const Waypoint_Annotations& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bosdyn.api.graph_nav.Waypoint.Annotations)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {
    _internal_set_name(from._internal_name());
  }
  if (from.has_icp_variance()) {
    _internal_mutable_icp_variance()->::bosdyn::api::SE3Covariance::MergeFrom(from._internal_icp_variance());
  }
  if (from.has_scan_match_region()) {
    _internal_mutable_scan_match_region()->::bosdyn::api::graph_nav::Waypoint_Annotations_LocalizeRegion::MergeFrom(from._internal_scan_match_region());
  }
}

void Waypoint_Annotations::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bosdyn.api.graph_nav.Waypoint.Annotations)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Waypoint_Annotations::CopyFrom(const Waypoint_Annotations& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bosdyn.api.graph_nav.Waypoint.Annotations)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Waypoint_Annotations::IsInitialized() const {
  return true;
}

void Waypoint_Annotations::InternalSwap(Waypoint_Annotations* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  name_.Swap(&other->name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Waypoint_Annotations, scan_match_region_)
      + sizeof(Waypoint_Annotations::scan_match_region_)
      - PROTOBUF_FIELD_OFFSET(Waypoint_Annotations, icp_variance_)>(
          reinterpret_cast<char*>(&icp_variance_),
          reinterpret_cast<char*>(&other->icp_variance_));
}

::PROTOBUF_NAMESPACE_ID::Metadata Waypoint_Annotations::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void Waypoint::InitAsDefaultInstance() {
  ::bosdyn::api::graph_nav::_Waypoint_default_instance_._instance.get_mutable()->waypoint_tform_ko_ = const_cast< ::bosdyn::api::SE3Pose*>(
      ::bosdyn::api::SE3Pose::internal_default_instance());
  ::bosdyn::api::graph_nav::_Waypoint_default_instance_._instance.get_mutable()->annotations_ = const_cast< ::bosdyn::api::graph_nav::Waypoint_Annotations*>(
      ::bosdyn::api::graph_nav::Waypoint_Annotations::internal_default_instance());
}
class Waypoint::_Internal {
 public:
  static const ::bosdyn::api::SE3Pose& waypoint_tform_ko(const Waypoint* msg);
  static const ::bosdyn::api::graph_nav::Waypoint_Annotations& annotations(const Waypoint* msg);
};

const ::bosdyn::api::SE3Pose&
Waypoint::_Internal::waypoint_tform_ko(const Waypoint* msg) {
  return *msg->waypoint_tform_ko_;
}
const ::bosdyn::api::graph_nav::Waypoint_Annotations&
Waypoint::_Internal::annotations(const Waypoint* msg) {
  return *msg->annotations_;
}
void Waypoint::clear_waypoint_tform_ko() {
  if (GetArena() == nullptr && waypoint_tform_ko_ != nullptr) {
    delete waypoint_tform_ko_;
  }
  waypoint_tform_ko_ = nullptr;
}
Waypoint::Waypoint(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:bosdyn.api.graph_nav.Waypoint)
}
Waypoint::Waypoint(const Waypoint& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_id().empty()) {
    id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_id(),
      GetArena());
  }
  snapshot_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_snapshot_id().empty()) {
    snapshot_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_snapshot_id(),
      GetArena());
  }
  if (from._internal_has_waypoint_tform_ko()) {
    waypoint_tform_ko_ = new ::bosdyn::api::SE3Pose(*from.waypoint_tform_ko_);
  } else {
    waypoint_tform_ko_ = nullptr;
  }
  if (from._internal_has_annotations()) {
    annotations_ = new ::bosdyn::api::graph_nav::Waypoint_Annotations(*from.annotations_);
  } else {
    annotations_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:bosdyn.api.graph_nav.Waypoint)
}

void Waypoint::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Waypoint_bosdyn_2fapi_2fgraph_5fnav_2fmap_2eproto.base);
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  snapshot_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&waypoint_tform_ko_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&annotations_) -
      reinterpret_cast<char*>(&waypoint_tform_ko_)) + sizeof(annotations_));
}

Waypoint::~Waypoint() {
  // @@protoc_insertion_point(destructor:bosdyn.api.graph_nav.Waypoint)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Waypoint::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  snapshot_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete waypoint_tform_ko_;
  if (this != internal_default_instance()) delete annotations_;
}

void Waypoint::ArenaDtor(void* object) {
  Waypoint* _this = reinterpret_cast< Waypoint* >(object);
  (void)_this;
}
void Waypoint::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Waypoint::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Waypoint& Waypoint::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Waypoint_bosdyn_2fapi_2fgraph_5fnav_2fmap_2eproto.base);
  return *internal_default_instance();
}


void Waypoint::Clear() {
// @@protoc_insertion_point(message_clear_start:bosdyn.api.graph_nav.Waypoint)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  snapshot_id_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  if (GetArena() == nullptr && waypoint_tform_ko_ != nullptr) {
    delete waypoint_tform_ko_;
  }
  waypoint_tform_ko_ = nullptr;
  if (GetArena() == nullptr && annotations_ != nullptr) {
    delete annotations_;
  }
  annotations_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Waypoint::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "bosdyn.api.graph_nav.Waypoint.id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string snapshot_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_snapshot_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "bosdyn.api.graph_nav.Waypoint.snapshot_id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .bosdyn.api.SE3Pose waypoint_tform_ko = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_waypoint_tform_ko(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .bosdyn.api.graph_nav.Waypoint.Annotations annotations = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_annotations(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Waypoint::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:bosdyn.api.graph_nav.Waypoint)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_id().data(), static_cast<int>(this->_internal_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "bosdyn.api.graph_nav.Waypoint.id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_id(), target);
  }

  // string snapshot_id = 2;
  if (this->snapshot_id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_snapshot_id().data(), static_cast<int>(this->_internal_snapshot_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "bosdyn.api.graph_nav.Waypoint.snapshot_id");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_snapshot_id(), target);
  }

  // .bosdyn.api.SE3Pose waypoint_tform_ko = 3;
  if (this->has_waypoint_tform_ko()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::waypoint_tform_ko(this), target, stream);
  }

  // .bosdyn.api.graph_nav.Waypoint.Annotations annotations = 4;
  if (this->has_annotations()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        4, _Internal::annotations(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:bosdyn.api.graph_nav.Waypoint)
  return target;
}

size_t Waypoint::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bosdyn.api.graph_nav.Waypoint)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_id());
  }

  // string snapshot_id = 2;
  if (this->snapshot_id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_snapshot_id());
  }

  // .bosdyn.api.SE3Pose waypoint_tform_ko = 3;
  if (this->has_waypoint_tform_ko()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *waypoint_tform_ko_);
  }

  // .bosdyn.api.graph_nav.Waypoint.Annotations annotations = 4;
  if (this->has_annotations()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *annotations_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Waypoint::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bosdyn.api.graph_nav.Waypoint)
  GOOGLE_DCHECK_NE(&from, this);
  const Waypoint* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Waypoint>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bosdyn.api.graph_nav.Waypoint)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bosdyn.api.graph_nav.Waypoint)
    MergeFrom(*source);
  }
}

void Waypoint::MergeFrom(const Waypoint& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bosdyn.api.graph_nav.Waypoint)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.id().size() > 0) {
    _internal_set_id(from._internal_id());
  }
  if (from.snapshot_id().size() > 0) {
    _internal_set_snapshot_id(from._internal_snapshot_id());
  }
  if (from.has_waypoint_tform_ko()) {
    _internal_mutable_waypoint_tform_ko()->::bosdyn::api::SE3Pose::MergeFrom(from._internal_waypoint_tform_ko());
  }
  if (from.has_annotations()) {
    _internal_mutable_annotations()->::bosdyn::api::graph_nav::Waypoint_Annotations::MergeFrom(from._internal_annotations());
  }
}

void Waypoint::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bosdyn.api.graph_nav.Waypoint)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Waypoint::CopyFrom(const Waypoint& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bosdyn.api.graph_nav.Waypoint)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Waypoint::IsInitialized() const {
  return true;
}

void Waypoint::InternalSwap(Waypoint* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  id_.Swap(&other->id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  snapshot_id_.Swap(&other->snapshot_id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Waypoint, annotations_)
      + sizeof(Waypoint::annotations_)
      - PROTOBUF_FIELD_OFFSET(Waypoint, waypoint_tform_ko_)>(
          reinterpret_cast<char*>(&waypoint_tform_ko_),
          reinterpret_cast<char*>(&other->waypoint_tform_ko_));
}

::PROTOBUF_NAMESPACE_ID::Metadata Waypoint::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void WaypointSnapshot::InitAsDefaultInstance() {
  ::bosdyn::api::graph_nav::_WaypointSnapshot_default_instance_._instance.get_mutable()->point_cloud_ = const_cast< ::bosdyn::api::PointCloud*>(
      ::bosdyn::api::PointCloud::internal_default_instance());
  ::bosdyn::api::graph_nav::_WaypointSnapshot_default_instance_._instance.get_mutable()->robot_state_ = const_cast< ::bosdyn::api::RobotState*>(
      ::bosdyn::api::RobotState::internal_default_instance());
}
class WaypointSnapshot::_Internal {
 public:
  static const ::bosdyn::api::PointCloud& point_cloud(const WaypointSnapshot* msg);
  static const ::bosdyn::api::RobotState& robot_state(const WaypointSnapshot* msg);
};

const ::bosdyn::api::PointCloud&
WaypointSnapshot::_Internal::point_cloud(const WaypointSnapshot* msg) {
  return *msg->point_cloud_;
}
const ::bosdyn::api::RobotState&
WaypointSnapshot::_Internal::robot_state(const WaypointSnapshot* msg) {
  return *msg->robot_state_;
}
void WaypointSnapshot::clear_images() {
  images_.Clear();
}
void WaypointSnapshot::clear_point_cloud() {
  if (GetArena() == nullptr && point_cloud_ != nullptr) {
    delete point_cloud_;
  }
  point_cloud_ = nullptr;
}
void WaypointSnapshot::clear_objects() {
  objects_.Clear();
}
void WaypointSnapshot::clear_robot_state() {
  if (GetArena() == nullptr && robot_state_ != nullptr) {
    delete robot_state_;
  }
  robot_state_ = nullptr;
}
void WaypointSnapshot::clear_robot_local_grids() {
  robot_local_grids_.Clear();
}
WaypointSnapshot::WaypointSnapshot(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  images_(arena),
  objects_(arena),
  robot_local_grids_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:bosdyn.api.graph_nav.WaypointSnapshot)
}
WaypointSnapshot::WaypointSnapshot(const WaypointSnapshot& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      images_(from.images_),
      objects_(from.objects_),
      robot_local_grids_(from.robot_local_grids_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_id().empty()) {
    id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_id(),
      GetArena());
  }
  version_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_version_id().empty()) {
    version_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_version_id(),
      GetArena());
  }
  if (from._internal_has_point_cloud()) {
    point_cloud_ = new ::bosdyn::api::PointCloud(*from.point_cloud_);
  } else {
    point_cloud_ = nullptr;
  }
  if (from._internal_has_robot_state()) {
    robot_state_ = new ::bosdyn::api::RobotState(*from.robot_state_);
  } else {
    robot_state_ = nullptr;
  }
  is_point_cloud_processed_ = from.is_point_cloud_processed_;
  // @@protoc_insertion_point(copy_constructor:bosdyn.api.graph_nav.WaypointSnapshot)
}

void WaypointSnapshot::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_WaypointSnapshot_bosdyn_2fapi_2fgraph_5fnav_2fmap_2eproto.base);
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  version_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&point_cloud_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&is_point_cloud_processed_) -
      reinterpret_cast<char*>(&point_cloud_)) + sizeof(is_point_cloud_processed_));
}

WaypointSnapshot::~WaypointSnapshot() {
  // @@protoc_insertion_point(destructor:bosdyn.api.graph_nav.WaypointSnapshot)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void WaypointSnapshot::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  version_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete point_cloud_;
  if (this != internal_default_instance()) delete robot_state_;
}

void WaypointSnapshot::ArenaDtor(void* object) {
  WaypointSnapshot* _this = reinterpret_cast< WaypointSnapshot* >(object);
  (void)_this;
}
void WaypointSnapshot::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void WaypointSnapshot::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const WaypointSnapshot& WaypointSnapshot::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_WaypointSnapshot_bosdyn_2fapi_2fgraph_5fnav_2fmap_2eproto.base);
  return *internal_default_instance();
}


void WaypointSnapshot::Clear() {
// @@protoc_insertion_point(message_clear_start:bosdyn.api.graph_nav.WaypointSnapshot)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  images_.Clear();
  objects_.Clear();
  robot_local_grids_.Clear();
  id_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  version_id_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  if (GetArena() == nullptr && point_cloud_ != nullptr) {
    delete point_cloud_;
  }
  point_cloud_ = nullptr;
  if (GetArena() == nullptr && robot_state_ != nullptr) {
    delete robot_state_;
  }
  robot_state_ = nullptr;
  is_point_cloud_processed_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* WaypointSnapshot::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "bosdyn.api.graph_nav.WaypointSnapshot.id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .bosdyn.api.ImageResponse images = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_images(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else goto handle_unusual;
        continue;
      // .bosdyn.api.PointCloud point_cloud = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_point_cloud(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .bosdyn.api.WorldObject objects = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_objects(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<34>(ptr));
        } else goto handle_unusual;
        continue;
      // .bosdyn.api.RobotState robot_state = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          ptr = ctx->ParseMessage(_internal_mutable_robot_state(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .bosdyn.api.LocalGrid robot_local_grids = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_robot_local_grids(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<50>(ptr));
        } else goto handle_unusual;
        continue;
      // bool is_point_cloud_processed = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 64)) {
          is_point_cloud_processed_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string version_id = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 74)) {
          auto str = _internal_mutable_version_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "bosdyn.api.graph_nav.WaypointSnapshot.version_id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* WaypointSnapshot::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:bosdyn.api.graph_nav.WaypointSnapshot)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_id().data(), static_cast<int>(this->_internal_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "bosdyn.api.graph_nav.WaypointSnapshot.id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_id(), target);
  }

  // repeated .bosdyn.api.ImageResponse images = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_images_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, this->_internal_images(i), target, stream);
  }

  // .bosdyn.api.PointCloud point_cloud = 3;
  if (this->has_point_cloud()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::point_cloud(this), target, stream);
  }

  // repeated .bosdyn.api.WorldObject objects = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_objects_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(4, this->_internal_objects(i), target, stream);
  }

  // .bosdyn.api.RobotState robot_state = 5;
  if (this->has_robot_state()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        5, _Internal::robot_state(this), target, stream);
  }

  // repeated .bosdyn.api.LocalGrid robot_local_grids = 6;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_robot_local_grids_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(6, this->_internal_robot_local_grids(i), target, stream);
  }

  // bool is_point_cloud_processed = 8;
  if (this->is_point_cloud_processed() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(8, this->_internal_is_point_cloud_processed(), target);
  }

  // string version_id = 9;
  if (this->version_id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_version_id().data(), static_cast<int>(this->_internal_version_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "bosdyn.api.graph_nav.WaypointSnapshot.version_id");
    target = stream->WriteStringMaybeAliased(
        9, this->_internal_version_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:bosdyn.api.graph_nav.WaypointSnapshot)
  return target;
}

size_t WaypointSnapshot::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bosdyn.api.graph_nav.WaypointSnapshot)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .bosdyn.api.ImageResponse images = 2;
  total_size += 1UL * this->_internal_images_size();
  for (const auto& msg : this->images_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .bosdyn.api.WorldObject objects = 4;
  total_size += 1UL * this->_internal_objects_size();
  for (const auto& msg : this->objects_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .bosdyn.api.LocalGrid robot_local_grids = 6;
  total_size += 1UL * this->_internal_robot_local_grids_size();
  for (const auto& msg : this->robot_local_grids_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string id = 1;
  if (this->id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_id());
  }

  // string version_id = 9;
  if (this->version_id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_version_id());
  }

  // .bosdyn.api.PointCloud point_cloud = 3;
  if (this->has_point_cloud()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *point_cloud_);
  }

  // .bosdyn.api.RobotState robot_state = 5;
  if (this->has_robot_state()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *robot_state_);
  }

  // bool is_point_cloud_processed = 8;
  if (this->is_point_cloud_processed() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void WaypointSnapshot::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bosdyn.api.graph_nav.WaypointSnapshot)
  GOOGLE_DCHECK_NE(&from, this);
  const WaypointSnapshot* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<WaypointSnapshot>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bosdyn.api.graph_nav.WaypointSnapshot)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bosdyn.api.graph_nav.WaypointSnapshot)
    MergeFrom(*source);
  }
}

void WaypointSnapshot::MergeFrom(const WaypointSnapshot& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bosdyn.api.graph_nav.WaypointSnapshot)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  images_.MergeFrom(from.images_);
  objects_.MergeFrom(from.objects_);
  robot_local_grids_.MergeFrom(from.robot_local_grids_);
  if (from.id().size() > 0) {
    _internal_set_id(from._internal_id());
  }
  if (from.version_id().size() > 0) {
    _internal_set_version_id(from._internal_version_id());
  }
  if (from.has_point_cloud()) {
    _internal_mutable_point_cloud()->::bosdyn::api::PointCloud::MergeFrom(from._internal_point_cloud());
  }
  if (from.has_robot_state()) {
    _internal_mutable_robot_state()->::bosdyn::api::RobotState::MergeFrom(from._internal_robot_state());
  }
  if (from.is_point_cloud_processed() != 0) {
    _internal_set_is_point_cloud_processed(from._internal_is_point_cloud_processed());
  }
}

void WaypointSnapshot::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bosdyn.api.graph_nav.WaypointSnapshot)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void WaypointSnapshot::CopyFrom(const WaypointSnapshot& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bosdyn.api.graph_nav.WaypointSnapshot)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WaypointSnapshot::IsInitialized() const {
  return true;
}

void WaypointSnapshot::InternalSwap(WaypointSnapshot* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  images_.InternalSwap(&other->images_);
  objects_.InternalSwap(&other->objects_);
  robot_local_grids_.InternalSwap(&other->robot_local_grids_);
  id_.Swap(&other->id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  version_id_.Swap(&other->version_id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(WaypointSnapshot, is_point_cloud_processed_)
      + sizeof(WaypointSnapshot::is_point_cloud_processed_)
      - PROTOBUF_FIELD_OFFSET(WaypointSnapshot, point_cloud_)>(
          reinterpret_cast<char*>(&point_cloud_),
          reinterpret_cast<char*>(&other->point_cloud_));
}

::PROTOBUF_NAMESPACE_ID::Metadata WaypointSnapshot::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void Edge_Id::InitAsDefaultInstance() {
}
class Edge_Id::_Internal {
 public:
};

Edge_Id::Edge_Id(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:bosdyn.api.graph_nav.Edge.Id)
}
Edge_Id::Edge_Id(const Edge_Id& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  from_waypoint_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_from_waypoint().empty()) {
    from_waypoint_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_from_waypoint(),
      GetArena());
  }
  to_waypoint_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_to_waypoint().empty()) {
    to_waypoint_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_to_waypoint(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:bosdyn.api.graph_nav.Edge.Id)
}

void Edge_Id::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Edge_Id_bosdyn_2fapi_2fgraph_5fnav_2fmap_2eproto.base);
  from_waypoint_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  to_waypoint_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

Edge_Id::~Edge_Id() {
  // @@protoc_insertion_point(destructor:bosdyn.api.graph_nav.Edge.Id)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Edge_Id::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  from_waypoint_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  to_waypoint_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void Edge_Id::ArenaDtor(void* object) {
  Edge_Id* _this = reinterpret_cast< Edge_Id* >(object);
  (void)_this;
}
void Edge_Id::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Edge_Id::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Edge_Id& Edge_Id::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Edge_Id_bosdyn_2fapi_2fgraph_5fnav_2fmap_2eproto.base);
  return *internal_default_instance();
}


void Edge_Id::Clear() {
// @@protoc_insertion_point(message_clear_start:bosdyn.api.graph_nav.Edge.Id)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  from_waypoint_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  to_waypoint_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Edge_Id::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string from_waypoint = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_from_waypoint();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "bosdyn.api.graph_nav.Edge.Id.from_waypoint"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string to_waypoint = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_to_waypoint();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "bosdyn.api.graph_nav.Edge.Id.to_waypoint"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Edge_Id::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:bosdyn.api.graph_nav.Edge.Id)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string from_waypoint = 1;
  if (this->from_waypoint().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_from_waypoint().data(), static_cast<int>(this->_internal_from_waypoint().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "bosdyn.api.graph_nav.Edge.Id.from_waypoint");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_from_waypoint(), target);
  }

  // string to_waypoint = 2;
  if (this->to_waypoint().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_to_waypoint().data(), static_cast<int>(this->_internal_to_waypoint().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "bosdyn.api.graph_nav.Edge.Id.to_waypoint");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_to_waypoint(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:bosdyn.api.graph_nav.Edge.Id)
  return target;
}

size_t Edge_Id::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bosdyn.api.graph_nav.Edge.Id)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string from_waypoint = 1;
  if (this->from_waypoint().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_from_waypoint());
  }

  // string to_waypoint = 2;
  if (this->to_waypoint().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_to_waypoint());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Edge_Id::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bosdyn.api.graph_nav.Edge.Id)
  GOOGLE_DCHECK_NE(&from, this);
  const Edge_Id* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Edge_Id>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bosdyn.api.graph_nav.Edge.Id)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bosdyn.api.graph_nav.Edge.Id)
    MergeFrom(*source);
  }
}

void Edge_Id::MergeFrom(const Edge_Id& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bosdyn.api.graph_nav.Edge.Id)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.from_waypoint().size() > 0) {
    _internal_set_from_waypoint(from._internal_from_waypoint());
  }
  if (from.to_waypoint().size() > 0) {
    _internal_set_to_waypoint(from._internal_to_waypoint());
  }
}

void Edge_Id::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bosdyn.api.graph_nav.Edge.Id)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Edge_Id::CopyFrom(const Edge_Id& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bosdyn.api.graph_nav.Edge.Id)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Edge_Id::IsInitialized() const {
  return true;
}

void Edge_Id::InternalSwap(Edge_Id* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  from_waypoint_.Swap(&other->from_waypoint_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  to_waypoint_.Swap(&other->to_waypoint_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata Edge_Id::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void Edge_Annotations_StairData_StraightStaircase_Stair::InitAsDefaultInstance() {
}
class Edge_Annotations_StairData_StraightStaircase_Stair::_Internal {
 public:
};

Edge_Annotations_StairData_StraightStaircase_Stair::Edge_Annotations_StairData_StraightStaircase_Stair(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:bosdyn.api.graph_nav.Edge.Annotations.StairData.StraightStaircase.Stair)
}
Edge_Annotations_StairData_StraightStaircase_Stair::Edge_Annotations_StairData_StraightStaircase_Stair(const Edge_Annotations_StairData_StraightStaircase_Stair& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&rise_, &from.rise_,
    static_cast<size_t>(reinterpret_cast<char*>(&run_) -
    reinterpret_cast<char*>(&rise_)) + sizeof(run_));
  // @@protoc_insertion_point(copy_constructor:bosdyn.api.graph_nav.Edge.Annotations.StairData.StraightStaircase.Stair)
}

void Edge_Annotations_StairData_StraightStaircase_Stair::SharedCtor() {
  ::memset(&rise_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&run_) -
      reinterpret_cast<char*>(&rise_)) + sizeof(run_));
}

Edge_Annotations_StairData_StraightStaircase_Stair::~Edge_Annotations_StairData_StraightStaircase_Stair() {
  // @@protoc_insertion_point(destructor:bosdyn.api.graph_nav.Edge.Annotations.StairData.StraightStaircase.Stair)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Edge_Annotations_StairData_StraightStaircase_Stair::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void Edge_Annotations_StairData_StraightStaircase_Stair::ArenaDtor(void* object) {
  Edge_Annotations_StairData_StraightStaircase_Stair* _this = reinterpret_cast< Edge_Annotations_StairData_StraightStaircase_Stair* >(object);
  (void)_this;
}
void Edge_Annotations_StairData_StraightStaircase_Stair::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Edge_Annotations_StairData_StraightStaircase_Stair::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Edge_Annotations_StairData_StraightStaircase_Stair& Edge_Annotations_StairData_StraightStaircase_Stair::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Edge_Annotations_StairData_StraightStaircase_Stair_bosdyn_2fapi_2fgraph_5fnav_2fmap_2eproto.base);
  return *internal_default_instance();
}


void Edge_Annotations_StairData_StraightStaircase_Stair::Clear() {
// @@protoc_insertion_point(message_clear_start:bosdyn.api.graph_nav.Edge.Annotations.StairData.StraightStaircase.Stair)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&rise_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&run_) -
      reinterpret_cast<char*>(&rise_)) + sizeof(run_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Edge_Annotations_StairData_StraightStaircase_Stair::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // float rise = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 13)) {
          rise_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      // float run = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 21)) {
          run_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Edge_Annotations_StairData_StraightStaircase_Stair::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:bosdyn.api.graph_nav.Edge.Annotations.StairData.StraightStaircase.Stair)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float rise = 1;
  if (!(this->rise() <= 0 && this->rise() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(1, this->_internal_rise(), target);
  }

  // float run = 2;
  if (!(this->run() <= 0 && this->run() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(2, this->_internal_run(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:bosdyn.api.graph_nav.Edge.Annotations.StairData.StraightStaircase.Stair)
  return target;
}

size_t Edge_Annotations_StairData_StraightStaircase_Stair::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bosdyn.api.graph_nav.Edge.Annotations.StairData.StraightStaircase.Stair)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // float rise = 1;
  if (!(this->rise() <= 0 && this->rise() >= 0)) {
    total_size += 1 + 4;
  }

  // float run = 2;
  if (!(this->run() <= 0 && this->run() >= 0)) {
    total_size += 1 + 4;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Edge_Annotations_StairData_StraightStaircase_Stair::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bosdyn.api.graph_nav.Edge.Annotations.StairData.StraightStaircase.Stair)
  GOOGLE_DCHECK_NE(&from, this);
  const Edge_Annotations_StairData_StraightStaircase_Stair* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Edge_Annotations_StairData_StraightStaircase_Stair>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bosdyn.api.graph_nav.Edge.Annotations.StairData.StraightStaircase.Stair)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bosdyn.api.graph_nav.Edge.Annotations.StairData.StraightStaircase.Stair)
    MergeFrom(*source);
  }
}

void Edge_Annotations_StairData_StraightStaircase_Stair::MergeFrom(const Edge_Annotations_StairData_StraightStaircase_Stair& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bosdyn.api.graph_nav.Edge.Annotations.StairData.StraightStaircase.Stair)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (!(from.rise() <= 0 && from.rise() >= 0)) {
    _internal_set_rise(from._internal_rise());
  }
  if (!(from.run() <= 0 && from.run() >= 0)) {
    _internal_set_run(from._internal_run());
  }
}

void Edge_Annotations_StairData_StraightStaircase_Stair::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bosdyn.api.graph_nav.Edge.Annotations.StairData.StraightStaircase.Stair)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Edge_Annotations_StairData_StraightStaircase_Stair::CopyFrom(const Edge_Annotations_StairData_StraightStaircase_Stair& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bosdyn.api.graph_nav.Edge.Annotations.StairData.StraightStaircase.Stair)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Edge_Annotations_StairData_StraightStaircase_Stair::IsInitialized() const {
  return true;
}

void Edge_Annotations_StairData_StraightStaircase_Stair::InternalSwap(Edge_Annotations_StairData_StraightStaircase_Stair* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Edge_Annotations_StairData_StraightStaircase_Stair, run_)
      + sizeof(Edge_Annotations_StairData_StraightStaircase_Stair::run_)
      - PROTOBUF_FIELD_OFFSET(Edge_Annotations_StairData_StraightStaircase_Stair, rise_)>(
          reinterpret_cast<char*>(&rise_),
          reinterpret_cast<char*>(&other->rise_));
}

::PROTOBUF_NAMESPACE_ID::Metadata Edge_Annotations_StairData_StraightStaircase_Stair::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void Edge_Annotations_StairData_StraightStaircase::InitAsDefaultInstance() {
  ::bosdyn::api::graph_nav::_Edge_Annotations_StairData_StraightStaircase_default_instance_._instance.get_mutable()->from_ko_tform_stairs_ = const_cast< ::bosdyn::api::SE3Pose*>(
      ::bosdyn::api::SE3Pose::internal_default_instance());
}
class Edge_Annotations_StairData_StraightStaircase::_Internal {
 public:
  static const ::bosdyn::api::SE3Pose& from_ko_tform_stairs(const Edge_Annotations_StairData_StraightStaircase* msg);
};

const ::bosdyn::api::SE3Pose&
Edge_Annotations_StairData_StraightStaircase::_Internal::from_ko_tform_stairs(const Edge_Annotations_StairData_StraightStaircase* msg) {
  return *msg->from_ko_tform_stairs_;
}
void Edge_Annotations_StairData_StraightStaircase::clear_from_ko_tform_stairs() {
  if (GetArena() == nullptr && from_ko_tform_stairs_ != nullptr) {
    delete from_ko_tform_stairs_;
  }
  from_ko_tform_stairs_ = nullptr;
}
Edge_Annotations_StairData_StraightStaircase::Edge_Annotations_StairData_StraightStaircase(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  stairs_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:bosdyn.api.graph_nav.Edge.Annotations.StairData.StraightStaircase)
}
Edge_Annotations_StairData_StraightStaircase::Edge_Annotations_StairData_StraightStaircase(const Edge_Annotations_StairData_StraightStaircase& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      stairs_(from.stairs_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_from_ko_tform_stairs()) {
    from_ko_tform_stairs_ = new ::bosdyn::api::SE3Pose(*from.from_ko_tform_stairs_);
  } else {
    from_ko_tform_stairs_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:bosdyn.api.graph_nav.Edge.Annotations.StairData.StraightStaircase)
}

void Edge_Annotations_StairData_StraightStaircase::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Edge_Annotations_StairData_StraightStaircase_bosdyn_2fapi_2fgraph_5fnav_2fmap_2eproto.base);
  from_ko_tform_stairs_ = nullptr;
}

Edge_Annotations_StairData_StraightStaircase::~Edge_Annotations_StairData_StraightStaircase() {
  // @@protoc_insertion_point(destructor:bosdyn.api.graph_nav.Edge.Annotations.StairData.StraightStaircase)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Edge_Annotations_StairData_StraightStaircase::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete from_ko_tform_stairs_;
}

void Edge_Annotations_StairData_StraightStaircase::ArenaDtor(void* object) {
  Edge_Annotations_StairData_StraightStaircase* _this = reinterpret_cast< Edge_Annotations_StairData_StraightStaircase* >(object);
  (void)_this;
}
void Edge_Annotations_StairData_StraightStaircase::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Edge_Annotations_StairData_StraightStaircase::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Edge_Annotations_StairData_StraightStaircase& Edge_Annotations_StairData_StraightStaircase::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Edge_Annotations_StairData_StraightStaircase_bosdyn_2fapi_2fgraph_5fnav_2fmap_2eproto.base);
  return *internal_default_instance();
}


void Edge_Annotations_StairData_StraightStaircase::Clear() {
// @@protoc_insertion_point(message_clear_start:bosdyn.api.graph_nav.Edge.Annotations.StairData.StraightStaircase)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  stairs_.Clear();
  if (GetArena() == nullptr && from_ko_tform_stairs_ != nullptr) {
    delete from_ko_tform_stairs_;
  }
  from_ko_tform_stairs_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Edge_Annotations_StairData_StraightStaircase::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .bosdyn.api.SE3Pose from_ko_tform_stairs = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_from_ko_tform_stairs(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .bosdyn.api.graph_nav.Edge.Annotations.StairData.StraightStaircase.Stair stairs = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_stairs(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Edge_Annotations_StairData_StraightStaircase::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:bosdyn.api.graph_nav.Edge.Annotations.StairData.StraightStaircase)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .bosdyn.api.SE3Pose from_ko_tform_stairs = 1;
  if (this->has_from_ko_tform_stairs()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::from_ko_tform_stairs(this), target, stream);
  }

  // repeated .bosdyn.api.graph_nav.Edge.Annotations.StairData.StraightStaircase.Stair stairs = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_stairs_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, this->_internal_stairs(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:bosdyn.api.graph_nav.Edge.Annotations.StairData.StraightStaircase)
  return target;
}

size_t Edge_Annotations_StairData_StraightStaircase::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bosdyn.api.graph_nav.Edge.Annotations.StairData.StraightStaircase)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .bosdyn.api.graph_nav.Edge.Annotations.StairData.StraightStaircase.Stair stairs = 2;
  total_size += 1UL * this->_internal_stairs_size();
  for (const auto& msg : this->stairs_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // .bosdyn.api.SE3Pose from_ko_tform_stairs = 1;
  if (this->has_from_ko_tform_stairs()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *from_ko_tform_stairs_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Edge_Annotations_StairData_StraightStaircase::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bosdyn.api.graph_nav.Edge.Annotations.StairData.StraightStaircase)
  GOOGLE_DCHECK_NE(&from, this);
  const Edge_Annotations_StairData_StraightStaircase* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Edge_Annotations_StairData_StraightStaircase>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bosdyn.api.graph_nav.Edge.Annotations.StairData.StraightStaircase)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bosdyn.api.graph_nav.Edge.Annotations.StairData.StraightStaircase)
    MergeFrom(*source);
  }
}

void Edge_Annotations_StairData_StraightStaircase::MergeFrom(const Edge_Annotations_StairData_StraightStaircase& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bosdyn.api.graph_nav.Edge.Annotations.StairData.StraightStaircase)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  stairs_.MergeFrom(from.stairs_);
  if (from.has_from_ko_tform_stairs()) {
    _internal_mutable_from_ko_tform_stairs()->::bosdyn::api::SE3Pose::MergeFrom(from._internal_from_ko_tform_stairs());
  }
}

void Edge_Annotations_StairData_StraightStaircase::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bosdyn.api.graph_nav.Edge.Annotations.StairData.StraightStaircase)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Edge_Annotations_StairData_StraightStaircase::CopyFrom(const Edge_Annotations_StairData_StraightStaircase& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bosdyn.api.graph_nav.Edge.Annotations.StairData.StraightStaircase)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Edge_Annotations_StairData_StraightStaircase::IsInitialized() const {
  return true;
}

void Edge_Annotations_StairData_StraightStaircase::InternalSwap(Edge_Annotations_StairData_StraightStaircase* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  stairs_.InternalSwap(&other->stairs_);
  swap(from_ko_tform_stairs_, other->from_ko_tform_stairs_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Edge_Annotations_StairData_StraightStaircase::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void Edge_Annotations_StairData::InitAsDefaultInstance() {
  ::bosdyn::api::graph_nav::_Edge_Annotations_StairData_default_instance_._instance.get_mutable()->straight_staircase_ = const_cast< ::bosdyn::api::graph_nav::Edge_Annotations_StairData_StraightStaircase*>(
      ::bosdyn::api::graph_nav::Edge_Annotations_StairData_StraightStaircase::internal_default_instance());
}
class Edge_Annotations_StairData::_Internal {
 public:
  static const ::bosdyn::api::graph_nav::Edge_Annotations_StairData_StraightStaircase& straight_staircase(const Edge_Annotations_StairData* msg);
};

const ::bosdyn::api::graph_nav::Edge_Annotations_StairData_StraightStaircase&
Edge_Annotations_StairData::_Internal::straight_staircase(const Edge_Annotations_StairData* msg) {
  return *msg->straight_staircase_;
}
Edge_Annotations_StairData::Edge_Annotations_StairData(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:bosdyn.api.graph_nav.Edge.Annotations.StairData)
}
Edge_Annotations_StairData::Edge_Annotations_StairData(const Edge_Annotations_StairData& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_straight_staircase()) {
    straight_staircase_ = new ::bosdyn::api::graph_nav::Edge_Annotations_StairData_StraightStaircase(*from.straight_staircase_);
  } else {
    straight_staircase_ = nullptr;
  }
  state_ = from.state_;
  // @@protoc_insertion_point(copy_constructor:bosdyn.api.graph_nav.Edge.Annotations.StairData)
}

void Edge_Annotations_StairData::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Edge_Annotations_StairData_bosdyn_2fapi_2fgraph_5fnav_2fmap_2eproto.base);
  ::memset(&straight_staircase_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&state_) -
      reinterpret_cast<char*>(&straight_staircase_)) + sizeof(state_));
}

Edge_Annotations_StairData::~Edge_Annotations_StairData() {
  // @@protoc_insertion_point(destructor:bosdyn.api.graph_nav.Edge.Annotations.StairData)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Edge_Annotations_StairData::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete straight_staircase_;
}

void Edge_Annotations_StairData::ArenaDtor(void* object) {
  Edge_Annotations_StairData* _this = reinterpret_cast< Edge_Annotations_StairData* >(object);
  (void)_this;
}
void Edge_Annotations_StairData::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Edge_Annotations_StairData::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Edge_Annotations_StairData& Edge_Annotations_StairData::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Edge_Annotations_StairData_bosdyn_2fapi_2fgraph_5fnav_2fmap_2eproto.base);
  return *internal_default_instance();
}


void Edge_Annotations_StairData::Clear() {
// @@protoc_insertion_point(message_clear_start:bosdyn.api.graph_nav.Edge.Annotations.StairData)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && straight_staircase_ != nullptr) {
    delete straight_staircase_;
  }
  straight_staircase_ = nullptr;
  state_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Edge_Annotations_StairData::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .bosdyn.api.graph_nav.AnnotationState state = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_state(static_cast<::bosdyn::api::graph_nav::AnnotationState>(val));
        } else goto handle_unusual;
        continue;
      // .bosdyn.api.graph_nav.Edge.Annotations.StairData.StraightStaircase straight_staircase = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_straight_staircase(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Edge_Annotations_StairData::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:bosdyn.api.graph_nav.Edge.Annotations.StairData)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .bosdyn.api.graph_nav.AnnotationState state = 1;
  if (this->state() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->_internal_state(), target);
  }

  // .bosdyn.api.graph_nav.Edge.Annotations.StairData.StraightStaircase straight_staircase = 2;
  if (this->has_straight_staircase()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::straight_staircase(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:bosdyn.api.graph_nav.Edge.Annotations.StairData)
  return target;
}

size_t Edge_Annotations_StairData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bosdyn.api.graph_nav.Edge.Annotations.StairData)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .bosdyn.api.graph_nav.Edge.Annotations.StairData.StraightStaircase straight_staircase = 2;
  if (this->has_straight_staircase()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *straight_staircase_);
  }

  // .bosdyn.api.graph_nav.AnnotationState state = 1;
  if (this->state() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_state());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Edge_Annotations_StairData::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bosdyn.api.graph_nav.Edge.Annotations.StairData)
  GOOGLE_DCHECK_NE(&from, this);
  const Edge_Annotations_StairData* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Edge_Annotations_StairData>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bosdyn.api.graph_nav.Edge.Annotations.StairData)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bosdyn.api.graph_nav.Edge.Annotations.StairData)
    MergeFrom(*source);
  }
}

void Edge_Annotations_StairData::MergeFrom(const Edge_Annotations_StairData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bosdyn.api.graph_nav.Edge.Annotations.StairData)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_straight_staircase()) {
    _internal_mutable_straight_staircase()->::bosdyn::api::graph_nav::Edge_Annotations_StairData_StraightStaircase::MergeFrom(from._internal_straight_staircase());
  }
  if (from.state() != 0) {
    _internal_set_state(from._internal_state());
  }
}

void Edge_Annotations_StairData::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bosdyn.api.graph_nav.Edge.Annotations.StairData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Edge_Annotations_StairData::CopyFrom(const Edge_Annotations_StairData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bosdyn.api.graph_nav.Edge.Annotations.StairData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Edge_Annotations_StairData::IsInitialized() const {
  return true;
}

void Edge_Annotations_StairData::InternalSwap(Edge_Annotations_StairData* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Edge_Annotations_StairData, state_)
      + sizeof(Edge_Annotations_StairData::state_)
      - PROTOBUF_FIELD_OFFSET(Edge_Annotations_StairData, straight_staircase_)>(
          reinterpret_cast<char*>(&straight_staircase_),
          reinterpret_cast<char*>(&other->straight_staircase_));
}

::PROTOBUF_NAMESPACE_ID::Metadata Edge_Annotations_StairData::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void Edge_Annotations::InitAsDefaultInstance() {
  ::bosdyn::api::graph_nav::_Edge_Annotations_default_instance_._instance.get_mutable()->vel_limit_ = const_cast< ::bosdyn::api::SE2VelocityLimit*>(
      ::bosdyn::api::SE2VelocityLimit::internal_default_instance());
  ::bosdyn::api::graph_nav::_Edge_Annotations_default_instance_._instance.get_mutable()->stairs_ = const_cast< ::bosdyn::api::graph_nav::Edge_Annotations_StairData*>(
      ::bosdyn::api::graph_nav::Edge_Annotations_StairData::internal_default_instance());
  ::bosdyn::api::graph_nav::_Edge_Annotations_default_instance_._instance.get_mutable()->require_alignment_ = const_cast< PROTOBUF_NAMESPACE_ID::BoolValue*>(
      PROTOBUF_NAMESPACE_ID::BoolValue::internal_default_instance());
  ::bosdyn::api::graph_nav::_Edge_Annotations_default_instance_._instance.get_mutable()->flat_ground_ = const_cast< PROTOBUF_NAMESPACE_ID::BoolValue*>(
      PROTOBUF_NAMESPACE_ID::BoolValue::internal_default_instance());
  ::bosdyn::api::graph_nav::_Edge_Annotations_default_instance_._instance.get_mutable()->ground_mu_hint_ = const_cast< PROTOBUF_NAMESPACE_ID::DoubleValue*>(
      PROTOBUF_NAMESPACE_ID::DoubleValue::internal_default_instance());
  ::bosdyn::api::graph_nav::_Edge_Annotations_default_instance_._instance.get_mutable()->grated_floor_ = const_cast< PROTOBUF_NAMESPACE_ID::BoolValue*>(
      PROTOBUF_NAMESPACE_ID::BoolValue::internal_default_instance());
}
class Edge_Annotations::_Internal {
 public:
  static const ::bosdyn::api::SE2VelocityLimit& vel_limit(const Edge_Annotations* msg);
  static const ::bosdyn::api::graph_nav::Edge_Annotations_StairData& stairs(const Edge_Annotations* msg);
  static const PROTOBUF_NAMESPACE_ID::BoolValue& require_alignment(const Edge_Annotations* msg);
  static const PROTOBUF_NAMESPACE_ID::BoolValue& flat_ground(const Edge_Annotations* msg);
  static const PROTOBUF_NAMESPACE_ID::DoubleValue& ground_mu_hint(const Edge_Annotations* msg);
  static const PROTOBUF_NAMESPACE_ID::BoolValue& grated_floor(const Edge_Annotations* msg);
};

const ::bosdyn::api::SE2VelocityLimit&
Edge_Annotations::_Internal::vel_limit(const Edge_Annotations* msg) {
  return *msg->vel_limit_;
}
const ::bosdyn::api::graph_nav::Edge_Annotations_StairData&
Edge_Annotations::_Internal::stairs(const Edge_Annotations* msg) {
  return *msg->stairs_;
}
const PROTOBUF_NAMESPACE_ID::BoolValue&
Edge_Annotations::_Internal::require_alignment(const Edge_Annotations* msg) {
  return *msg->require_alignment_;
}
const PROTOBUF_NAMESPACE_ID::BoolValue&
Edge_Annotations::_Internal::flat_ground(const Edge_Annotations* msg) {
  return *msg->flat_ground_;
}
const PROTOBUF_NAMESPACE_ID::DoubleValue&
Edge_Annotations::_Internal::ground_mu_hint(const Edge_Annotations* msg) {
  return *msg->ground_mu_hint_;
}
const PROTOBUF_NAMESPACE_ID::BoolValue&
Edge_Annotations::_Internal::grated_floor(const Edge_Annotations* msg) {
  return *msg->grated_floor_;
}
void Edge_Annotations::clear_vel_limit() {
  if (GetArena() == nullptr && vel_limit_ != nullptr) {
    delete vel_limit_;
  }
  vel_limit_ = nullptr;
}
void Edge_Annotations::clear_require_alignment() {
  if (GetArena() == nullptr && require_alignment_ != nullptr) {
    delete require_alignment_;
  }
  require_alignment_ = nullptr;
}
void Edge_Annotations::clear_flat_ground() {
  if (GetArena() == nullptr && flat_ground_ != nullptr) {
    delete flat_ground_;
  }
  flat_ground_ = nullptr;
}
void Edge_Annotations::clear_ground_mu_hint() {
  if (GetArena() == nullptr && ground_mu_hint_ != nullptr) {
    delete ground_mu_hint_;
  }
  ground_mu_hint_ = nullptr;
}
void Edge_Annotations::clear_grated_floor() {
  if (GetArena() == nullptr && grated_floor_ != nullptr) {
    delete grated_floor_;
  }
  grated_floor_ = nullptr;
}
Edge_Annotations::Edge_Annotations(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:bosdyn.api.graph_nav.Edge.Annotations)
}
Edge_Annotations::Edge_Annotations(const Edge_Annotations& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_vel_limit()) {
    vel_limit_ = new ::bosdyn::api::SE2VelocityLimit(*from.vel_limit_);
  } else {
    vel_limit_ = nullptr;
  }
  if (from._internal_has_stairs()) {
    stairs_ = new ::bosdyn::api::graph_nav::Edge_Annotations_StairData(*from.stairs_);
  } else {
    stairs_ = nullptr;
  }
  if (from._internal_has_require_alignment()) {
    require_alignment_ = new PROTOBUF_NAMESPACE_ID::BoolValue(*from.require_alignment_);
  } else {
    require_alignment_ = nullptr;
  }
  if (from._internal_has_flat_ground()) {
    flat_ground_ = new PROTOBUF_NAMESPACE_ID::BoolValue(*from.flat_ground_);
  } else {
    flat_ground_ = nullptr;
  }
  if (from._internal_has_ground_mu_hint()) {
    ground_mu_hint_ = new PROTOBUF_NAMESPACE_ID::DoubleValue(*from.ground_mu_hint_);
  } else {
    ground_mu_hint_ = nullptr;
  }
  if (from._internal_has_grated_floor()) {
    grated_floor_ = new PROTOBUF_NAMESPACE_ID::BoolValue(*from.grated_floor_);
  } else {
    grated_floor_ = nullptr;
  }
  direction_constraint_ = from.direction_constraint_;
  // @@protoc_insertion_point(copy_constructor:bosdyn.api.graph_nav.Edge.Annotations)
}

void Edge_Annotations::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Edge_Annotations_bosdyn_2fapi_2fgraph_5fnav_2fmap_2eproto.base);
  ::memset(&vel_limit_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&direction_constraint_) -
      reinterpret_cast<char*>(&vel_limit_)) + sizeof(direction_constraint_));
}

Edge_Annotations::~Edge_Annotations() {
  // @@protoc_insertion_point(destructor:bosdyn.api.graph_nav.Edge.Annotations)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Edge_Annotations::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete vel_limit_;
  if (this != internal_default_instance()) delete stairs_;
  if (this != internal_default_instance()) delete require_alignment_;
  if (this != internal_default_instance()) delete flat_ground_;
  if (this != internal_default_instance()) delete ground_mu_hint_;
  if (this != internal_default_instance()) delete grated_floor_;
}

void Edge_Annotations::ArenaDtor(void* object) {
  Edge_Annotations* _this = reinterpret_cast< Edge_Annotations* >(object);
  (void)_this;
}
void Edge_Annotations::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Edge_Annotations::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Edge_Annotations& Edge_Annotations::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Edge_Annotations_bosdyn_2fapi_2fgraph_5fnav_2fmap_2eproto.base);
  return *internal_default_instance();
}


void Edge_Annotations::Clear() {
// @@protoc_insertion_point(message_clear_start:bosdyn.api.graph_nav.Edge.Annotations)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && vel_limit_ != nullptr) {
    delete vel_limit_;
  }
  vel_limit_ = nullptr;
  if (GetArena() == nullptr && stairs_ != nullptr) {
    delete stairs_;
  }
  stairs_ = nullptr;
  if (GetArena() == nullptr && require_alignment_ != nullptr) {
    delete require_alignment_;
  }
  require_alignment_ = nullptr;
  if (GetArena() == nullptr && flat_ground_ != nullptr) {
    delete flat_ground_;
  }
  flat_ground_ = nullptr;
  if (GetArena() == nullptr && ground_mu_hint_ != nullptr) {
    delete ground_mu_hint_;
  }
  ground_mu_hint_ = nullptr;
  if (GetArena() == nullptr && grated_floor_ != nullptr) {
    delete grated_floor_;
  }
  grated_floor_ = nullptr;
  direction_constraint_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Edge_Annotations::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .bosdyn.api.SE2VelocityLimit vel_limit = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_vel_limit(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .bosdyn.api.graph_nav.Edge.Annotations.StairData stairs = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_stairs(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .bosdyn.api.graph_nav.Edge.Annotations.DirectionConstraint direction_constraint = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_direction_constraint(static_cast<::bosdyn::api::graph_nav::Edge_Annotations_DirectionConstraint>(val));
        } else goto handle_unusual;
        continue;
      // .google.protobuf.BoolValue require_alignment = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          ptr = ctx->ParseMessage(_internal_mutable_require_alignment(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .google.protobuf.BoolValue flat_ground = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          ptr = ctx->ParseMessage(_internal_mutable_flat_ground(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .google.protobuf.DoubleValue ground_mu_hint = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 58)) {
          ptr = ctx->ParseMessage(_internal_mutable_ground_mu_hint(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .google.protobuf.BoolValue grated_floor = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 66)) {
          ptr = ctx->ParseMessage(_internal_mutable_grated_floor(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Edge_Annotations::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:bosdyn.api.graph_nav.Edge.Annotations)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .bosdyn.api.SE2VelocityLimit vel_limit = 1;
  if (this->has_vel_limit()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::vel_limit(this), target, stream);
  }

  // .bosdyn.api.graph_nav.Edge.Annotations.StairData stairs = 2;
  if (this->has_stairs()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::stairs(this), target, stream);
  }

  // .bosdyn.api.graph_nav.Edge.Annotations.DirectionConstraint direction_constraint = 4;
  if (this->direction_constraint() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      4, this->_internal_direction_constraint(), target);
  }

  // .google.protobuf.BoolValue require_alignment = 5;
  if (this->has_require_alignment()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        5, _Internal::require_alignment(this), target, stream);
  }

  // .google.protobuf.BoolValue flat_ground = 6;
  if (this->has_flat_ground()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        6, _Internal::flat_ground(this), target, stream);
  }

  // .google.protobuf.DoubleValue ground_mu_hint = 7;
  if (this->has_ground_mu_hint()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        7, _Internal::ground_mu_hint(this), target, stream);
  }

  // .google.protobuf.BoolValue grated_floor = 8;
  if (this->has_grated_floor()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        8, _Internal::grated_floor(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:bosdyn.api.graph_nav.Edge.Annotations)
  return target;
}

size_t Edge_Annotations::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bosdyn.api.graph_nav.Edge.Annotations)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .bosdyn.api.SE2VelocityLimit vel_limit = 1;
  if (this->has_vel_limit()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *vel_limit_);
  }

  // .bosdyn.api.graph_nav.Edge.Annotations.StairData stairs = 2;
  if (this->has_stairs()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *stairs_);
  }

  // .google.protobuf.BoolValue require_alignment = 5;
  if (this->has_require_alignment()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *require_alignment_);
  }

  // .google.protobuf.BoolValue flat_ground = 6;
  if (this->has_flat_ground()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *flat_ground_);
  }

  // .google.protobuf.DoubleValue ground_mu_hint = 7;
  if (this->has_ground_mu_hint()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *ground_mu_hint_);
  }

  // .google.protobuf.BoolValue grated_floor = 8;
  if (this->has_grated_floor()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *grated_floor_);
  }

  // .bosdyn.api.graph_nav.Edge.Annotations.DirectionConstraint direction_constraint = 4;
  if (this->direction_constraint() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_direction_constraint());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Edge_Annotations::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bosdyn.api.graph_nav.Edge.Annotations)
  GOOGLE_DCHECK_NE(&from, this);
  const Edge_Annotations* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Edge_Annotations>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bosdyn.api.graph_nav.Edge.Annotations)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bosdyn.api.graph_nav.Edge.Annotations)
    MergeFrom(*source);
  }
}

void Edge_Annotations::MergeFrom(const Edge_Annotations& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bosdyn.api.graph_nav.Edge.Annotations)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_vel_limit()) {
    _internal_mutable_vel_limit()->::bosdyn::api::SE2VelocityLimit::MergeFrom(from._internal_vel_limit());
  }
  if (from.has_stairs()) {
    _internal_mutable_stairs()->::bosdyn::api::graph_nav::Edge_Annotations_StairData::MergeFrom(from._internal_stairs());
  }
  if (from.has_require_alignment()) {
    _internal_mutable_require_alignment()->PROTOBUF_NAMESPACE_ID::BoolValue::MergeFrom(from._internal_require_alignment());
  }
  if (from.has_flat_ground()) {
    _internal_mutable_flat_ground()->PROTOBUF_NAMESPACE_ID::BoolValue::MergeFrom(from._internal_flat_ground());
  }
  if (from.has_ground_mu_hint()) {
    _internal_mutable_ground_mu_hint()->PROTOBUF_NAMESPACE_ID::DoubleValue::MergeFrom(from._internal_ground_mu_hint());
  }
  if (from.has_grated_floor()) {
    _internal_mutable_grated_floor()->PROTOBUF_NAMESPACE_ID::BoolValue::MergeFrom(from._internal_grated_floor());
  }
  if (from.direction_constraint() != 0) {
    _internal_set_direction_constraint(from._internal_direction_constraint());
  }
}

void Edge_Annotations::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bosdyn.api.graph_nav.Edge.Annotations)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Edge_Annotations::CopyFrom(const Edge_Annotations& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bosdyn.api.graph_nav.Edge.Annotations)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Edge_Annotations::IsInitialized() const {
  return true;
}

void Edge_Annotations::InternalSwap(Edge_Annotations* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Edge_Annotations, direction_constraint_)
      + sizeof(Edge_Annotations::direction_constraint_)
      - PROTOBUF_FIELD_OFFSET(Edge_Annotations, vel_limit_)>(
          reinterpret_cast<char*>(&vel_limit_),
          reinterpret_cast<char*>(&other->vel_limit_));
}

::PROTOBUF_NAMESPACE_ID::Metadata Edge_Annotations::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void Edge::InitAsDefaultInstance() {
  ::bosdyn::api::graph_nav::_Edge_default_instance_._instance.get_mutable()->id_ = const_cast< ::bosdyn::api::graph_nav::Edge_Id*>(
      ::bosdyn::api::graph_nav::Edge_Id::internal_default_instance());
  ::bosdyn::api::graph_nav::_Edge_default_instance_._instance.get_mutable()->from_tform_to_ = const_cast< ::bosdyn::api::SE3Pose*>(
      ::bosdyn::api::SE3Pose::internal_default_instance());
  ::bosdyn::api::graph_nav::_Edge_default_instance_._instance.get_mutable()->annotations_ = const_cast< ::bosdyn::api::graph_nav::Edge_Annotations*>(
      ::bosdyn::api::graph_nav::Edge_Annotations::internal_default_instance());
}
class Edge::_Internal {
 public:
  static const ::bosdyn::api::graph_nav::Edge_Id& id(const Edge* msg);
  static const ::bosdyn::api::SE3Pose& from_tform_to(const Edge* msg);
  static const ::bosdyn::api::graph_nav::Edge_Annotations& annotations(const Edge* msg);
};

const ::bosdyn::api::graph_nav::Edge_Id&
Edge::_Internal::id(const Edge* msg) {
  return *msg->id_;
}
const ::bosdyn::api::SE3Pose&
Edge::_Internal::from_tform_to(const Edge* msg) {
  return *msg->from_tform_to_;
}
const ::bosdyn::api::graph_nav::Edge_Annotations&
Edge::_Internal::annotations(const Edge* msg) {
  return *msg->annotations_;
}
void Edge::clear_from_tform_to() {
  if (GetArena() == nullptr && from_tform_to_ != nullptr) {
    delete from_tform_to_;
  }
  from_tform_to_ = nullptr;
}
Edge::Edge(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:bosdyn.api.graph_nav.Edge)
}
Edge::Edge(const Edge& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  snapshot_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_snapshot_id().empty()) {
    snapshot_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_snapshot_id(),
      GetArena());
  }
  if (from._internal_has_id()) {
    id_ = new ::bosdyn::api::graph_nav::Edge_Id(*from.id_);
  } else {
    id_ = nullptr;
  }
  if (from._internal_has_from_tform_to()) {
    from_tform_to_ = new ::bosdyn::api::SE3Pose(*from.from_tform_to_);
  } else {
    from_tform_to_ = nullptr;
  }
  if (from._internal_has_annotations()) {
    annotations_ = new ::bosdyn::api::graph_nav::Edge_Annotations(*from.annotations_);
  } else {
    annotations_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:bosdyn.api.graph_nav.Edge)
}

void Edge::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Edge_bosdyn_2fapi_2fgraph_5fnav_2fmap_2eproto.base);
  snapshot_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&annotations_) -
      reinterpret_cast<char*>(&id_)) + sizeof(annotations_));
}

Edge::~Edge() {
  // @@protoc_insertion_point(destructor:bosdyn.api.graph_nav.Edge)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Edge::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  snapshot_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete id_;
  if (this != internal_default_instance()) delete from_tform_to_;
  if (this != internal_default_instance()) delete annotations_;
}

void Edge::ArenaDtor(void* object) {
  Edge* _this = reinterpret_cast< Edge* >(object);
  (void)_this;
}
void Edge::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Edge::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Edge& Edge::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Edge_bosdyn_2fapi_2fgraph_5fnav_2fmap_2eproto.base);
  return *internal_default_instance();
}


void Edge::Clear() {
// @@protoc_insertion_point(message_clear_start:bosdyn.api.graph_nav.Edge)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  snapshot_id_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  if (GetArena() == nullptr && id_ != nullptr) {
    delete id_;
  }
  id_ = nullptr;
  if (GetArena() == nullptr && from_tform_to_ != nullptr) {
    delete from_tform_to_;
  }
  from_tform_to_ = nullptr;
  if (GetArena() == nullptr && annotations_ != nullptr) {
    delete annotations_;
  }
  annotations_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Edge::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .bosdyn.api.graph_nav.Edge.Id id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_id(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string snapshot_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_snapshot_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "bosdyn.api.graph_nav.Edge.snapshot_id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .bosdyn.api.SE3Pose from_tform_to = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_from_tform_to(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .bosdyn.api.graph_nav.Edge.Annotations annotations = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_annotations(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Edge::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:bosdyn.api.graph_nav.Edge)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .bosdyn.api.graph_nav.Edge.Id id = 1;
  if (this->has_id()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::id(this), target, stream);
  }

  // string snapshot_id = 2;
  if (this->snapshot_id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_snapshot_id().data(), static_cast<int>(this->_internal_snapshot_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "bosdyn.api.graph_nav.Edge.snapshot_id");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_snapshot_id(), target);
  }

  // .bosdyn.api.SE3Pose from_tform_to = 3;
  if (this->has_from_tform_to()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::from_tform_to(this), target, stream);
  }

  // .bosdyn.api.graph_nav.Edge.Annotations annotations = 4;
  if (this->has_annotations()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        4, _Internal::annotations(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:bosdyn.api.graph_nav.Edge)
  return target;
}

size_t Edge::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bosdyn.api.graph_nav.Edge)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string snapshot_id = 2;
  if (this->snapshot_id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_snapshot_id());
  }

  // .bosdyn.api.graph_nav.Edge.Id id = 1;
  if (this->has_id()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *id_);
  }

  // .bosdyn.api.SE3Pose from_tform_to = 3;
  if (this->has_from_tform_to()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *from_tform_to_);
  }

  // .bosdyn.api.graph_nav.Edge.Annotations annotations = 4;
  if (this->has_annotations()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *annotations_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Edge::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bosdyn.api.graph_nav.Edge)
  GOOGLE_DCHECK_NE(&from, this);
  const Edge* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Edge>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bosdyn.api.graph_nav.Edge)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bosdyn.api.graph_nav.Edge)
    MergeFrom(*source);
  }
}

void Edge::MergeFrom(const Edge& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bosdyn.api.graph_nav.Edge)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.snapshot_id().size() > 0) {
    _internal_set_snapshot_id(from._internal_snapshot_id());
  }
  if (from.has_id()) {
    _internal_mutable_id()->::bosdyn::api::graph_nav::Edge_Id::MergeFrom(from._internal_id());
  }
  if (from.has_from_tform_to()) {
    _internal_mutable_from_tform_to()->::bosdyn::api::SE3Pose::MergeFrom(from._internal_from_tform_to());
  }
  if (from.has_annotations()) {
    _internal_mutable_annotations()->::bosdyn::api::graph_nav::Edge_Annotations::MergeFrom(from._internal_annotations());
  }
}

void Edge::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bosdyn.api.graph_nav.Edge)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Edge::CopyFrom(const Edge& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bosdyn.api.graph_nav.Edge)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Edge::IsInitialized() const {
  return true;
}

void Edge::InternalSwap(Edge* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  snapshot_id_.Swap(&other->snapshot_id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Edge, annotations_)
      + sizeof(Edge::annotations_)
      - PROTOBUF_FIELD_OFFSET(Edge, id_)>(
          reinterpret_cast<char*>(&id_),
          reinterpret_cast<char*>(&other->id_));
}

::PROTOBUF_NAMESPACE_ID::Metadata Edge::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void EdgeSnapshot_Stance::InitAsDefaultInstance() {
  ::bosdyn::api::graph_nav::_EdgeSnapshot_Stance_default_instance_._instance.get_mutable()->timestamp_ = const_cast< PROTOBUF_NAMESPACE_ID::Timestamp*>(
      PROTOBUF_NAMESPACE_ID::Timestamp::internal_default_instance());
  ::bosdyn::api::graph_nav::_EdgeSnapshot_Stance_default_instance_._instance.get_mutable()->ko_tform_body_ = const_cast< ::bosdyn::api::SE3Pose*>(
      ::bosdyn::api::SE3Pose::internal_default_instance());
}
class EdgeSnapshot_Stance::_Internal {
 public:
  static const PROTOBUF_NAMESPACE_ID::Timestamp& timestamp(const EdgeSnapshot_Stance* msg);
  static const ::bosdyn::api::SE3Pose& ko_tform_body(const EdgeSnapshot_Stance* msg);
};

const PROTOBUF_NAMESPACE_ID::Timestamp&
EdgeSnapshot_Stance::_Internal::timestamp(const EdgeSnapshot_Stance* msg) {
  return *msg->timestamp_;
}
const ::bosdyn::api::SE3Pose&
EdgeSnapshot_Stance::_Internal::ko_tform_body(const EdgeSnapshot_Stance* msg) {
  return *msg->ko_tform_body_;
}
void EdgeSnapshot_Stance::clear_timestamp() {
  if (GetArena() == nullptr && timestamp_ != nullptr) {
    delete timestamp_;
  }
  timestamp_ = nullptr;
}
void EdgeSnapshot_Stance::clear_foot_states() {
  foot_states_.Clear();
}
void EdgeSnapshot_Stance::clear_ko_tform_body() {
  if (GetArena() == nullptr && ko_tform_body_ != nullptr) {
    delete ko_tform_body_;
  }
  ko_tform_body_ = nullptr;
}
EdgeSnapshot_Stance::EdgeSnapshot_Stance(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  foot_states_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:bosdyn.api.graph_nav.EdgeSnapshot.Stance)
}
EdgeSnapshot_Stance::EdgeSnapshot_Stance(const EdgeSnapshot_Stance& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      foot_states_(from.foot_states_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_timestamp()) {
    timestamp_ = new PROTOBUF_NAMESPACE_ID::Timestamp(*from.timestamp_);
  } else {
    timestamp_ = nullptr;
  }
  if (from._internal_has_ko_tform_body()) {
    ko_tform_body_ = new ::bosdyn::api::SE3Pose(*from.ko_tform_body_);
  } else {
    ko_tform_body_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:bosdyn.api.graph_nav.EdgeSnapshot.Stance)
}

void EdgeSnapshot_Stance::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_EdgeSnapshot_Stance_bosdyn_2fapi_2fgraph_5fnav_2fmap_2eproto.base);
  ::memset(&timestamp_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&ko_tform_body_) -
      reinterpret_cast<char*>(&timestamp_)) + sizeof(ko_tform_body_));
}

EdgeSnapshot_Stance::~EdgeSnapshot_Stance() {
  // @@protoc_insertion_point(destructor:bosdyn.api.graph_nav.EdgeSnapshot.Stance)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void EdgeSnapshot_Stance::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete timestamp_;
  if (this != internal_default_instance()) delete ko_tform_body_;
}

void EdgeSnapshot_Stance::ArenaDtor(void* object) {
  EdgeSnapshot_Stance* _this = reinterpret_cast< EdgeSnapshot_Stance* >(object);
  (void)_this;
}
void EdgeSnapshot_Stance::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void EdgeSnapshot_Stance::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const EdgeSnapshot_Stance& EdgeSnapshot_Stance::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_EdgeSnapshot_Stance_bosdyn_2fapi_2fgraph_5fnav_2fmap_2eproto.base);
  return *internal_default_instance();
}


void EdgeSnapshot_Stance::Clear() {
// @@protoc_insertion_point(message_clear_start:bosdyn.api.graph_nav.EdgeSnapshot.Stance)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  foot_states_.Clear();
  if (GetArena() == nullptr && timestamp_ != nullptr) {
    delete timestamp_;
  }
  timestamp_ = nullptr;
  if (GetArena() == nullptr && ko_tform_body_ != nullptr) {
    delete ko_tform_body_;
  }
  ko_tform_body_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* EdgeSnapshot_Stance::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .google.protobuf.Timestamp timestamp = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_timestamp(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .bosdyn.api.FootState foot_states = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_foot_states(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else goto handle_unusual;
        continue;
      // .bosdyn.api.SE3Pose ko_tform_body = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_ko_tform_body(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* EdgeSnapshot_Stance::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:bosdyn.api.graph_nav.EdgeSnapshot.Stance)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.protobuf.Timestamp timestamp = 1;
  if (this->has_timestamp()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::timestamp(this), target, stream);
  }

  // repeated .bosdyn.api.FootState foot_states = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_foot_states_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, this->_internal_foot_states(i), target, stream);
  }

  // .bosdyn.api.SE3Pose ko_tform_body = 3;
  if (this->has_ko_tform_body()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::ko_tform_body(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:bosdyn.api.graph_nav.EdgeSnapshot.Stance)
  return target;
}

size_t EdgeSnapshot_Stance::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bosdyn.api.graph_nav.EdgeSnapshot.Stance)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .bosdyn.api.FootState foot_states = 2;
  total_size += 1UL * this->_internal_foot_states_size();
  for (const auto& msg : this->foot_states_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // .google.protobuf.Timestamp timestamp = 1;
  if (this->has_timestamp()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *timestamp_);
  }

  // .bosdyn.api.SE3Pose ko_tform_body = 3;
  if (this->has_ko_tform_body()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *ko_tform_body_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void EdgeSnapshot_Stance::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bosdyn.api.graph_nav.EdgeSnapshot.Stance)
  GOOGLE_DCHECK_NE(&from, this);
  const EdgeSnapshot_Stance* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<EdgeSnapshot_Stance>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bosdyn.api.graph_nav.EdgeSnapshot.Stance)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bosdyn.api.graph_nav.EdgeSnapshot.Stance)
    MergeFrom(*source);
  }
}

void EdgeSnapshot_Stance::MergeFrom(const EdgeSnapshot_Stance& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bosdyn.api.graph_nav.EdgeSnapshot.Stance)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  foot_states_.MergeFrom(from.foot_states_);
  if (from.has_timestamp()) {
    _internal_mutable_timestamp()->PROTOBUF_NAMESPACE_ID::Timestamp::MergeFrom(from._internal_timestamp());
  }
  if (from.has_ko_tform_body()) {
    _internal_mutable_ko_tform_body()->::bosdyn::api::SE3Pose::MergeFrom(from._internal_ko_tform_body());
  }
}

void EdgeSnapshot_Stance::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bosdyn.api.graph_nav.EdgeSnapshot.Stance)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EdgeSnapshot_Stance::CopyFrom(const EdgeSnapshot_Stance& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bosdyn.api.graph_nav.EdgeSnapshot.Stance)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EdgeSnapshot_Stance::IsInitialized() const {
  return true;
}

void EdgeSnapshot_Stance::InternalSwap(EdgeSnapshot_Stance* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  foot_states_.InternalSwap(&other->foot_states_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(EdgeSnapshot_Stance, ko_tform_body_)
      + sizeof(EdgeSnapshot_Stance::ko_tform_body_)
      - PROTOBUF_FIELD_OFFSET(EdgeSnapshot_Stance, timestamp_)>(
          reinterpret_cast<char*>(&timestamp_),
          reinterpret_cast<char*>(&other->timestamp_));
}

::PROTOBUF_NAMESPACE_ID::Metadata EdgeSnapshot_Stance::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void EdgeSnapshot::InitAsDefaultInstance() {
}
class EdgeSnapshot::_Internal {
 public:
};

EdgeSnapshot::EdgeSnapshot(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  stances_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:bosdyn.api.graph_nav.EdgeSnapshot)
}
EdgeSnapshot::EdgeSnapshot(const EdgeSnapshot& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      stances_(from.stances_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_id().empty()) {
    id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_id(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:bosdyn.api.graph_nav.EdgeSnapshot)
}

void EdgeSnapshot::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_EdgeSnapshot_bosdyn_2fapi_2fgraph_5fnav_2fmap_2eproto.base);
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

EdgeSnapshot::~EdgeSnapshot() {
  // @@protoc_insertion_point(destructor:bosdyn.api.graph_nav.EdgeSnapshot)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void EdgeSnapshot::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void EdgeSnapshot::ArenaDtor(void* object) {
  EdgeSnapshot* _this = reinterpret_cast< EdgeSnapshot* >(object);
  (void)_this;
}
void EdgeSnapshot::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void EdgeSnapshot::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const EdgeSnapshot& EdgeSnapshot::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_EdgeSnapshot_bosdyn_2fapi_2fgraph_5fnav_2fmap_2eproto.base);
  return *internal_default_instance();
}


void EdgeSnapshot::Clear() {
// @@protoc_insertion_point(message_clear_start:bosdyn.api.graph_nav.EdgeSnapshot)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  stances_.Clear();
  id_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* EdgeSnapshot::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "bosdyn.api.graph_nav.EdgeSnapshot.id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .bosdyn.api.graph_nav.EdgeSnapshot.Stance stances = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_stances(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* EdgeSnapshot::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:bosdyn.api.graph_nav.EdgeSnapshot)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_id().data(), static_cast<int>(this->_internal_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "bosdyn.api.graph_nav.EdgeSnapshot.id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_id(), target);
  }

  // repeated .bosdyn.api.graph_nav.EdgeSnapshot.Stance stances = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_stances_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, this->_internal_stances(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:bosdyn.api.graph_nav.EdgeSnapshot)
  return target;
}

size_t EdgeSnapshot::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bosdyn.api.graph_nav.EdgeSnapshot)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .bosdyn.api.graph_nav.EdgeSnapshot.Stance stances = 2;
  total_size += 1UL * this->_internal_stances_size();
  for (const auto& msg : this->stances_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string id = 1;
  if (this->id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void EdgeSnapshot::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bosdyn.api.graph_nav.EdgeSnapshot)
  GOOGLE_DCHECK_NE(&from, this);
  const EdgeSnapshot* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<EdgeSnapshot>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bosdyn.api.graph_nav.EdgeSnapshot)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bosdyn.api.graph_nav.EdgeSnapshot)
    MergeFrom(*source);
  }
}

void EdgeSnapshot::MergeFrom(const EdgeSnapshot& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bosdyn.api.graph_nav.EdgeSnapshot)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  stances_.MergeFrom(from.stances_);
  if (from.id().size() > 0) {
    _internal_set_id(from._internal_id());
  }
}

void EdgeSnapshot::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bosdyn.api.graph_nav.EdgeSnapshot)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EdgeSnapshot::CopyFrom(const EdgeSnapshot& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bosdyn.api.graph_nav.EdgeSnapshot)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EdgeSnapshot::IsInitialized() const {
  return true;
}

void EdgeSnapshot::InternalSwap(EdgeSnapshot* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  stances_.InternalSwap(&other->stances_);
  id_.Swap(&other->id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata EdgeSnapshot::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void Graph::InitAsDefaultInstance() {
}
class Graph::_Internal {
 public:
};

Graph::Graph(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  waypoints_(arena),
  edges_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:bosdyn.api.graph_nav.Graph)
}
Graph::Graph(const Graph& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      waypoints_(from.waypoints_),
      edges_(from.edges_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:bosdyn.api.graph_nav.Graph)
}

void Graph::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Graph_bosdyn_2fapi_2fgraph_5fnav_2fmap_2eproto.base);
}

Graph::~Graph() {
  // @@protoc_insertion_point(destructor:bosdyn.api.graph_nav.Graph)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Graph::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void Graph::ArenaDtor(void* object) {
  Graph* _this = reinterpret_cast< Graph* >(object);
  (void)_this;
}
void Graph::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Graph::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Graph& Graph::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Graph_bosdyn_2fapi_2fgraph_5fnav_2fmap_2eproto.base);
  return *internal_default_instance();
}


void Graph::Clear() {
// @@protoc_insertion_point(message_clear_start:bosdyn.api.graph_nav.Graph)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  waypoints_.Clear();
  edges_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Graph::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .bosdyn.api.graph_nav.Waypoint waypoints = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_waypoints(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      // repeated .bosdyn.api.graph_nav.Edge edges = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_edges(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Graph::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:bosdyn.api.graph_nav.Graph)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .bosdyn.api.graph_nav.Waypoint waypoints = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_waypoints_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_waypoints(i), target, stream);
  }

  // repeated .bosdyn.api.graph_nav.Edge edges = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_edges_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, this->_internal_edges(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:bosdyn.api.graph_nav.Graph)
  return target;
}

size_t Graph::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bosdyn.api.graph_nav.Graph)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .bosdyn.api.graph_nav.Waypoint waypoints = 1;
  total_size += 1UL * this->_internal_waypoints_size();
  for (const auto& msg : this->waypoints_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .bosdyn.api.graph_nav.Edge edges = 2;
  total_size += 1UL * this->_internal_edges_size();
  for (const auto& msg : this->edges_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Graph::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bosdyn.api.graph_nav.Graph)
  GOOGLE_DCHECK_NE(&from, this);
  const Graph* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Graph>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bosdyn.api.graph_nav.Graph)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bosdyn.api.graph_nav.Graph)
    MergeFrom(*source);
  }
}

void Graph::MergeFrom(const Graph& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bosdyn.api.graph_nav.Graph)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  waypoints_.MergeFrom(from.waypoints_);
  edges_.MergeFrom(from.edges_);
}

void Graph::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bosdyn.api.graph_nav.Graph)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Graph::CopyFrom(const Graph& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bosdyn.api.graph_nav.Graph)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Graph::IsInitialized() const {
  return true;
}

void Graph::InternalSwap(Graph* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  waypoints_.InternalSwap(&other->waypoints_);
  edges_.InternalSwap(&other->edges_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Graph::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace graph_nav
}  // namespace api
}  // namespace bosdyn
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::bosdyn::api::graph_nav::Waypoint_Annotations_LocalizeRegion_Default* Arena::CreateMaybeMessage< ::bosdyn::api::graph_nav::Waypoint_Annotations_LocalizeRegion_Default >(Arena* arena) {
  return Arena::CreateMessageInternal< ::bosdyn::api::graph_nav::Waypoint_Annotations_LocalizeRegion_Default >(arena);
}
template<> PROTOBUF_NOINLINE ::bosdyn::api::graph_nav::Waypoint_Annotations_LocalizeRegion_Empty* Arena::CreateMaybeMessage< ::bosdyn::api::graph_nav::Waypoint_Annotations_LocalizeRegion_Empty >(Arena* arena) {
  return Arena::CreateMessageInternal< ::bosdyn::api::graph_nav::Waypoint_Annotations_LocalizeRegion_Empty >(arena);
}
template<> PROTOBUF_NOINLINE ::bosdyn::api::graph_nav::Waypoint_Annotations_LocalizeRegion_Circle2D* Arena::CreateMaybeMessage< ::bosdyn::api::graph_nav::Waypoint_Annotations_LocalizeRegion_Circle2D >(Arena* arena) {
  return Arena::CreateMessageInternal< ::bosdyn::api::graph_nav::Waypoint_Annotations_LocalizeRegion_Circle2D >(arena);
}
template<> PROTOBUF_NOINLINE ::bosdyn::api::graph_nav::Waypoint_Annotations_LocalizeRegion* Arena::CreateMaybeMessage< ::bosdyn::api::graph_nav::Waypoint_Annotations_LocalizeRegion >(Arena* arena) {
  return Arena::CreateMessageInternal< ::bosdyn::api::graph_nav::Waypoint_Annotations_LocalizeRegion >(arena);
}
template<> PROTOBUF_NOINLINE ::bosdyn::api::graph_nav::Waypoint_Annotations* Arena::CreateMaybeMessage< ::bosdyn::api::graph_nav::Waypoint_Annotations >(Arena* arena) {
  return Arena::CreateMessageInternal< ::bosdyn::api::graph_nav::Waypoint_Annotations >(arena);
}
template<> PROTOBUF_NOINLINE ::bosdyn::api::graph_nav::Waypoint* Arena::CreateMaybeMessage< ::bosdyn::api::graph_nav::Waypoint >(Arena* arena) {
  return Arena::CreateMessageInternal< ::bosdyn::api::graph_nav::Waypoint >(arena);
}
template<> PROTOBUF_NOINLINE ::bosdyn::api::graph_nav::WaypointSnapshot* Arena::CreateMaybeMessage< ::bosdyn::api::graph_nav::WaypointSnapshot >(Arena* arena) {
  return Arena::CreateMessageInternal< ::bosdyn::api::graph_nav::WaypointSnapshot >(arena);
}
template<> PROTOBUF_NOINLINE ::bosdyn::api::graph_nav::Edge_Id* Arena::CreateMaybeMessage< ::bosdyn::api::graph_nav::Edge_Id >(Arena* arena) {
  return Arena::CreateMessageInternal< ::bosdyn::api::graph_nav::Edge_Id >(arena);
}
template<> PROTOBUF_NOINLINE ::bosdyn::api::graph_nav::Edge_Annotations_StairData_StraightStaircase_Stair* Arena::CreateMaybeMessage< ::bosdyn::api::graph_nav::Edge_Annotations_StairData_StraightStaircase_Stair >(Arena* arena) {
  return Arena::CreateMessageInternal< ::bosdyn::api::graph_nav::Edge_Annotations_StairData_StraightStaircase_Stair >(arena);
}
template<> PROTOBUF_NOINLINE ::bosdyn::api::graph_nav::Edge_Annotations_StairData_StraightStaircase* Arena::CreateMaybeMessage< ::bosdyn::api::graph_nav::Edge_Annotations_StairData_StraightStaircase >(Arena* arena) {
  return Arena::CreateMessageInternal< ::bosdyn::api::graph_nav::Edge_Annotations_StairData_StraightStaircase >(arena);
}
template<> PROTOBUF_NOINLINE ::bosdyn::api::graph_nav::Edge_Annotations_StairData* Arena::CreateMaybeMessage< ::bosdyn::api::graph_nav::Edge_Annotations_StairData >(Arena* arena) {
  return Arena::CreateMessageInternal< ::bosdyn::api::graph_nav::Edge_Annotations_StairData >(arena);
}
template<> PROTOBUF_NOINLINE ::bosdyn::api::graph_nav::Edge_Annotations* Arena::CreateMaybeMessage< ::bosdyn::api::graph_nav::Edge_Annotations >(Arena* arena) {
  return Arena::CreateMessageInternal< ::bosdyn::api::graph_nav::Edge_Annotations >(arena);
}
template<> PROTOBUF_NOINLINE ::bosdyn::api::graph_nav::Edge* Arena::CreateMaybeMessage< ::bosdyn::api::graph_nav::Edge >(Arena* arena) {
  return Arena::CreateMessageInternal< ::bosdyn::api::graph_nav::Edge >(arena);
}
template<> PROTOBUF_NOINLINE ::bosdyn::api::graph_nav::EdgeSnapshot_Stance* Arena::CreateMaybeMessage< ::bosdyn::api::graph_nav::EdgeSnapshot_Stance >(Arena* arena) {
  return Arena::CreateMessageInternal< ::bosdyn::api::graph_nav::EdgeSnapshot_Stance >(arena);
}
template<> PROTOBUF_NOINLINE ::bosdyn::api::graph_nav::EdgeSnapshot* Arena::CreateMaybeMessage< ::bosdyn::api::graph_nav::EdgeSnapshot >(Arena* arena) {
  return Arena::CreateMessageInternal< ::bosdyn::api::graph_nav::EdgeSnapshot >(arena);
}
template<> PROTOBUF_NOINLINE ::bosdyn::api::graph_nav::Graph* Arena::CreateMaybeMessage< ::bosdyn::api::graph_nav::Graph >(Arena* arena) {
  return Arena::CreateMessageInternal< ::bosdyn::api::graph_nav::Graph >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
