// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: bosdyn/api/payload_registration.proto

#include "bosdyn/api/payload_registration.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_bosdyn_2fapi_2fpayload_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<4> scc_info_Payload_bosdyn_2fapi_2fpayload_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_bosdyn_2fapi_2fheader_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_RequestHeader_bosdyn_2fapi_2fheader_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_bosdyn_2fapi_2fheader_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<4> scc_info_ResponseHeader_bosdyn_2fapi_2fheader_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_bosdyn_2fapi_2frobot_5fid_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_SoftwareVersion_bosdyn_2fapi_2frobot_5fid_2eproto;
namespace bosdyn {
namespace api {
class RegisterPayloadRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<RegisterPayloadRequest> _instance;
} _RegisterPayloadRequest_default_instance_;
class RegisterPayloadResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<RegisterPayloadResponse> _instance;
} _RegisterPayloadResponse_default_instance_;
class UpdatePayloadVersionRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<UpdatePayloadVersionRequest> _instance;
} _UpdatePayloadVersionRequest_default_instance_;
class UpdatePayloadVersionResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<UpdatePayloadVersionResponse> _instance;
} _UpdatePayloadVersionResponse_default_instance_;
class GetPayloadAuthTokenRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetPayloadAuthTokenRequest> _instance;
} _GetPayloadAuthTokenRequest_default_instance_;
class GetPayloadAuthTokenResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetPayloadAuthTokenResponse> _instance;
} _GetPayloadAuthTokenResponse_default_instance_;
}  // namespace api
}  // namespace bosdyn
static void InitDefaultsscc_info_GetPayloadAuthTokenRequest_bosdyn_2fapi_2fpayload_5fregistration_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::bosdyn::api::_GetPayloadAuthTokenRequest_default_instance_;
    new (ptr) ::bosdyn::api::GetPayloadAuthTokenRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::bosdyn::api::GetPayloadAuthTokenRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_GetPayloadAuthTokenRequest_bosdyn_2fapi_2fpayload_5fregistration_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_GetPayloadAuthTokenRequest_bosdyn_2fapi_2fpayload_5fregistration_2eproto}, {
      &scc_info_RequestHeader_bosdyn_2fapi_2fheader_2eproto.base,}};

static void InitDefaultsscc_info_GetPayloadAuthTokenResponse_bosdyn_2fapi_2fpayload_5fregistration_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::bosdyn::api::_GetPayloadAuthTokenResponse_default_instance_;
    new (ptr) ::bosdyn::api::GetPayloadAuthTokenResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::bosdyn::api::GetPayloadAuthTokenResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_GetPayloadAuthTokenResponse_bosdyn_2fapi_2fpayload_5fregistration_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_GetPayloadAuthTokenResponse_bosdyn_2fapi_2fpayload_5fregistration_2eproto}, {
      &scc_info_ResponseHeader_bosdyn_2fapi_2fheader_2eproto.base,}};

static void InitDefaultsscc_info_RegisterPayloadRequest_bosdyn_2fapi_2fpayload_5fregistration_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::bosdyn::api::_RegisterPayloadRequest_default_instance_;
    new (ptr) ::bosdyn::api::RegisterPayloadRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::bosdyn::api::RegisterPayloadRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_RegisterPayloadRequest_bosdyn_2fapi_2fpayload_5fregistration_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, 0, InitDefaultsscc_info_RegisterPayloadRequest_bosdyn_2fapi_2fpayload_5fregistration_2eproto}, {
      &scc_info_RequestHeader_bosdyn_2fapi_2fheader_2eproto.base,
      &scc_info_Payload_bosdyn_2fapi_2fpayload_2eproto.base,}};

static void InitDefaultsscc_info_RegisterPayloadResponse_bosdyn_2fapi_2fpayload_5fregistration_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::bosdyn::api::_RegisterPayloadResponse_default_instance_;
    new (ptr) ::bosdyn::api::RegisterPayloadResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::bosdyn::api::RegisterPayloadResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_RegisterPayloadResponse_bosdyn_2fapi_2fpayload_5fregistration_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_RegisterPayloadResponse_bosdyn_2fapi_2fpayload_5fregistration_2eproto}, {
      &scc_info_ResponseHeader_bosdyn_2fapi_2fheader_2eproto.base,}};

static void InitDefaultsscc_info_UpdatePayloadVersionRequest_bosdyn_2fapi_2fpayload_5fregistration_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::bosdyn::api::_UpdatePayloadVersionRequest_default_instance_;
    new (ptr) ::bosdyn::api::UpdatePayloadVersionRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::bosdyn::api::UpdatePayloadVersionRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_UpdatePayloadVersionRequest_bosdyn_2fapi_2fpayload_5fregistration_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, 0, InitDefaultsscc_info_UpdatePayloadVersionRequest_bosdyn_2fapi_2fpayload_5fregistration_2eproto}, {
      &scc_info_RequestHeader_bosdyn_2fapi_2fheader_2eproto.base,
      &scc_info_SoftwareVersion_bosdyn_2fapi_2frobot_5fid_2eproto.base,}};

static void InitDefaultsscc_info_UpdatePayloadVersionResponse_bosdyn_2fapi_2fpayload_5fregistration_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::bosdyn::api::_UpdatePayloadVersionResponse_default_instance_;
    new (ptr) ::bosdyn::api::UpdatePayloadVersionResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::bosdyn::api::UpdatePayloadVersionResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_UpdatePayloadVersionResponse_bosdyn_2fapi_2fpayload_5fregistration_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_UpdatePayloadVersionResponse_bosdyn_2fapi_2fpayload_5fregistration_2eproto}, {
      &scc_info_ResponseHeader_bosdyn_2fapi_2fheader_2eproto.base,}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_bosdyn_2fapi_2fpayload_5fregistration_2eproto[6];
static const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* file_level_enum_descriptors_bosdyn_2fapi_2fpayload_5fregistration_2eproto[3];
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_bosdyn_2fapi_2fpayload_5fregistration_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_bosdyn_2fapi_2fpayload_5fregistration_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::bosdyn::api::RegisterPayloadRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::bosdyn::api::RegisterPayloadRequest, header_),
  PROTOBUF_FIELD_OFFSET(::bosdyn::api::RegisterPayloadRequest, payload_),
  PROTOBUF_FIELD_OFFSET(::bosdyn::api::RegisterPayloadRequest, payload_secret_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::bosdyn::api::RegisterPayloadResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::bosdyn::api::RegisterPayloadResponse, header_),
  PROTOBUF_FIELD_OFFSET(::bosdyn::api::RegisterPayloadResponse, status_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::bosdyn::api::UpdatePayloadVersionRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::bosdyn::api::UpdatePayloadVersionRequest, header_),
  PROTOBUF_FIELD_OFFSET(::bosdyn::api::UpdatePayloadVersionRequest, payload_guid_),
  PROTOBUF_FIELD_OFFSET(::bosdyn::api::UpdatePayloadVersionRequest, payload_secret_),
  PROTOBUF_FIELD_OFFSET(::bosdyn::api::UpdatePayloadVersionRequest, updated_version_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::bosdyn::api::UpdatePayloadVersionResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::bosdyn::api::UpdatePayloadVersionResponse, header_),
  PROTOBUF_FIELD_OFFSET(::bosdyn::api::UpdatePayloadVersionResponse, status_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::bosdyn::api::GetPayloadAuthTokenRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::bosdyn::api::GetPayloadAuthTokenRequest, header_),
  PROTOBUF_FIELD_OFFSET(::bosdyn::api::GetPayloadAuthTokenRequest, payload_guid_),
  PROTOBUF_FIELD_OFFSET(::bosdyn::api::GetPayloadAuthTokenRequest, payload_secret_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::bosdyn::api::GetPayloadAuthTokenResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::bosdyn::api::GetPayloadAuthTokenResponse, header_),
  PROTOBUF_FIELD_OFFSET(::bosdyn::api::GetPayloadAuthTokenResponse, status_),
  PROTOBUF_FIELD_OFFSET(::bosdyn::api::GetPayloadAuthTokenResponse, token_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::bosdyn::api::RegisterPayloadRequest)},
  { 8, -1, sizeof(::bosdyn::api::RegisterPayloadResponse)},
  { 15, -1, sizeof(::bosdyn::api::UpdatePayloadVersionRequest)},
  { 24, -1, sizeof(::bosdyn::api::UpdatePayloadVersionResponse)},
  { 31, -1, sizeof(::bosdyn::api::GetPayloadAuthTokenRequest)},
  { 39, -1, sizeof(::bosdyn::api::GetPayloadAuthTokenResponse)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::bosdyn::api::_RegisterPayloadRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::bosdyn::api::_RegisterPayloadResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::bosdyn::api::_UpdatePayloadVersionRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::bosdyn::api::_UpdatePayloadVersionResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::bosdyn::api::_GetPayloadAuthTokenRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::bosdyn::api::_GetPayloadAuthTokenResponse_default_instance_),
};

const char descriptor_table_protodef_bosdyn_2fapi_2fpayload_5fregistration_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n%bosdyn/api/payload_registration.proto\022"
  "\nbosdyn.api\032\030bosdyn/api/payload.proto\032\027b"
  "osdyn/api/header.proto\032\031bosdyn/api/robot"
  "_id.proto\"\201\001\n\026RegisterPayloadRequest\022)\n\006"
  "header\030\001 \001(\0132\031.bosdyn.api.RequestHeader\022"
  "$\n\007payload\030\002 \001(\0132\023.bosdyn.api.Payload\022\026\n"
  "\016payload_secret\030\003 \001(\t\"\311\001\n\027RegisterPayloa"
  "dResponse\022*\n\006header\030\001 \001(\0132\032.bosdyn.api.R"
  "esponseHeader\022:\n\006status\030\002 \001(\0162*.bosdyn.a"
  "pi.RegisterPayloadResponse.Status\"F\n\006Sta"
  "tus\022\022\n\016STATUS_UNKNOWN\020\000\022\r\n\tSTATUS_OK\020\001\022\031"
  "\n\025STATUS_ALREADY_EXISTS\020\002\"\254\001\n\033UpdatePayl"
  "oadVersionRequest\022)\n\006header\030\001 \001(\0132\031.bosd"
  "yn.api.RequestHeader\022\024\n\014payload_guid\030\002 \001"
  "(\t\022\026\n\016payload_secret\030\003 \001(\t\0224\n\017updated_ve"
  "rsion\030\004 \001(\0132\033.bosdyn.api.SoftwareVersion"
  "\"\363\001\n\034UpdatePayloadVersionResponse\022*\n\006hea"
  "der\030\001 \001(\0132\032.bosdyn.api.ResponseHeader\022\?\n"
  "\006status\030\002 \001(\0162/.bosdyn.api.UpdatePayload"
  "VersionResponse.Status\"f\n\006Status\022\022\n\016STAT"
  "US_UNKNOWN\020\000\022\r\n\tSTATUS_OK\020\001\022\031\n\025STATUS_DO"
  "ES_NOT_EXIST\020\002\022\036\n\032STATUS_INVALID_CREDENT"
  "IALS\020\003\"u\n\032GetPayloadAuthTokenRequest\022)\n\006"
  "header\030\001 \001(\0132\031.bosdyn.api.RequestHeader\022"
  "\024\n\014payload_guid\030\002 \001(\t\022\026\n\016payload_secret\030"
  "\003 \001(\t\"\210\002\n\033GetPayloadAuthTokenResponse\022*\n"
  "\006header\030\001 \001(\0132\032.bosdyn.api.ResponseHeade"
  "r\022>\n\006status\030\002 \001(\0162..bosdyn.api.GetPayloa"
  "dAuthTokenResponse.Status\022\r\n\005token\030\003 \001(\t"
  "\"n\n\006Status\022\022\n\016STATUS_UNKNOWN\020\000\022\r\n\tSTATUS"
  "_OK\020\001\022\036\n\032STATUS_INVALID_CREDENTIALS\020\002\022!\n"
  "\035STATUS_PAYLOAD_NOT_AUTHORIZED\020\003B\032B\030Payl"
  "oadRegistrationProtob\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_bosdyn_2fapi_2fpayload_5fregistration_2eproto_deps[3] = {
  &::descriptor_table_bosdyn_2fapi_2fheader_2eproto,
  &::descriptor_table_bosdyn_2fapi_2fpayload_2eproto,
  &::descriptor_table_bosdyn_2fapi_2frobot_5fid_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_bosdyn_2fapi_2fpayload_5fregistration_2eproto_sccs[6] = {
  &scc_info_GetPayloadAuthTokenRequest_bosdyn_2fapi_2fpayload_5fregistration_2eproto.base,
  &scc_info_GetPayloadAuthTokenResponse_bosdyn_2fapi_2fpayload_5fregistration_2eproto.base,
  &scc_info_RegisterPayloadRequest_bosdyn_2fapi_2fpayload_5fregistration_2eproto.base,
  &scc_info_RegisterPayloadResponse_bosdyn_2fapi_2fpayload_5fregistration_2eproto.base,
  &scc_info_UpdatePayloadVersionRequest_bosdyn_2fapi_2fpayload_5fregistration_2eproto.base,
  &scc_info_UpdatePayloadVersionResponse_bosdyn_2fapi_2fpayload_5fregistration_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_bosdyn_2fapi_2fpayload_5fregistration_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_bosdyn_2fapi_2fpayload_5fregistration_2eproto = {
  false, false, descriptor_table_protodef_bosdyn_2fapi_2fpayload_5fregistration_2eproto, "bosdyn/api/payload_registration.proto", 1308,
  &descriptor_table_bosdyn_2fapi_2fpayload_5fregistration_2eproto_once, descriptor_table_bosdyn_2fapi_2fpayload_5fregistration_2eproto_sccs, descriptor_table_bosdyn_2fapi_2fpayload_5fregistration_2eproto_deps, 6, 3,
  schemas, file_default_instances, TableStruct_bosdyn_2fapi_2fpayload_5fregistration_2eproto::offsets,
  file_level_metadata_bosdyn_2fapi_2fpayload_5fregistration_2eproto, 6, file_level_enum_descriptors_bosdyn_2fapi_2fpayload_5fregistration_2eproto, file_level_service_descriptors_bosdyn_2fapi_2fpayload_5fregistration_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_bosdyn_2fapi_2fpayload_5fregistration_2eproto = (static_cast<void>(::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_bosdyn_2fapi_2fpayload_5fregistration_2eproto)), true);
namespace bosdyn {
namespace api {
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* RegisterPayloadResponse_Status_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_bosdyn_2fapi_2fpayload_5fregistration_2eproto);
  return file_level_enum_descriptors_bosdyn_2fapi_2fpayload_5fregistration_2eproto[0];
}
bool RegisterPayloadResponse_Status_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr RegisterPayloadResponse_Status RegisterPayloadResponse::STATUS_UNKNOWN;
constexpr RegisterPayloadResponse_Status RegisterPayloadResponse::STATUS_OK;
constexpr RegisterPayloadResponse_Status RegisterPayloadResponse::STATUS_ALREADY_EXISTS;
constexpr RegisterPayloadResponse_Status RegisterPayloadResponse::Status_MIN;
constexpr RegisterPayloadResponse_Status RegisterPayloadResponse::Status_MAX;
constexpr int RegisterPayloadResponse::Status_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* UpdatePayloadVersionResponse_Status_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_bosdyn_2fapi_2fpayload_5fregistration_2eproto);
  return file_level_enum_descriptors_bosdyn_2fapi_2fpayload_5fregistration_2eproto[1];
}
bool UpdatePayloadVersionResponse_Status_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr UpdatePayloadVersionResponse_Status UpdatePayloadVersionResponse::STATUS_UNKNOWN;
constexpr UpdatePayloadVersionResponse_Status UpdatePayloadVersionResponse::STATUS_OK;
constexpr UpdatePayloadVersionResponse_Status UpdatePayloadVersionResponse::STATUS_DOES_NOT_EXIST;
constexpr UpdatePayloadVersionResponse_Status UpdatePayloadVersionResponse::STATUS_INVALID_CREDENTIALS;
constexpr UpdatePayloadVersionResponse_Status UpdatePayloadVersionResponse::Status_MIN;
constexpr UpdatePayloadVersionResponse_Status UpdatePayloadVersionResponse::Status_MAX;
constexpr int UpdatePayloadVersionResponse::Status_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* GetPayloadAuthTokenResponse_Status_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_bosdyn_2fapi_2fpayload_5fregistration_2eproto);
  return file_level_enum_descriptors_bosdyn_2fapi_2fpayload_5fregistration_2eproto[2];
}
bool GetPayloadAuthTokenResponse_Status_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr GetPayloadAuthTokenResponse_Status GetPayloadAuthTokenResponse::STATUS_UNKNOWN;
constexpr GetPayloadAuthTokenResponse_Status GetPayloadAuthTokenResponse::STATUS_OK;
constexpr GetPayloadAuthTokenResponse_Status GetPayloadAuthTokenResponse::STATUS_INVALID_CREDENTIALS;
constexpr GetPayloadAuthTokenResponse_Status GetPayloadAuthTokenResponse::STATUS_PAYLOAD_NOT_AUTHORIZED;
constexpr GetPayloadAuthTokenResponse_Status GetPayloadAuthTokenResponse::Status_MIN;
constexpr GetPayloadAuthTokenResponse_Status GetPayloadAuthTokenResponse::Status_MAX;
constexpr int GetPayloadAuthTokenResponse::Status_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)

// ===================================================================

void RegisterPayloadRequest::InitAsDefaultInstance() {
  ::bosdyn::api::_RegisterPayloadRequest_default_instance_._instance.get_mutable()->header_ = const_cast< ::bosdyn::api::RequestHeader*>(
      ::bosdyn::api::RequestHeader::internal_default_instance());
  ::bosdyn::api::_RegisterPayloadRequest_default_instance_._instance.get_mutable()->payload_ = const_cast< ::bosdyn::api::Payload*>(
      ::bosdyn::api::Payload::internal_default_instance());
}
class RegisterPayloadRequest::_Internal {
 public:
  static const ::bosdyn::api::RequestHeader& header(const RegisterPayloadRequest* msg);
  static const ::bosdyn::api::Payload& payload(const RegisterPayloadRequest* msg);
};

const ::bosdyn::api::RequestHeader&
RegisterPayloadRequest::_Internal::header(const RegisterPayloadRequest* msg) {
  return *msg->header_;
}
const ::bosdyn::api::Payload&
RegisterPayloadRequest::_Internal::payload(const RegisterPayloadRequest* msg) {
  return *msg->payload_;
}
void RegisterPayloadRequest::clear_header() {
  if (GetArena() == nullptr && header_ != nullptr) {
    delete header_;
  }
  header_ = nullptr;
}
void RegisterPayloadRequest::clear_payload() {
  if (GetArena() == nullptr && payload_ != nullptr) {
    delete payload_;
  }
  payload_ = nullptr;
}
RegisterPayloadRequest::RegisterPayloadRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:bosdyn.api.RegisterPayloadRequest)
}
RegisterPayloadRequest::RegisterPayloadRequest(const RegisterPayloadRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  payload_secret_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_payload_secret().empty()) {
    payload_secret_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_payload_secret(),
      GetArena());
  }
  if (from._internal_has_header()) {
    header_ = new ::bosdyn::api::RequestHeader(*from.header_);
  } else {
    header_ = nullptr;
  }
  if (from._internal_has_payload()) {
    payload_ = new ::bosdyn::api::Payload(*from.payload_);
  } else {
    payload_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:bosdyn.api.RegisterPayloadRequest)
}

void RegisterPayloadRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_RegisterPayloadRequest_bosdyn_2fapi_2fpayload_5fregistration_2eproto.base);
  payload_secret_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&header_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&payload_) -
      reinterpret_cast<char*>(&header_)) + sizeof(payload_));
}

RegisterPayloadRequest::~RegisterPayloadRequest() {
  // @@protoc_insertion_point(destructor:bosdyn.api.RegisterPayloadRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void RegisterPayloadRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  payload_secret_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete header_;
  if (this != internal_default_instance()) delete payload_;
}

void RegisterPayloadRequest::ArenaDtor(void* object) {
  RegisterPayloadRequest* _this = reinterpret_cast< RegisterPayloadRequest* >(object);
  (void)_this;
}
void RegisterPayloadRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void RegisterPayloadRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const RegisterPayloadRequest& RegisterPayloadRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_RegisterPayloadRequest_bosdyn_2fapi_2fpayload_5fregistration_2eproto.base);
  return *internal_default_instance();
}


void RegisterPayloadRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:bosdyn.api.RegisterPayloadRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  payload_secret_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  if (GetArena() == nullptr && header_ != nullptr) {
    delete header_;
  }
  header_ = nullptr;
  if (GetArena() == nullptr && payload_ != nullptr) {
    delete payload_;
  }
  payload_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RegisterPayloadRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .bosdyn.api.RequestHeader header = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_header(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .bosdyn.api.Payload payload = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_payload(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string payload_secret = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_payload_secret();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "bosdyn.api.RegisterPayloadRequest.payload_secret"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* RegisterPayloadRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:bosdyn.api.RegisterPayloadRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .bosdyn.api.RequestHeader header = 1;
  if (this->has_header()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::header(this), target, stream);
  }

  // .bosdyn.api.Payload payload = 2;
  if (this->has_payload()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::payload(this), target, stream);
  }

  // string payload_secret = 3;
  if (this->payload_secret().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_payload_secret().data(), static_cast<int>(this->_internal_payload_secret().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "bosdyn.api.RegisterPayloadRequest.payload_secret");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_payload_secret(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:bosdyn.api.RegisterPayloadRequest)
  return target;
}

size_t RegisterPayloadRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bosdyn.api.RegisterPayloadRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string payload_secret = 3;
  if (this->payload_secret().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_payload_secret());
  }

  // .bosdyn.api.RequestHeader header = 1;
  if (this->has_header()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *header_);
  }

  // .bosdyn.api.Payload payload = 2;
  if (this->has_payload()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *payload_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RegisterPayloadRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bosdyn.api.RegisterPayloadRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const RegisterPayloadRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<RegisterPayloadRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bosdyn.api.RegisterPayloadRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bosdyn.api.RegisterPayloadRequest)
    MergeFrom(*source);
  }
}

void RegisterPayloadRequest::MergeFrom(const RegisterPayloadRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bosdyn.api.RegisterPayloadRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.payload_secret().size() > 0) {
    _internal_set_payload_secret(from._internal_payload_secret());
  }
  if (from.has_header()) {
    _internal_mutable_header()->::bosdyn::api::RequestHeader::MergeFrom(from._internal_header());
  }
  if (from.has_payload()) {
    _internal_mutable_payload()->::bosdyn::api::Payload::MergeFrom(from._internal_payload());
  }
}

void RegisterPayloadRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bosdyn.api.RegisterPayloadRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RegisterPayloadRequest::CopyFrom(const RegisterPayloadRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bosdyn.api.RegisterPayloadRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RegisterPayloadRequest::IsInitialized() const {
  return true;
}

void RegisterPayloadRequest::InternalSwap(RegisterPayloadRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  payload_secret_.Swap(&other->payload_secret_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(RegisterPayloadRequest, payload_)
      + sizeof(RegisterPayloadRequest::payload_)
      - PROTOBUF_FIELD_OFFSET(RegisterPayloadRequest, header_)>(
          reinterpret_cast<char*>(&header_),
          reinterpret_cast<char*>(&other->header_));
}

::PROTOBUF_NAMESPACE_ID::Metadata RegisterPayloadRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void RegisterPayloadResponse::InitAsDefaultInstance() {
  ::bosdyn::api::_RegisterPayloadResponse_default_instance_._instance.get_mutable()->header_ = const_cast< ::bosdyn::api::ResponseHeader*>(
      ::bosdyn::api::ResponseHeader::internal_default_instance());
}
class RegisterPayloadResponse::_Internal {
 public:
  static const ::bosdyn::api::ResponseHeader& header(const RegisterPayloadResponse* msg);
};

const ::bosdyn::api::ResponseHeader&
RegisterPayloadResponse::_Internal::header(const RegisterPayloadResponse* msg) {
  return *msg->header_;
}
void RegisterPayloadResponse::clear_header() {
  if (GetArena() == nullptr && header_ != nullptr) {
    delete header_;
  }
  header_ = nullptr;
}
RegisterPayloadResponse::RegisterPayloadResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:bosdyn.api.RegisterPayloadResponse)
}
RegisterPayloadResponse::RegisterPayloadResponse(const RegisterPayloadResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_header()) {
    header_ = new ::bosdyn::api::ResponseHeader(*from.header_);
  } else {
    header_ = nullptr;
  }
  status_ = from.status_;
  // @@protoc_insertion_point(copy_constructor:bosdyn.api.RegisterPayloadResponse)
}

void RegisterPayloadResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_RegisterPayloadResponse_bosdyn_2fapi_2fpayload_5fregistration_2eproto.base);
  ::memset(&header_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&status_) -
      reinterpret_cast<char*>(&header_)) + sizeof(status_));
}

RegisterPayloadResponse::~RegisterPayloadResponse() {
  // @@protoc_insertion_point(destructor:bosdyn.api.RegisterPayloadResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void RegisterPayloadResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete header_;
}

void RegisterPayloadResponse::ArenaDtor(void* object) {
  RegisterPayloadResponse* _this = reinterpret_cast< RegisterPayloadResponse* >(object);
  (void)_this;
}
void RegisterPayloadResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void RegisterPayloadResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const RegisterPayloadResponse& RegisterPayloadResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_RegisterPayloadResponse_bosdyn_2fapi_2fpayload_5fregistration_2eproto.base);
  return *internal_default_instance();
}


void RegisterPayloadResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:bosdyn.api.RegisterPayloadResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && header_ != nullptr) {
    delete header_;
  }
  header_ = nullptr;
  status_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RegisterPayloadResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .bosdyn.api.ResponseHeader header = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_header(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .bosdyn.api.RegisterPayloadResponse.Status status = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_status(static_cast<::bosdyn::api::RegisterPayloadResponse_Status>(val));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* RegisterPayloadResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:bosdyn.api.RegisterPayloadResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .bosdyn.api.ResponseHeader header = 1;
  if (this->has_header()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::header(this), target, stream);
  }

  // .bosdyn.api.RegisterPayloadResponse.Status status = 2;
  if (this->status() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      2, this->_internal_status(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:bosdyn.api.RegisterPayloadResponse)
  return target;
}

size_t RegisterPayloadResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bosdyn.api.RegisterPayloadResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .bosdyn.api.ResponseHeader header = 1;
  if (this->has_header()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *header_);
  }

  // .bosdyn.api.RegisterPayloadResponse.Status status = 2;
  if (this->status() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_status());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RegisterPayloadResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bosdyn.api.RegisterPayloadResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const RegisterPayloadResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<RegisterPayloadResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bosdyn.api.RegisterPayloadResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bosdyn.api.RegisterPayloadResponse)
    MergeFrom(*source);
  }
}

void RegisterPayloadResponse::MergeFrom(const RegisterPayloadResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bosdyn.api.RegisterPayloadResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_header()) {
    _internal_mutable_header()->::bosdyn::api::ResponseHeader::MergeFrom(from._internal_header());
  }
  if (from.status() != 0) {
    _internal_set_status(from._internal_status());
  }
}

void RegisterPayloadResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bosdyn.api.RegisterPayloadResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RegisterPayloadResponse::CopyFrom(const RegisterPayloadResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bosdyn.api.RegisterPayloadResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RegisterPayloadResponse::IsInitialized() const {
  return true;
}

void RegisterPayloadResponse::InternalSwap(RegisterPayloadResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(RegisterPayloadResponse, status_)
      + sizeof(RegisterPayloadResponse::status_)
      - PROTOBUF_FIELD_OFFSET(RegisterPayloadResponse, header_)>(
          reinterpret_cast<char*>(&header_),
          reinterpret_cast<char*>(&other->header_));
}

::PROTOBUF_NAMESPACE_ID::Metadata RegisterPayloadResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void UpdatePayloadVersionRequest::InitAsDefaultInstance() {
  ::bosdyn::api::_UpdatePayloadVersionRequest_default_instance_._instance.get_mutable()->header_ = const_cast< ::bosdyn::api::RequestHeader*>(
      ::bosdyn::api::RequestHeader::internal_default_instance());
  ::bosdyn::api::_UpdatePayloadVersionRequest_default_instance_._instance.get_mutable()->updated_version_ = const_cast< ::bosdyn::api::SoftwareVersion*>(
      ::bosdyn::api::SoftwareVersion::internal_default_instance());
}
class UpdatePayloadVersionRequest::_Internal {
 public:
  static const ::bosdyn::api::RequestHeader& header(const UpdatePayloadVersionRequest* msg);
  static const ::bosdyn::api::SoftwareVersion& updated_version(const UpdatePayloadVersionRequest* msg);
};

const ::bosdyn::api::RequestHeader&
UpdatePayloadVersionRequest::_Internal::header(const UpdatePayloadVersionRequest* msg) {
  return *msg->header_;
}
const ::bosdyn::api::SoftwareVersion&
UpdatePayloadVersionRequest::_Internal::updated_version(const UpdatePayloadVersionRequest* msg) {
  return *msg->updated_version_;
}
void UpdatePayloadVersionRequest::clear_header() {
  if (GetArena() == nullptr && header_ != nullptr) {
    delete header_;
  }
  header_ = nullptr;
}
void UpdatePayloadVersionRequest::clear_updated_version() {
  if (GetArena() == nullptr && updated_version_ != nullptr) {
    delete updated_version_;
  }
  updated_version_ = nullptr;
}
UpdatePayloadVersionRequest::UpdatePayloadVersionRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:bosdyn.api.UpdatePayloadVersionRequest)
}
UpdatePayloadVersionRequest::UpdatePayloadVersionRequest(const UpdatePayloadVersionRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  payload_guid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_payload_guid().empty()) {
    payload_guid_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_payload_guid(),
      GetArena());
  }
  payload_secret_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_payload_secret().empty()) {
    payload_secret_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_payload_secret(),
      GetArena());
  }
  if (from._internal_has_header()) {
    header_ = new ::bosdyn::api::RequestHeader(*from.header_);
  } else {
    header_ = nullptr;
  }
  if (from._internal_has_updated_version()) {
    updated_version_ = new ::bosdyn::api::SoftwareVersion(*from.updated_version_);
  } else {
    updated_version_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:bosdyn.api.UpdatePayloadVersionRequest)
}

void UpdatePayloadVersionRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_UpdatePayloadVersionRequest_bosdyn_2fapi_2fpayload_5fregistration_2eproto.base);
  payload_guid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  payload_secret_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&header_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&updated_version_) -
      reinterpret_cast<char*>(&header_)) + sizeof(updated_version_));
}

UpdatePayloadVersionRequest::~UpdatePayloadVersionRequest() {
  // @@protoc_insertion_point(destructor:bosdyn.api.UpdatePayloadVersionRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void UpdatePayloadVersionRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  payload_guid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  payload_secret_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete header_;
  if (this != internal_default_instance()) delete updated_version_;
}

void UpdatePayloadVersionRequest::ArenaDtor(void* object) {
  UpdatePayloadVersionRequest* _this = reinterpret_cast< UpdatePayloadVersionRequest* >(object);
  (void)_this;
}
void UpdatePayloadVersionRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void UpdatePayloadVersionRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const UpdatePayloadVersionRequest& UpdatePayloadVersionRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_UpdatePayloadVersionRequest_bosdyn_2fapi_2fpayload_5fregistration_2eproto.base);
  return *internal_default_instance();
}


void UpdatePayloadVersionRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:bosdyn.api.UpdatePayloadVersionRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  payload_guid_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  payload_secret_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  if (GetArena() == nullptr && header_ != nullptr) {
    delete header_;
  }
  header_ = nullptr;
  if (GetArena() == nullptr && updated_version_ != nullptr) {
    delete updated_version_;
  }
  updated_version_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UpdatePayloadVersionRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .bosdyn.api.RequestHeader header = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_header(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string payload_guid = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_payload_guid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "bosdyn.api.UpdatePayloadVersionRequest.payload_guid"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string payload_secret = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_payload_secret();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "bosdyn.api.UpdatePayloadVersionRequest.payload_secret"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .bosdyn.api.SoftwareVersion updated_version = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_updated_version(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* UpdatePayloadVersionRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:bosdyn.api.UpdatePayloadVersionRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .bosdyn.api.RequestHeader header = 1;
  if (this->has_header()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::header(this), target, stream);
  }

  // string payload_guid = 2;
  if (this->payload_guid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_payload_guid().data(), static_cast<int>(this->_internal_payload_guid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "bosdyn.api.UpdatePayloadVersionRequest.payload_guid");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_payload_guid(), target);
  }

  // string payload_secret = 3;
  if (this->payload_secret().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_payload_secret().data(), static_cast<int>(this->_internal_payload_secret().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "bosdyn.api.UpdatePayloadVersionRequest.payload_secret");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_payload_secret(), target);
  }

  // .bosdyn.api.SoftwareVersion updated_version = 4;
  if (this->has_updated_version()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        4, _Internal::updated_version(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:bosdyn.api.UpdatePayloadVersionRequest)
  return target;
}

size_t UpdatePayloadVersionRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bosdyn.api.UpdatePayloadVersionRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string payload_guid = 2;
  if (this->payload_guid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_payload_guid());
  }

  // string payload_secret = 3;
  if (this->payload_secret().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_payload_secret());
  }

  // .bosdyn.api.RequestHeader header = 1;
  if (this->has_header()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *header_);
  }

  // .bosdyn.api.SoftwareVersion updated_version = 4;
  if (this->has_updated_version()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *updated_version_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UpdatePayloadVersionRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bosdyn.api.UpdatePayloadVersionRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const UpdatePayloadVersionRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<UpdatePayloadVersionRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bosdyn.api.UpdatePayloadVersionRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bosdyn.api.UpdatePayloadVersionRequest)
    MergeFrom(*source);
  }
}

void UpdatePayloadVersionRequest::MergeFrom(const UpdatePayloadVersionRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bosdyn.api.UpdatePayloadVersionRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.payload_guid().size() > 0) {
    _internal_set_payload_guid(from._internal_payload_guid());
  }
  if (from.payload_secret().size() > 0) {
    _internal_set_payload_secret(from._internal_payload_secret());
  }
  if (from.has_header()) {
    _internal_mutable_header()->::bosdyn::api::RequestHeader::MergeFrom(from._internal_header());
  }
  if (from.has_updated_version()) {
    _internal_mutable_updated_version()->::bosdyn::api::SoftwareVersion::MergeFrom(from._internal_updated_version());
  }
}

void UpdatePayloadVersionRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bosdyn.api.UpdatePayloadVersionRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UpdatePayloadVersionRequest::CopyFrom(const UpdatePayloadVersionRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bosdyn.api.UpdatePayloadVersionRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdatePayloadVersionRequest::IsInitialized() const {
  return true;
}

void UpdatePayloadVersionRequest::InternalSwap(UpdatePayloadVersionRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  payload_guid_.Swap(&other->payload_guid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  payload_secret_.Swap(&other->payload_secret_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(UpdatePayloadVersionRequest, updated_version_)
      + sizeof(UpdatePayloadVersionRequest::updated_version_)
      - PROTOBUF_FIELD_OFFSET(UpdatePayloadVersionRequest, header_)>(
          reinterpret_cast<char*>(&header_),
          reinterpret_cast<char*>(&other->header_));
}

::PROTOBUF_NAMESPACE_ID::Metadata UpdatePayloadVersionRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void UpdatePayloadVersionResponse::InitAsDefaultInstance() {
  ::bosdyn::api::_UpdatePayloadVersionResponse_default_instance_._instance.get_mutable()->header_ = const_cast< ::bosdyn::api::ResponseHeader*>(
      ::bosdyn::api::ResponseHeader::internal_default_instance());
}
class UpdatePayloadVersionResponse::_Internal {
 public:
  static const ::bosdyn::api::ResponseHeader& header(const UpdatePayloadVersionResponse* msg);
};

const ::bosdyn::api::ResponseHeader&
UpdatePayloadVersionResponse::_Internal::header(const UpdatePayloadVersionResponse* msg) {
  return *msg->header_;
}
void UpdatePayloadVersionResponse::clear_header() {
  if (GetArena() == nullptr && header_ != nullptr) {
    delete header_;
  }
  header_ = nullptr;
}
UpdatePayloadVersionResponse::UpdatePayloadVersionResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:bosdyn.api.UpdatePayloadVersionResponse)
}
UpdatePayloadVersionResponse::UpdatePayloadVersionResponse(const UpdatePayloadVersionResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_header()) {
    header_ = new ::bosdyn::api::ResponseHeader(*from.header_);
  } else {
    header_ = nullptr;
  }
  status_ = from.status_;
  // @@protoc_insertion_point(copy_constructor:bosdyn.api.UpdatePayloadVersionResponse)
}

void UpdatePayloadVersionResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_UpdatePayloadVersionResponse_bosdyn_2fapi_2fpayload_5fregistration_2eproto.base);
  ::memset(&header_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&status_) -
      reinterpret_cast<char*>(&header_)) + sizeof(status_));
}

UpdatePayloadVersionResponse::~UpdatePayloadVersionResponse() {
  // @@protoc_insertion_point(destructor:bosdyn.api.UpdatePayloadVersionResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void UpdatePayloadVersionResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete header_;
}

void UpdatePayloadVersionResponse::ArenaDtor(void* object) {
  UpdatePayloadVersionResponse* _this = reinterpret_cast< UpdatePayloadVersionResponse* >(object);
  (void)_this;
}
void UpdatePayloadVersionResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void UpdatePayloadVersionResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const UpdatePayloadVersionResponse& UpdatePayloadVersionResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_UpdatePayloadVersionResponse_bosdyn_2fapi_2fpayload_5fregistration_2eproto.base);
  return *internal_default_instance();
}


void UpdatePayloadVersionResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:bosdyn.api.UpdatePayloadVersionResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && header_ != nullptr) {
    delete header_;
  }
  header_ = nullptr;
  status_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UpdatePayloadVersionResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .bosdyn.api.ResponseHeader header = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_header(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .bosdyn.api.UpdatePayloadVersionResponse.Status status = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_status(static_cast<::bosdyn::api::UpdatePayloadVersionResponse_Status>(val));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* UpdatePayloadVersionResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:bosdyn.api.UpdatePayloadVersionResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .bosdyn.api.ResponseHeader header = 1;
  if (this->has_header()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::header(this), target, stream);
  }

  // .bosdyn.api.UpdatePayloadVersionResponse.Status status = 2;
  if (this->status() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      2, this->_internal_status(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:bosdyn.api.UpdatePayloadVersionResponse)
  return target;
}

size_t UpdatePayloadVersionResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bosdyn.api.UpdatePayloadVersionResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .bosdyn.api.ResponseHeader header = 1;
  if (this->has_header()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *header_);
  }

  // .bosdyn.api.UpdatePayloadVersionResponse.Status status = 2;
  if (this->status() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_status());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UpdatePayloadVersionResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bosdyn.api.UpdatePayloadVersionResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const UpdatePayloadVersionResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<UpdatePayloadVersionResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bosdyn.api.UpdatePayloadVersionResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bosdyn.api.UpdatePayloadVersionResponse)
    MergeFrom(*source);
  }
}

void UpdatePayloadVersionResponse::MergeFrom(const UpdatePayloadVersionResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bosdyn.api.UpdatePayloadVersionResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_header()) {
    _internal_mutable_header()->::bosdyn::api::ResponseHeader::MergeFrom(from._internal_header());
  }
  if (from.status() != 0) {
    _internal_set_status(from._internal_status());
  }
}

void UpdatePayloadVersionResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bosdyn.api.UpdatePayloadVersionResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UpdatePayloadVersionResponse::CopyFrom(const UpdatePayloadVersionResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bosdyn.api.UpdatePayloadVersionResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdatePayloadVersionResponse::IsInitialized() const {
  return true;
}

void UpdatePayloadVersionResponse::InternalSwap(UpdatePayloadVersionResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(UpdatePayloadVersionResponse, status_)
      + sizeof(UpdatePayloadVersionResponse::status_)
      - PROTOBUF_FIELD_OFFSET(UpdatePayloadVersionResponse, header_)>(
          reinterpret_cast<char*>(&header_),
          reinterpret_cast<char*>(&other->header_));
}

::PROTOBUF_NAMESPACE_ID::Metadata UpdatePayloadVersionResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GetPayloadAuthTokenRequest::InitAsDefaultInstance() {
  ::bosdyn::api::_GetPayloadAuthTokenRequest_default_instance_._instance.get_mutable()->header_ = const_cast< ::bosdyn::api::RequestHeader*>(
      ::bosdyn::api::RequestHeader::internal_default_instance());
}
class GetPayloadAuthTokenRequest::_Internal {
 public:
  static const ::bosdyn::api::RequestHeader& header(const GetPayloadAuthTokenRequest* msg);
};

const ::bosdyn::api::RequestHeader&
GetPayloadAuthTokenRequest::_Internal::header(const GetPayloadAuthTokenRequest* msg) {
  return *msg->header_;
}
void GetPayloadAuthTokenRequest::clear_header() {
  if (GetArena() == nullptr && header_ != nullptr) {
    delete header_;
  }
  header_ = nullptr;
}
GetPayloadAuthTokenRequest::GetPayloadAuthTokenRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:bosdyn.api.GetPayloadAuthTokenRequest)
}
GetPayloadAuthTokenRequest::GetPayloadAuthTokenRequest(const GetPayloadAuthTokenRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  payload_guid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_payload_guid().empty()) {
    payload_guid_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_payload_guid(),
      GetArena());
  }
  payload_secret_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_payload_secret().empty()) {
    payload_secret_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_payload_secret(),
      GetArena());
  }
  if (from._internal_has_header()) {
    header_ = new ::bosdyn::api::RequestHeader(*from.header_);
  } else {
    header_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:bosdyn.api.GetPayloadAuthTokenRequest)
}

void GetPayloadAuthTokenRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GetPayloadAuthTokenRequest_bosdyn_2fapi_2fpayload_5fregistration_2eproto.base);
  payload_guid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  payload_secret_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  header_ = nullptr;
}

GetPayloadAuthTokenRequest::~GetPayloadAuthTokenRequest() {
  // @@protoc_insertion_point(destructor:bosdyn.api.GetPayloadAuthTokenRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetPayloadAuthTokenRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  payload_guid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  payload_secret_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete header_;
}

void GetPayloadAuthTokenRequest::ArenaDtor(void* object) {
  GetPayloadAuthTokenRequest* _this = reinterpret_cast< GetPayloadAuthTokenRequest* >(object);
  (void)_this;
}
void GetPayloadAuthTokenRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetPayloadAuthTokenRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetPayloadAuthTokenRequest& GetPayloadAuthTokenRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetPayloadAuthTokenRequest_bosdyn_2fapi_2fpayload_5fregistration_2eproto.base);
  return *internal_default_instance();
}


void GetPayloadAuthTokenRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:bosdyn.api.GetPayloadAuthTokenRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  payload_guid_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  payload_secret_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  if (GetArena() == nullptr && header_ != nullptr) {
    delete header_;
  }
  header_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetPayloadAuthTokenRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .bosdyn.api.RequestHeader header = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_header(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string payload_guid = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_payload_guid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "bosdyn.api.GetPayloadAuthTokenRequest.payload_guid"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string payload_secret = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_payload_secret();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "bosdyn.api.GetPayloadAuthTokenRequest.payload_secret"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetPayloadAuthTokenRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:bosdyn.api.GetPayloadAuthTokenRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .bosdyn.api.RequestHeader header = 1;
  if (this->has_header()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::header(this), target, stream);
  }

  // string payload_guid = 2;
  if (this->payload_guid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_payload_guid().data(), static_cast<int>(this->_internal_payload_guid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "bosdyn.api.GetPayloadAuthTokenRequest.payload_guid");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_payload_guid(), target);
  }

  // string payload_secret = 3;
  if (this->payload_secret().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_payload_secret().data(), static_cast<int>(this->_internal_payload_secret().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "bosdyn.api.GetPayloadAuthTokenRequest.payload_secret");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_payload_secret(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:bosdyn.api.GetPayloadAuthTokenRequest)
  return target;
}

size_t GetPayloadAuthTokenRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bosdyn.api.GetPayloadAuthTokenRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string payload_guid = 2;
  if (this->payload_guid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_payload_guid());
  }

  // string payload_secret = 3;
  if (this->payload_secret().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_payload_secret());
  }

  // .bosdyn.api.RequestHeader header = 1;
  if (this->has_header()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *header_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetPayloadAuthTokenRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bosdyn.api.GetPayloadAuthTokenRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetPayloadAuthTokenRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetPayloadAuthTokenRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bosdyn.api.GetPayloadAuthTokenRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bosdyn.api.GetPayloadAuthTokenRequest)
    MergeFrom(*source);
  }
}

void GetPayloadAuthTokenRequest::MergeFrom(const GetPayloadAuthTokenRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bosdyn.api.GetPayloadAuthTokenRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.payload_guid().size() > 0) {
    _internal_set_payload_guid(from._internal_payload_guid());
  }
  if (from.payload_secret().size() > 0) {
    _internal_set_payload_secret(from._internal_payload_secret());
  }
  if (from.has_header()) {
    _internal_mutable_header()->::bosdyn::api::RequestHeader::MergeFrom(from._internal_header());
  }
}

void GetPayloadAuthTokenRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bosdyn.api.GetPayloadAuthTokenRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetPayloadAuthTokenRequest::CopyFrom(const GetPayloadAuthTokenRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bosdyn.api.GetPayloadAuthTokenRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetPayloadAuthTokenRequest::IsInitialized() const {
  return true;
}

void GetPayloadAuthTokenRequest::InternalSwap(GetPayloadAuthTokenRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  payload_guid_.Swap(&other->payload_guid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  payload_secret_.Swap(&other->payload_secret_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(header_, other->header_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetPayloadAuthTokenRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GetPayloadAuthTokenResponse::InitAsDefaultInstance() {
  ::bosdyn::api::_GetPayloadAuthTokenResponse_default_instance_._instance.get_mutable()->header_ = const_cast< ::bosdyn::api::ResponseHeader*>(
      ::bosdyn::api::ResponseHeader::internal_default_instance());
}
class GetPayloadAuthTokenResponse::_Internal {
 public:
  static const ::bosdyn::api::ResponseHeader& header(const GetPayloadAuthTokenResponse* msg);
};

const ::bosdyn::api::ResponseHeader&
GetPayloadAuthTokenResponse::_Internal::header(const GetPayloadAuthTokenResponse* msg) {
  return *msg->header_;
}
void GetPayloadAuthTokenResponse::clear_header() {
  if (GetArena() == nullptr && header_ != nullptr) {
    delete header_;
  }
  header_ = nullptr;
}
GetPayloadAuthTokenResponse::GetPayloadAuthTokenResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:bosdyn.api.GetPayloadAuthTokenResponse)
}
GetPayloadAuthTokenResponse::GetPayloadAuthTokenResponse(const GetPayloadAuthTokenResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  token_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_token().empty()) {
    token_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_token(),
      GetArena());
  }
  if (from._internal_has_header()) {
    header_ = new ::bosdyn::api::ResponseHeader(*from.header_);
  } else {
    header_ = nullptr;
  }
  status_ = from.status_;
  // @@protoc_insertion_point(copy_constructor:bosdyn.api.GetPayloadAuthTokenResponse)
}

void GetPayloadAuthTokenResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GetPayloadAuthTokenResponse_bosdyn_2fapi_2fpayload_5fregistration_2eproto.base);
  token_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&header_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&status_) -
      reinterpret_cast<char*>(&header_)) + sizeof(status_));
}

GetPayloadAuthTokenResponse::~GetPayloadAuthTokenResponse() {
  // @@protoc_insertion_point(destructor:bosdyn.api.GetPayloadAuthTokenResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetPayloadAuthTokenResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  token_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete header_;
}

void GetPayloadAuthTokenResponse::ArenaDtor(void* object) {
  GetPayloadAuthTokenResponse* _this = reinterpret_cast< GetPayloadAuthTokenResponse* >(object);
  (void)_this;
}
void GetPayloadAuthTokenResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetPayloadAuthTokenResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetPayloadAuthTokenResponse& GetPayloadAuthTokenResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetPayloadAuthTokenResponse_bosdyn_2fapi_2fpayload_5fregistration_2eproto.base);
  return *internal_default_instance();
}


void GetPayloadAuthTokenResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:bosdyn.api.GetPayloadAuthTokenResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  token_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  if (GetArena() == nullptr && header_ != nullptr) {
    delete header_;
  }
  header_ = nullptr;
  status_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetPayloadAuthTokenResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .bosdyn.api.ResponseHeader header = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_header(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .bosdyn.api.GetPayloadAuthTokenResponse.Status status = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_status(static_cast<::bosdyn::api::GetPayloadAuthTokenResponse_Status>(val));
        } else goto handle_unusual;
        continue;
      // string token = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_token();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "bosdyn.api.GetPayloadAuthTokenResponse.token"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetPayloadAuthTokenResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:bosdyn.api.GetPayloadAuthTokenResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .bosdyn.api.ResponseHeader header = 1;
  if (this->has_header()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::header(this), target, stream);
  }

  // .bosdyn.api.GetPayloadAuthTokenResponse.Status status = 2;
  if (this->status() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      2, this->_internal_status(), target);
  }

  // string token = 3;
  if (this->token().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_token().data(), static_cast<int>(this->_internal_token().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "bosdyn.api.GetPayloadAuthTokenResponse.token");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_token(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:bosdyn.api.GetPayloadAuthTokenResponse)
  return target;
}

size_t GetPayloadAuthTokenResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bosdyn.api.GetPayloadAuthTokenResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string token = 3;
  if (this->token().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_token());
  }

  // .bosdyn.api.ResponseHeader header = 1;
  if (this->has_header()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *header_);
  }

  // .bosdyn.api.GetPayloadAuthTokenResponse.Status status = 2;
  if (this->status() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_status());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetPayloadAuthTokenResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bosdyn.api.GetPayloadAuthTokenResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const GetPayloadAuthTokenResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetPayloadAuthTokenResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bosdyn.api.GetPayloadAuthTokenResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bosdyn.api.GetPayloadAuthTokenResponse)
    MergeFrom(*source);
  }
}

void GetPayloadAuthTokenResponse::MergeFrom(const GetPayloadAuthTokenResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bosdyn.api.GetPayloadAuthTokenResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.token().size() > 0) {
    _internal_set_token(from._internal_token());
  }
  if (from.has_header()) {
    _internal_mutable_header()->::bosdyn::api::ResponseHeader::MergeFrom(from._internal_header());
  }
  if (from.status() != 0) {
    _internal_set_status(from._internal_status());
  }
}

void GetPayloadAuthTokenResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bosdyn.api.GetPayloadAuthTokenResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetPayloadAuthTokenResponse::CopyFrom(const GetPayloadAuthTokenResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bosdyn.api.GetPayloadAuthTokenResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetPayloadAuthTokenResponse::IsInitialized() const {
  return true;
}

void GetPayloadAuthTokenResponse::InternalSwap(GetPayloadAuthTokenResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  token_.Swap(&other->token_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GetPayloadAuthTokenResponse, status_)
      + sizeof(GetPayloadAuthTokenResponse::status_)
      - PROTOBUF_FIELD_OFFSET(GetPayloadAuthTokenResponse, header_)>(
          reinterpret_cast<char*>(&header_),
          reinterpret_cast<char*>(&other->header_));
}

::PROTOBUF_NAMESPACE_ID::Metadata GetPayloadAuthTokenResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace api
}  // namespace bosdyn
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::bosdyn::api::RegisterPayloadRequest* Arena::CreateMaybeMessage< ::bosdyn::api::RegisterPayloadRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::bosdyn::api::RegisterPayloadRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::bosdyn::api::RegisterPayloadResponse* Arena::CreateMaybeMessage< ::bosdyn::api::RegisterPayloadResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::bosdyn::api::RegisterPayloadResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::bosdyn::api::UpdatePayloadVersionRequest* Arena::CreateMaybeMessage< ::bosdyn::api::UpdatePayloadVersionRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::bosdyn::api::UpdatePayloadVersionRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::bosdyn::api::UpdatePayloadVersionResponse* Arena::CreateMaybeMessage< ::bosdyn::api::UpdatePayloadVersionResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::bosdyn::api::UpdatePayloadVersionResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::bosdyn::api::GetPayloadAuthTokenRequest* Arena::CreateMaybeMessage< ::bosdyn::api::GetPayloadAuthTokenRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::bosdyn::api::GetPayloadAuthTokenRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::bosdyn::api::GetPayloadAuthTokenResponse* Arena::CreateMaybeMessage< ::bosdyn::api::GetPayloadAuthTokenResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::bosdyn::api::GetPayloadAuthTokenResponse >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
